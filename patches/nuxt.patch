diff --git a/dist/app/compat/interval.d.ts b/dist/app/compat/interval.d.ts
index 9c88d28c5ee24c46b4b23354106a16c2764b2c13..b9909ed310e782fb871a58845d12f7b291b15b2c 100644
--- a/dist/app/compat/interval.d.ts
+++ b/dist/app/compat/interval.d.ts
@@ -1 +1 @@
-export declare const setInterval: (((handler: TimerHandler, timeout?: number, ...arguments: any[]) => number) & typeof globalThis.setInterval) | (() => void);
+export declare const setInterval: typeof globalThis.setInterval | (() => void);
diff --git a/dist/app/compat/interval.js b/dist/app/compat/interval.js
index 484356f26e0df2a4a55dddc9e9a3873b80b36837..93d0da41f95a97b4d5456a010e4c0dc2a991416f 100644
--- a/dist/app/compat/interval.js
+++ b/dist/app/compat/interval.js
@@ -1,6 +1,6 @@
 import { createError } from "../composables/error.js";
 const intervalError = "[nuxt] `setInterval` should not be used on the server. Consider wrapping it with an `onNuxtReady`, `onBeforeMount` or `onMounted` lifecycle hook, or ensure you only call it in the browser by checking `import.meta.client`.";
-export const setInterval = import.meta.client ? window.setInterval : () => {
+export const setInterval = import.meta.client ? globalThis.setInterval : () => {
   if (import.meta.dev) {
     throw createError({
       statusCode: 500,
diff --git a/dist/app/components/client-only.d.ts b/dist/app/components/client-only.d.ts
index 57cc2c294e911310f97b73ee4a788d692653890a..67897283994572f9335730fd359c60a0bd353a88 100644
--- a/dist/app/components/client-only.d.ts
+++ b/dist/app/components/client-only.d.ts
@@ -1,13 +1,13 @@
-import type { ComponentOptions, InjectionKey, SlotsType, VNode } from 'vue';
+import type { ComponentOptions, InjectionKey, RendererNode, SlotsType, VNode } from 'vue';
 export declare const clientOnlySymbol: InjectionKey<boolean>;
 declare const _default: import("vue").DefineComponent<{
     placeholder?: any;
     fallback?: any;
     placeholderTag?: any;
     fallbackTag?: any;
-}, () => VNode<import("vue").RendererNode, import("vue").RendererElement, {
+}, () => VNode<RendererNode, import("vue").RendererElement, {
     [key: string]: any;
-}> | VNode<import("vue").RendererNode, import("vue").RendererElement, {
+}> | VNode<RendererNode, import("vue").RendererElement, {
     [key: string]: any;
 }>[] | undefined, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<{
     placeholder?: any;
@@ -24,3 +24,5 @@ declare const _default: import("vue").DefineComponent<{
 }>, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
 export default _default;
 export declare function createClientOnly<T extends ComponentOptions>(component: T): any;
+export declare function isStartFragment(element: RendererNode): boolean;
+export declare function isEndFragment(element: RendererNode): boolean;
diff --git a/dist/app/components/client-only.js b/dist/app/components/client-only.js
index 19e76ad081b5ffe8aaa9cd073f8e8bab95d9ddeb..54a2141a77d02017ba8b8a562e2abcc4fb154bf0 100644
--- a/dist/app/components/client-only.js
+++ b/dist/app/components/client-only.js
@@ -1,8 +1,8 @@
-import { cloneVNode, createElementBlock, defineComponent, getCurrentInstance, h, onMounted, provide, shallowRef } from "vue";
+import { cloneVNode, createElementBlock, createStaticVNode, defineComponent, getCurrentInstance, h, onMounted, provide, shallowRef } from "vue";
 import { isPromise } from "@vue/shared";
 import { useNuxtApp } from "../nuxt.js";
 import ServerPlaceholder from "./server-placeholder.js";
-import { elToStaticVNode } from "./utils.js";
+import { getFragmentHTML } from "./utils.js";
 export const clientOnlySymbol = Symbol.for("nuxt:client-only");
 const STATIC_DIV = "<div></div>";
 export default defineComponent({
@@ -128,3 +128,16 @@ function extractDirectives(instance) {
   instance.vnode.dirs = null;
   return directives;
 }
+function elToStaticVNode(el, staticNodeFallback) {
+  const fragment = el ? getFragmentHTML(el) : staticNodeFallback ? [staticNodeFallback] : void 0;
+  if (fragment) {
+    return createStaticVNode(fragment.join(""), fragment.length);
+  }
+  return h("div");
+}
+export function isStartFragment(element) {
+  return element.nodeName === "#comment" && element.nodeValue === "[";
+}
+export function isEndFragment(element) {
+  return element.nodeName === "#comment" && element.nodeValue === "]";
+}
diff --git a/dist/app/components/error-404.d.vue.ts b/dist/app/components/error-404.d.vue.ts
new file mode 100644
index 0000000000000000000000000000000000000000..18e0addfa5ec8d826b534463e5dda5328647753b
--- /dev/null
+++ b/dist/app/components/error-404.d.vue.ts
@@ -0,0 +1,16 @@
+declare const _default: import("vue").DefineComponent<{}, {
+    $props: Partial<typeof props>;
+    appName: string;
+    statusCode: number;
+    statusMessage: string;
+    description: string;
+    backHome: string;
+}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<{}> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
+export default _default;
+declare const props: {
+    readonly appName: string;
+    readonly statusCode: number;
+    readonly statusMessage: string;
+    readonly description: string;
+    readonly backHome: string;
+};
diff --git a/dist/app/components/error-500.d.vue.ts b/dist/app/components/error-500.d.vue.ts
new file mode 100644
index 0000000000000000000000000000000000000000..9b6012a8aed8168868099f61e9cff8e41e58d86d
--- /dev/null
+++ b/dist/app/components/error-500.d.vue.ts
@@ -0,0 +1,16 @@
+declare const _default: import("vue").DefineComponent<{}, {
+    $props: Partial<typeof props>;
+    appName: string;
+    statusCode: number;
+    statusMessage: string;
+    description: string;
+    refresh: string;
+}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<{}> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
+export default _default;
+declare const props: {
+    readonly appName: string;
+    readonly statusCode: number;
+    readonly statusMessage: string;
+    readonly description: string;
+    readonly refresh: string;
+};
diff --git a/dist/app/components/error-dev.d.vue.ts b/dist/app/components/error-dev.d.vue.ts
new file mode 100644
index 0000000000000000000000000000000000000000..8856ada5797a4bd2838610755b3a8756293056dc
--- /dev/null
+++ b/dist/app/components/error-dev.d.vue.ts
@@ -0,0 +1,16 @@
+declare const _default: import("vue").DefineComponent<{}, {
+    $props: Partial<typeof props>;
+    appName: string;
+    statusCode: number;
+    statusMessage: string;
+    description: string;
+    stack: string;
+}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<{}> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
+export default _default;
+declare const props: {
+    readonly appName: string;
+    readonly statusCode: number;
+    readonly statusMessage: string;
+    readonly description: string;
+    readonly stack: string;
+};
diff --git a/dist/app/components/error-dev.vue b/dist/app/components/error-dev.vue
index 77833df60927cdf86f5abb19db1afd879e7e2454..f5bdd41993afda03107986007d329297a9351211 100644
--- a/dist/app/components/error-dev.vue
+++ b/dist/app/components/error-dev.vue
@@ -38,7 +38,7 @@ useHead({
 </script>
 
 <template>
-<div class="antialiased bg-white dark:bg-[#020420] dark:text-white flex flex-col font-sans min-h-screen pt-12 px-10 text-black"><h1 class="font-medium mb-4 sm:text-8xl text-6xl" v-text="statusCode" /><p class="font-light leading-tight mb-8 sm:text-2xl text-xl" v-text="description" /><a href="https://nuxt.com/docs/getting-started/error-handling?utm_source=nuxt-error-dev-page" target="_blank" class="absolute font-medium hover:text-[#00DC82] hover:underline inline-block mx-auto sm:right-6 text-sm top-6 underline-offset-3">Customize this page</a><div class="bg-gray-50/50 border border-b-0 border-black/5 dark:bg-white/5 dark:border-white/10 flex-1 h-auto overflow-y-auto rounded-t-md"><div class="font-light leading-tight p-8 text-xl z-10" v-html="stack" /></div></div>
+<div class="antialiased bg-white dark:bg-[#020420] dark:text-white flex flex-col font-sans min-h-screen pt-12 px-10 text-black"><h1 class="font-medium mb-4 sm:text-8xl text-6xl" v-text="statusCode" /><p class="font-light leading-tight mb-8 sm:text-2xl text-xl" v-text="description" /><a href="https://nuxt.com/docs/4.x/getting-started/error-handling?utm_source=nuxt-error-dev-page" target="_blank" class="absolute font-medium hover:text-[#00DC82] hover:underline inline-block mx-auto sm:right-6 text-sm top-6 underline-offset-3">Customize this page</a><div class="bg-gray-50/50 border border-b-0 border-black/5 dark:bg-white/5 dark:border-white/10 flex-1 h-auto overflow-y-auto rounded-t-md"><div class="font-light leading-tight p-8 text-xl z-10" v-html="stack" /></div></div>
 </template>
 
 <style scoped>
diff --git a/dist/app/components/island-renderer.d.ts b/dist/app/components/island-renderer.d.ts
deleted file mode 100644
index 33ebee4e499af20ebae33ab7489f144ca7f9253a..0000000000000000000000000000000000000000
diff --git a/dist/app/components/island-renderer.js b/dist/app/components/island-renderer.js
deleted file mode 100644
index 29d6a08a9f611f63a14a420ff1445b70a45379d4..0000000000000000000000000000000000000000
diff --git a/dist/app/components/nuxt-error-boundary.d.vue.ts b/dist/app/components/nuxt-error-boundary.d.vue.ts
new file mode 100644
index 0000000000000000000000000000000000000000..fbb3299fabe8ffcd878dbcb3d7b39e6b4150eb55
--- /dev/null
+++ b/dist/app/components/nuxt-error-boundary.d.vue.ts
@@ -0,0 +1,23 @@
+type __VLS_Slots = {
+    error(props: {
+        error: Error;
+        clearError: () => void;
+    }): any;
+    default(): any;
+};
+declare function clearError(): void;
+declare const __VLS_component: import("vue").DefineComponent<{}, {
+    error: import("vue").ShallowRef<Error | null, Error | null>;
+    clearError: typeof clearError;
+}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
+    error: (error: Error) => any;
+}, string, import("vue").PublicProps, Readonly<{}> & Readonly<{
+    onError?: ((error: Error) => any) | undefined;
+}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
+declare const _default: __VLS_WithSlots<typeof __VLS_component, __VLS_Slots>;
+export default _default;
+type __VLS_WithSlots<T, S> = T & {
+    new (): {
+        $slots: S;
+    };
+};
diff --git a/dist/app/components/nuxt-error-page.d.vue.ts b/dist/app/components/nuxt-error-page.d.vue.ts
new file mode 100644
index 0000000000000000000000000000000000000000..5cb618069ebd066479456059e1f08de4a4ede8a6
--- /dev/null
+++ b/dist/app/components/nuxt-error-page.d.vue.ts
@@ -0,0 +1,8 @@
+declare const _default: import("vue").DefineComponent<{}, {
+    $props: Partial<typeof props>;
+    error?: Record<string, any> | undefined;
+}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<{}> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
+export default _default;
+declare const props: {
+    readonly error?: Record<string, any> | undefined;
+};
diff --git a/dist/app/components/nuxt-island.d.ts b/dist/app/components/nuxt-island.d.ts
index 7fb9a5fe489c1a03f8bfeccb6574628302905c1b..40ffe00c2af77b60f831ee89591e57b2e038962a 100644
--- a/dist/app/components/nuxt-island.d.ts
+++ b/dist/app/components/nuxt-island.d.ts
@@ -1,4 +1,4 @@
-import type { PropType, RendererNode, VNode } from 'vue';
+import type { PropType } from 'vue';
 declare const _default: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
     name: {
         type: StringConstructor;
@@ -25,13 +25,7 @@ declare const _default: import("vue").DefineComponent<import("vue").ExtractPropT
         type: BooleanConstructor;
         default: boolean;
     };
-}>, (_ctx: any, _cache: any) => (VNode<RendererNode, import("vue").RendererElement, {
-    [key: string]: any;
-}> | VNode<RendererNode, import("vue").RendererElement, {
-    [key: string]: any;
-}>[])[] | VNode<any, any, {
-    [key: string]: any;
-}>[], {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "error"[], "error", import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
+}>, () => any, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "error"[], "error", import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
     name: {
         type: StringConstructor;
         required: true;
diff --git a/dist/app/components/nuxt-island.js b/dist/app/components/nuxt-island.js
index 71ace1b1242a03419444f5fee57f676a3d7332a7..9ebf6bcb32f58fd8aa9bbf0b932665deccf2b94f 100644
--- a/dist/app/components/nuxt-island.js
+++ b/dist/app/components/nuxt-island.js
@@ -1,42 +1,31 @@
-import { Fragment, Teleport, computed, createStaticVNode, createVNode, defineComponent, getCurrentInstance, h, nextTick, onBeforeUnmount, onMounted, ref, shallowRef, toRaw, watch, withMemo } from "vue";
+import { computed, defineComponent, getCurrentInstance, onBeforeUnmount, onMounted, ref, shallowRef, useId, watch } from "vue";
 import { debounce } from "perfect-debounce";
 import { hash } from "ohash";
 import { appendResponseHeader } from "h3";
 import { randomUUID } from "uncrypto";
 import { joinURL, withQuery } from "ufo";
+import { renderOnigiri } from "vue-onigiri/runtime/deserialize";
+import { join } from "pathe";
 import { useNuxtApp, useRuntimeConfig } from "../nuxt.js";
+import { createError } from "../composables/error.js";
 import { prerenderRoutes, useRequestEvent } from "../composables/ssr.js";
 import { injectHead } from "../composables/head.js";
-import { getFragmentHTML, isEndFragment, isStartFragment } from "./utils.js";
-import { appBaseURL, remoteComponentIslands, selectiveClient } from "#build/nuxt.config.mjs";
+import { remoteComponentIslands } from "#build/nuxt.config.mjs";
+const viteFetch = import.meta.server ? import.meta.dev ? (src, exportName) => import("#build/dist/server/server.mjs").then((r) => r.executeFile(src)).then((r) => {
+  return r[exportName];
+}) : (
+  // todo path association between server and client chunks
+  ((src, exportName) => import("virtual:vue-onigiri").then((r) => {
+    console.log(src, exportName);
+    return r.default.get(src + "__" + exportName);
+  }))
+) : (src) => import(
+  /* @vite-ignore */
+  join(src.replace("/app", ""))
+).then((r) => r.default || r);
 const pKey = "_islandPromises";
-const SSR_UID_RE = /data-island-uid="([^"]*)"/;
-const DATA_ISLAND_UID_RE = /data-island-uid(="")?(?!="[^"])/g;
-const SLOTNAME_RE = /data-island-slot="([^"]*)"/g;
-const SLOT_FALLBACK_RE = / data-island-slot="([^"]*)"[^>]*>/g;
-const ISLAND_SCOPE_ID_RE = /^<[^> ]*/;
 let id = 1;
 const getId = import.meta.client ? () => (id++).toString() : randomUUID;
-const components = import.meta.client ? /* @__PURE__ */ new Map() : void 0;
-async function loadComponents(source = appBaseURL, paths) {
-  if (!paths) {
-    return;
-  }
-  const promises = [];
-  for (const [component, item] of Object.entries(paths)) {
-    if (!components.has(component)) {
-      promises.push((async () => {
-        const chunkSource = joinURL(source, item.chunk);
-        const c = await import(
-          /* @vite-ignore */
-          chunkSource
-        ).then((m) => m.default || m);
-        components.set(component, c);
-      })());
-    }
-  }
-  await Promise.all(promises);
-}
 export default defineComponent({
   name: "NuxtIsland",
   inheritAttrs: false,
@@ -68,20 +57,18 @@ export default defineComponent({
     }
   },
   emits: ["error"],
-  async setup(props, { slots, expose, emit }) {
-    let canTeleport = import.meta.server;
-    const teleportKey = shallowRef(0);
-    const key = shallowRef(0);
-    const canLoadClientComponent = computed(() => selectiveClient && (props.dangerouslyLoadClientComponents || !props.source));
+  async setup(props, { expose, emit }) {
+    const teleportKey = ref(0);
     const error = ref(null);
     const config = useRuntimeConfig();
     const nuxtApp = useNuxtApp();
-    const filteredProps = computed(() => props.props ? Object.fromEntries(Object.entries(props.props).filter(([key2]) => !key2.startsWith("data-v-"))) : {});
+    const filteredProps = computed(() => props.props ? Object.fromEntries(Object.entries(props.props).filter(([key]) => !key.startsWith("data-v-"))) : {});
     const hashId = computed(() => hash([props.name, filteredProps.value, props.context, props.source]).replace(/[-_]/g, ""));
     const instance = getCurrentInstance();
     const event = useRequestEvent();
+    const ast = ref(nuxtApp.payload.data[`${props.name}_${hashId.value}`]?.ast);
     let activeHead;
-    const eventFetch = import.meta.server ? event.fetch : import.meta.dev ? $fetch.raw : globalThis.fetch;
+    const eventFetch = import.meta.server ? event.fetch : globalThis.fetch;
     const mounted = shallowRef(false);
     onMounted(() => {
       mounted.value = true;
@@ -92,100 +79,31 @@ export default defineComponent({
         activeHead.dispose();
       }
     });
-    function setPayload(key2, result) {
+    function setPayload(key, result) {
       const toRevive = {};
-      if (result.props) {
-        toRevive.props = result.props;
-      }
-      if (result.slots) {
-        toRevive.slots = result.slots;
-      }
-      if (result.components) {
-        toRevive.components = result.components;
-      }
       if (result.head) {
         toRevive.head = result.head;
       }
-      nuxtApp.payload.data[key2] = {
+      if (result.ast) {
+        toRevive.ast = result.ast;
+      }
+      nuxtApp.payload.data[key] = {
         __nuxt_island: {
-          key: key2,
+          key,
           ...import.meta.server && import.meta.prerender ? {} : { params: { ...props.context, props: props.props ? JSON.stringify(props.props) : void 0 } },
           result: toRevive
         },
         ...result
       };
     }
-    const payloads = {};
-    if (instance.vnode.el) {
-      const slots2 = toRaw(nuxtApp.payload.data[`${props.name}_${hashId.value}`])?.slots;
-      if (slots2) {
-        payloads.slots = slots2;
-      }
-      if (selectiveClient) {
-        const components2 = toRaw(nuxtApp.payload.data[`${props.name}_${hashId.value}`])?.components;
-        if (components2) {
-          payloads.components = components2;
-        }
-      }
-    }
-    const ssrHTML = ref("");
-    if (import.meta.client && instance.vnode?.el) {
-      if (import.meta.dev) {
-        let currentEl = instance.vnode.el;
-        let startEl = null;
-        let isFirstElement = true;
-        while (currentEl) {
-          if (isEndFragment(currentEl)) {
-            if (startEl !== currentEl.previousSibling) {
-              console.warn(`[\`Server components(and islands)\`] "${props.name}" must have a single root element. (HTML comments are considered elements as well.)`);
-            }
-            break;
-          } else if (!isStartFragment(currentEl) && isFirstElement) {
-            isFirstElement = false;
-            if (currentEl.nodeType === 1) {
-              startEl = currentEl;
-            }
-          }
-          currentEl = currentEl.nextSibling;
-        }
-      }
-      ssrHTML.value = getFragmentHTML(instance.vnode.el, true)?.join("") || "";
-      const key2 = `${props.name}_${hashId.value}`;
-      nuxtApp.payload.data[key2] ||= {};
-      nuxtApp.payload.data[key2].html = ssrHTML.value.replaceAll(new RegExp(`data-island-uid="${ssrHTML.value.match(SSR_UID_RE)?.[1] || ""}"`, "g"), `data-island-uid=""`);
-    }
-    const uid = ref(ssrHTML.value.match(SSR_UID_RE)?.[1] || getId());
-    const currentSlots = new Set(Object.keys(slots));
-    const availableSlots = computed(() => new Set([...ssrHTML.value.matchAll(SLOTNAME_RE)].map((m) => m[1])));
-    const html = computed(() => {
-      let html2 = ssrHTML.value;
-      if (props.scopeId) {
-        html2 = html2.replace(ISLAND_SCOPE_ID_RE, (full) => full + " " + props.scopeId);
-      }
-      if (import.meta.client && !canLoadClientComponent.value) {
-        for (const [key2, value] of Object.entries(payloads.components || {})) {
-          html2 = html2.replace(new RegExp(` data-island-uid="${uid.value}" data-island-component="${key2}"[^>]*>`), (full) => {
-            return full + value.html;
-          });
-        }
-      }
-      if (payloads.slots) {
-        return html2.replaceAll(SLOT_FALLBACK_RE, (full, slotName) => {
-          if (!currentSlots.has(slotName)) {
-            return full + (payloads.slots?.[slotName]?.fallback || "");
-          }
-          return full;
-        });
-      }
-      return html2;
-    });
+    const uid = ref(useId() || getId());
     const head = injectHead();
     async function _fetchComponent(force = false) {
-      const key2 = `${props.name}_${hashId.value}`;
-      if (!force && nuxtApp.payload.data[key2]?.html) {
-        return nuxtApp.payload.data[key2];
+      const key = `${props.name}_${hashId.value}`;
+      if (!force && nuxtApp.payload.data[key]?.html) {
+        return nuxtApp.payload.data[key];
       }
-      const url = remoteComponentIslands && props.source ? joinURL(props.source, `/__nuxt_island/${key2}.json`) : `/__nuxt_island/${key2}.json`;
+      const url = remoteComponentIslands && props.source ? joinURL(props.source, `/__nuxt_island/${key}.json`) : `/__nuxt_island/${key}.json`;
       if (import.meta.server && import.meta.prerender) {
         nuxtApp.runWithContext(() => prerenderRoutes(url));
       }
@@ -193,15 +111,18 @@ export default defineComponent({
         ...props.context,
         props: props.props ? JSON.stringify(props.props) : void 0
       }));
+      if (!r.ok) {
+        throw createError({ statusCode: r.status, statusMessage: r.statusText });
+      }
       try {
-        const result = import.meta.server || !import.meta.dev ? await r.json() : r._data;
+        const result = await r.json();
         if (import.meta.server && import.meta.prerender) {
           const hints = r.headers.get("x-nitro-prerender");
           if (hints) {
             appendResponseHeader(event, "x-nitro-prerender", hints);
           }
         }
-        setPayload(key2, result);
+        setPayload(key, result);
         return result;
       } catch (e) {
         if (r.status !== 200) {
@@ -217,16 +138,10 @@ export default defineComponent({
       });
       try {
         const res = await nuxtApp[pKey][uid.value];
-        ssrHTML.value = res.html.replaceAll(DATA_ISLAND_UID_RE, `data-island-uid="${uid.value}"`);
-        key.value++;
-        error.value = null;
-        payloads.slots = res.slots || {};
-        payloads.components = res.components || {};
-        if (selectiveClient && import.meta.client) {
-          if (canLoadClientComponent.value && res.components) {
-            await loadComponents(props.source, res.components);
-          }
+        if (res.ast) {
+          ast.value = res.ast;
         }
+        error.value = null;
         if (res?.head) {
           if (activeHead) {
             activeHead.patch(res.head);
@@ -234,12 +149,6 @@ export default defineComponent({
             activeHead = head.push(res.head);
           }
         }
-        if (import.meta.client) {
-          nextTick(() => {
-            canTeleport = true;
-            teleportKey.value++;
-          });
-        }
       } catch (e) {
         error.value = e;
         emit("error", e);
@@ -260,68 +169,12 @@ export default defineComponent({
       fetchComponent();
     } else if (import.meta.server || !instance.vnode.el || !nuxtApp.payload.serverRendered) {
       await fetchComponent();
-    } else if (selectiveClient && canLoadClientComponent.value) {
-      await loadComponents(props.source, payloads.components);
     }
-    return (_ctx, _cache) => {
-      if (!html.value || error.value) {
-        return [slots.fallback?.({ error: error.value }) ?? createVNode("div")];
-      }
-      return [
-        withMemo([key.value], () => {
-          return createVNode(Fragment, { key: key.value }, [h(createStaticVNode(html.value || "<div></div>", 1))]);
-        }, _cache, 0),
-        // should away be triggered ONE tick after re-rendering the static node
-        withMemo([teleportKey.value], () => {
-          const teleports = [];
-          const isKeyOdd = teleportKey.value === 0 || !!(teleportKey.value && !(teleportKey.value % 2));
-          if (uid.value && html.value && (import.meta.server || props.lazy ? canTeleport : mounted.value || instance.vnode?.el)) {
-            for (const slot in slots) {
-              if (availableSlots.value.has(slot)) {
-                teleports.push(
-                  createVNode(
-                    Teleport,
-                    // use different selectors for even and odd teleportKey to force trigger the teleport
-                    { to: import.meta.client ? `${isKeyOdd ? "div" : ""}[data-island-uid="${uid.value}"][data-island-slot="${slot}"]` : `uid=${uid.value};slot=${slot}` },
-                    { default: () => (payloads.slots?.[slot]?.props?.length ? payloads.slots[slot].props : [{}]).map((data) => slots[slot]?.(data)) }
-                  )
-                );
-              }
-            }
-            if (selectiveClient) {
-              if (import.meta.server) {
-                if (payloads.components) {
-                  for (const [id2, info] of Object.entries(payloads.components)) {
-                    const { html: html2, slots: slots2 } = info;
-                    let replaced = html2.replaceAll("data-island-uid", `data-island-uid="${uid.value}"`);
-                    for (const slot in slots2) {
-                      replaced = replaced.replaceAll(`data-island-slot="${slot}">`, (full) => full + slots2[slot]);
-                    }
-                    teleports.push(createVNode(Teleport, { to: `uid=${uid.value};client=${id2}` }, {
-                      default: () => [createStaticVNode(replaced, 1)]
-                    }));
-                  }
-                }
-              } else if (canLoadClientComponent.value && payloads.components) {
-                for (const [id2, info] of Object.entries(payloads.components)) {
-                  const { props: props2, slots: slots2 } = info;
-                  const component = components.get(id2);
-                  const vnode = createVNode(Teleport, { to: `${isKeyOdd ? "div" : ""}[data-island-uid='${uid.value}'][data-island-component="${id2}"]` }, {
-                    default: () => {
-                      return [h(component, props2, Object.fromEntries(Object.entries(slots2 || {}).map(([k, v]) => [
-                        k,
-                        () => createStaticVNode(`<div style="display: contents" data-island-uid data-island-slot="${k}">${v}</div>`, 1)
-                      ])))];
-                    }
-                  });
-                  teleports.push(vnode);
-                }
-              }
-            }
-          }
-          return h(Fragment, teleports);
-        }, _cache, 1)
-      ];
+    return () => {
+      return renderOnigiri(
+        ast.value,
+        viteFetch
+      );
     };
   }
 });
diff --git a/dist/app/components/nuxt-link.d.ts b/dist/app/components/nuxt-link.d.ts
index b90a4b8615b3acafbe5d10a7b206af537e5c49ba..9c5704b697f769226522298f6565d8e59d12b98c 100644
--- a/dist/app/components/nuxt-link.d.ts
+++ b/dist/app/components/nuxt-link.d.ts
@@ -1,9 +1,9 @@
-import type { DefineSetupFnComponent, SlotsType, UnwrapRef, VNode } from 'vue';
+import type { AllowedComponentProps, AnchorHTMLAttributes, DefineSetupFnComponent, SlotsType, UnwrapRef, VNode, VNodeProps } from 'vue';
 import type { RouteLocation, RouteLocationRaw, RouterLinkProps, UseLinkReturn } from 'vue-router';
 import type { NuxtApp } from '../nuxt.js';
 /**
  * `<NuxtLink>` is a drop-in replacement for both Vue Router's `<RouterLink>` component and HTML's `<a>` tag.
- * @see https://nuxt.com/docs/api/components/nuxt-link
+ * @see https://nuxt.com/docs/4.x/api/components/nuxt-link
  */
 export interface NuxtLinkProps<CustomProp extends boolean = false> extends Omit<RouterLinkProps, 'to'> {
     custom?: CustomProp;
@@ -58,7 +58,7 @@ export interface NuxtLinkProps<CustomProp extends boolean = false> extends Omit<
 }
 /**
  * Create a NuxtLink component with given options as defaults.
- * @see https://nuxt.com/docs/api/components/nuxt-link
+ * @see https://nuxt.com/docs/4.x/api/components/nuxt-link
  */
 export interface NuxtLinkOptions extends Partial<Pick<RouterLinkProps, 'activeClass' | 'exactActiveClass'>>, Partial<Pick<NuxtLinkProps, 'prefetch' | 'prefetchedClass'>> {
     /**
@@ -96,6 +96,6 @@ type NuxtLinkDefaultSlotProps<CustomProp extends boolean = false> = CustomProp e
 type NuxtLinkSlots<CustomProp extends boolean = false> = {
     default?: (props: NuxtLinkDefaultSlotProps<CustomProp>) => VNode[];
 };
-export declare function defineNuxtLink(options: NuxtLinkOptions): (new <CustomProp extends boolean = false>(props: NuxtLinkProps<CustomProp>) => InstanceType<DefineSetupFnComponent<NuxtLinkProps<CustomProp>, [], SlotsType<NuxtLinkSlots<CustomProp>>>>) & Record<string, any>;
-declare const _default: (new <CustomProp extends boolean = false>(props: NuxtLinkProps<CustomProp>) => InstanceType<DefineSetupFnComponent<NuxtLinkProps<CustomProp>, [], SlotsType<NuxtLinkSlots<CustomProp>>>>) & Record<string, any>;
+export declare function defineNuxtLink(options: NuxtLinkOptions): (new <CustomProp extends boolean = false>(props: NuxtLinkProps<CustomProp> & VNodeProps & AllowedComponentProps & AnchorHTMLAttributes) => InstanceType<DefineSetupFnComponent<NuxtLinkProps<CustomProp> & VNodeProps & AllowedComponentProps & AnchorHTMLAttributes, [], SlotsType<NuxtLinkSlots<CustomProp>>>>) & Record<string, any>;
+declare const _default: (new <CustomProp extends boolean = false>(props: NuxtLinkProps<CustomProp> & VNodeProps & AllowedComponentProps & AnchorHTMLAttributes) => InstanceType<DefineSetupFnComponent<NuxtLinkProps<CustomProp> & VNodeProps & AllowedComponentProps & AnchorHTMLAttributes, [], SlotsType<NuxtLinkSlots<CustomProp>>>>) & Record<string, any>;
 export default _default;
diff --git a/dist/app/components/nuxt-loading-indicator.js b/dist/app/components/nuxt-loading-indicator.js
index d370322e36c2db43bc86bfbb734c6bf0c36e2e80..786cef0157d0133eaaa23530ba38fe6fdb638951 100644
--- a/dist/app/components/nuxt-loading-indicator.js
+++ b/dist/app/components/nuxt-loading-indicator.js
@@ -64,7 +64,7 @@ export default defineComponent({
         height: `${props.height}px`,
         opacity: isLoading.value ? 1 : 0,
         background: error.value ? props.errorColor : props.color || void 0,
-        backgroundSize: `${100 / progress.value * 100}% auto`,
+        backgroundSize: `${progress.value > 0 ? 100 / progress.value * 100 : 0}% auto`,
         transform: `scaleX(${progress.value}%)`,
         transformOrigin: "left",
         transition: "transform 0.1s, height 0.4s, opacity 0.4s",
diff --git a/dist/app/components/nuxt-root.d.vue.ts b/dist/app/components/nuxt-root.d.vue.ts
new file mode 100644
index 0000000000000000000000000000000000000000..7711b0ce8febbd198036e338d6529f695178f664
--- /dev/null
+++ b/dist/app/components/nuxt-root.d.vue.ts
@@ -0,0 +1,2 @@
+declare const _default: import("vue").DefineComponent<{}, {}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<{}> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
+export default _default;
diff --git a/dist/app/components/nuxt-root.vue b/dist/app/components/nuxt-root.vue
index 3d28794b56afa4fef5321a12cf1c8702928ccf0c..017c67866082f15c45f2b0110aed0955d670c59c 100644
--- a/dist/app/components/nuxt-root.vue
+++ b/dist/app/components/nuxt-root.vue
@@ -4,11 +4,7 @@
     <ErrorComponent
       v-else-if="error"
       :error="error"
-    />
-    <IslandRenderer
-      v-else-if="islandContext"
-      :context="islandContext"
-    />
+    /> 
     <component
       :is="SingleRenderer"
       v-else-if="SingleRenderer"
@@ -25,8 +21,6 @@ import { useRoute, useRouter } from "../composables/router";
 import { PageRouteSymbol } from "../components/injections";
 import AppComponent from "#build/app-component.mjs";
 import ErrorComponent from "#build/error-component.mjs";
-import { componentIslands } from "#build/nuxt.config.mjs";
-const IslandRenderer = import.meta.server && componentIslands ? defineAsyncComponent(() => import("./island-renderer").then((r) => r.default || r)) : () => null;
 const nuxtApp = useNuxtApp();
 const onResolve = nuxtApp.deferHydration();
 if (import.meta.client && nuxtApp.isHydrating) {
@@ -56,5 +50,4 @@ onErrorCaptured((err, target, info) => {
     return false;
   }
 });
-const islandContext = import.meta.server && nuxtApp.ssrContext.islandContext;
 </script>
diff --git a/dist/app/components/nuxt-time.d.vue.ts b/dist/app/components/nuxt-time.d.vue.ts
new file mode 100644
index 0000000000000000000000000000000000000000..74171ff3dba0d509a5209756859a8ee03f844299
--- /dev/null
+++ b/dist/app/components/nuxt-time.d.vue.ts
@@ -0,0 +1,34 @@
+export interface NuxtTimeProps {
+    locale?: string;
+    datetime: string | number | Date;
+    localeMatcher?: 'best fit' | 'lookup';
+    weekday?: 'long' | 'short' | 'narrow';
+    era?: 'long' | 'short' | 'narrow';
+    year?: 'numeric' | '2-digit';
+    month?: 'numeric' | '2-digit' | 'long' | 'short' | 'narrow';
+    day?: 'numeric' | '2-digit';
+    hour?: 'numeric' | '2-digit';
+    minute?: 'numeric' | '2-digit';
+    second?: 'numeric' | '2-digit';
+    timeZoneName?: 'short' | 'long' | 'shortOffset' | 'longOffset' | 'shortGeneric' | 'longGeneric';
+    formatMatcher?: 'best fit' | 'basic';
+    hour12?: boolean;
+    timeZone?: string;
+    calendar?: string;
+    dayPeriod?: 'narrow' | 'short' | 'long';
+    numberingSystem?: string;
+    dateStyle?: 'full' | 'long' | 'medium' | 'short';
+    timeStyle?: 'full' | 'long' | 'medium' | 'short';
+    hourCycle?: 'h11' | 'h12' | 'h23' | 'h24';
+    relative?: boolean;
+    title?: boolean | string;
+}
+declare global {
+    interface Window {
+        _nuxtTimeNow?: number;
+    }
+}
+declare const _default: import("vue").DefineComponent<NuxtTimeProps, {}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<NuxtTimeProps> & Readonly<{}>, {
+    hour12: boolean;
+}, {}, {}, {}, string, import("vue").ComponentProvideOptions, false, {}, any>;
+export default _default;
diff --git a/dist/app/components/utils.d.ts b/dist/app/components/utils.d.ts
index e44c8cb70ff2d33f6708dd95c69b0f72f04878cd..1ad5b2d50159dad5c007df0258063c695ff4388d 100644
--- a/dist/app/components/utils.d.ts
+++ b/dist/app/components/utils.d.ts
@@ -1,4 +1,4 @@
-import type { RendererNode, VNode } from 'vue';
+import type { RendererNode } from 'vue';
 import type { RouteLocationNormalized } from 'vue-router';
 /**
  * Internal utility
@@ -37,12 +37,3 @@ export declare function vforToArray(source: any): any[];
  * @returns {string[]|undefined} An array of string which represent the content of each element. Use `.join('')` to retrieve a component vnode.el HTML
  */
 export declare function getFragmentHTML(element: RendererNode | null, withoutSlots?: boolean): string[] | undefined;
-/**
- * Return a static vnode from an element
- * Default to a div if the element is not found and if a fallback is not provided
- * @param el renderer node retrieved from the component internal instance
- * @param staticNodeFallback fallback string to use if the element is not found. Must be a valid HTML string
- */
-export declare function elToStaticVNode(el: RendererNode | null, staticNodeFallback?: string): VNode;
-export declare function isStartFragment(element: RendererNode): boolean;
-export declare function isEndFragment(element: RendererNode): boolean;
diff --git a/dist/app/components/utils.js b/dist/app/components/utils.js
index a1404a6721fb288b4a85697eb0133f39c7ff18ec..904ed639017596b5e3315d9bc90d7d3218fa5083 100644
--- a/dist/app/components/utils.js
+++ b/dist/app/components/utils.js
@@ -1,4 +1,4 @@
-import { Transition, createStaticVNode, h } from "vue";
+import { Transition, h } from "vue";
 import { isString, isPromise, isArray, isObject } from "@vue/shared";
 import { START_LOCATION } from "#build/pages";
 export const _wrapInTransition = (props, children) => {
@@ -111,16 +111,3 @@ function getFragmentChildren(element, blocks = [], withoutSlots = false) {
   }
   return blocks;
 }
-export function elToStaticVNode(el, staticNodeFallback) {
-  const fragment = el ? getFragmentHTML(el) : staticNodeFallback ? [staticNodeFallback] : void 0;
-  if (fragment) {
-    return createStaticVNode(fragment.join(""), fragment.length);
-  }
-  return h("div");
-}
-export function isStartFragment(element) {
-  return element.nodeName === "#comment" && element.nodeValue === "[";
-}
-export function isEndFragment(element) {
-  return element.nodeName === "#comment" && element.nodeValue === "]";
-}
diff --git a/dist/app/components/welcome.d.vue.ts b/dist/app/components/welcome.d.vue.ts
new file mode 100644
index 0000000000000000000000000000000000000000..fbc6bb7c790f22700247fef8a73096e958c456cd
--- /dev/null
+++ b/dist/app/components/welcome.d.vue.ts
@@ -0,0 +1,10 @@
+declare const _default: import("vue").DefineComponent<{}, {
+    $props: Partial<typeof props>;
+    appName: string;
+    title: string;
+}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<{}> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
+export default _default;
+declare const props: {
+    readonly appName: string;
+    readonly title: string;
+};
diff --git a/dist/app/components/welcome.vue b/dist/app/components/welcome.vue
index f96b90bef3a874ad226308160b4343bc83184812..00581c43fc59a5e689126e078e5dae2cd769adcb 100644
--- a/dist/app/components/welcome.vue
+++ b/dist/app/components/welcome.vue
@@ -26,7 +26,7 @@ useHead({
 </script>
 
 <template>
-<div class="antialiased bg-white dark:bg-[#020420] dark:text-white flex flex-col items-center justify-center min-h-screen place-content-center sm:text-base text-[#020420] text-sm"><div class="flex flex-col mt-6 sm:mt-0"><h1 class="flex flex-col gap-y-4 items-center justify-center"><a href="https://nuxt.com?utm_source=nuxt-welcome" target="_blank" class="gap-4 inline-flex items-end"> <svg xmlns="http://www.w3.org/2000/svg" fill="none" aria-label="Nuxt" class="h-8 sm:h-12" viewBox="0 0 800 200"><path fill="#00dc82" d="M168.303 200h111.522c3.543 0 7.022-.924 10.09-2.679A20.1 20.1 0 0 0 297.3 190a19.86 19.86 0 0 0 2.7-10.001 19.86 19.86 0 0 0-2.709-9.998L222.396 41.429a20.1 20.1 0 0 0-7.384-7.32 20.3 20.3 0 0 0-10.088-2.679c-3.541 0-7.02.925-10.087 2.68a20.1 20.1 0 0 0-7.384 7.32l-19.15 32.896L130.86 9.998a20.1 20.1 0 0 0-7.387-7.32A20.3 20.3 0 0 0 113.384 0c-3.542 0-7.022.924-10.09 2.679a20.1 20.1 0 0 0-7.387 7.319L2.709 170A19.85 19.85 0 0 0 0 179.999c-.002 3.511.93 6.96 2.7 10.001a20.1 20.1 0 0 0 7.385 7.321A20.3 20.3 0 0 0 20.175 200h70.004c27.737 0 48.192-12.075 62.266-35.633l34.171-58.652 18.303-31.389 54.93 94.285h-73.233zm-79.265-31.421-48.854-.011 73.232-125.706 36.541 62.853-24.466 42.01c-9.347 15.285-19.965 20.854-36.453 20.854"/><path fill="currentColor" d="M377 200a4 4 0 0 0 4-4v-93s5.244 8.286 15 25l38.707 66.961c1.789 3.119 5.084 5.039 8.649 5.039H470V50h-27a4 4 0 0 0-4 4v94l-17-30-36.588-62.98c-1.792-3.108-5.081-5.02-8.639-5.02H350v150zm299.203-56.143L710.551 92h-25.73a9.97 9.97 0 0 0-8.333 4.522L660.757 120.5l-15.731-23.978A9.97 9.97 0 0 0 636.693 92h-25.527l34.348 51.643L608.524 200h24.966a9.97 9.97 0 0 0 8.29-4.458l19.18-28.756 18.981 28.72a9.97 9.97 0 0 0 8.313 4.494h24.736zM724.598 92h19.714V60.071h28.251V92H800v24.857h-27.437V159.5c0 10.5 5.284 15.429 14.43 15.429H800V200h-16.869c-23.576 0-38.819-14.143-38.819-39.214v-43.929h-19.714zM590 92h-15c-3.489 0-6.218.145-8.5 2.523-2.282 2.246-2.5 3.63-2.5 7.066v52.486c0 8.058-.376 12.962-4 16.925-3.624 3.831-8.619 5-16 5-7.247 0-12.376-1.169-16-5-3.624-3.963-4-8.867-4-16.925v-52.486c0-3.435-.218-4.82-2.5-7.066C519.218 92.145 516.489 92 513 92h-15v62.422q0 21.006 11.676 33.292C517.594 195.905 529.103 200 544 200s26.204-4.095 34.123-12.286Q590 175.428 590 154.422z"/></svg> <span class="bg-[#00DC42]/10 border border-[#00DC42]/50 font-mono font-semibold group-hover:bg-[#00DC42]/15 group-hover:border-[#00DC42] inline-block leading-none px-2 py-1 rounded sm:px-2.5 sm:py-1.5 sm:text-[14px] text-[#00DC82] text-[12px]">4.1.0</span> </a></h1><div class="gap-4 grid grid-cols-1 max-w-[980px] mt-6 px-4 sm:gap-6 sm:grid-cols-3 sm:mt-10 w-full"><div class="bg-gray-50/10 border border-[#00DC42]/50 dark:bg-white/5 flex flex-col gap-1 p-6 rounded-lg sm:col-span-2"><div class="bg-[#00DC82]/5 border border-[#00DC82] dark:bg-[#020420] dark:border-[#00DC82]/80 dark:text-[#00DC82] flex h-[32px] items-center justify-center rounded text-[#00DC82] w-[32px]"><svg xmlns="http://www.w3.org/2000/svg" class="size-[18px]" viewBox="0 0 256 256"><path fill="currentColor" d="m228.1 121.2-143.9-88A8 8 0 0 0 72 40v176a8 8 0 0 0 12.2 6.8l143.9-88a7.9 7.9 0 0 0 0-13.6" opacity=".2"/><path fill="currentColor" d="M80 232a15.5 15.5 0 0 1-7.8-2.1A15.8 15.8 0 0 1 64 216V40a15.8 15.8 0 0 1 8.2-13.9 15.5 15.5 0 0 1 16.1.3l144 87.9a16 16 0 0 1 0 27.4l-144 87.9A15.4 15.4 0 0 1 80 232m0-192v176l144-88Z"/></svg></div><h2 class="font-semibold mt-1 text-base">Get started</h2><p class="dark:text-gray-200 text-gray-700 text-sm">Remove this welcome page by replacing <a class="bg-green-50 border border-green-600/10 dark:bg-[#020420] dark:border-white/10 dark:text-[#00DC82] font-bold font-mono p-1 rounded text-green-700">&lt;NuxtWelcome/&gt;</a> in <a href="https://nuxt.com/docs/guide/directory-structure/app" target="_blank" rel="noopener" class="bg-green-50 border border-green-600/20 dark:bg-[#020420] dark:border-white/20 dark:text-[#00DC82] font-bold font-mono hover:border-[#00DC82] p-1 rounded text-green-700">app.vue</a> with your own code.</p></div><a href="https://nuxt.com/docs?utm_source=nuxt-welcome" target="_blank" class="bg-gray-50/10 border border-gray-200 dark:bg-white/5 dark:border-white/10 flex flex-col gap-1 group hover:border-[#00DC82] hover:dark:border-[#00DC82] p-6 relative rounded-lg transition-all"> <div class="bg-[#00DC82]/5 border border-[#00DC82] dark:bg-[#020420] dark:border-[#00DC82]/50 dark:text-[#00DC82] flex group-hover:dark:border-[#00DC82]/80 h-[32px] items-center justify-center rounded text-[#00DC82] transition-all w-[32px]"><svg xmlns="http://www.w3.org/2000/svg" class="size-5" viewBox="0 0 256 256"><path fill="currentColor" d="M136 48v128H88V80H40V48a8 8 0 0 1 8-8h32a8 8 0 0 1 8 8 8 8 0 0 1 8-8h32a8 8 0 0 1 8 8m89.9 149.6-8.3-30.9-46.4 12.5 8.3 30.9a8 8 0 0 0 9.8 5.6l30.9-8.3a8 8 0 0 0 5.7-9.8M184.5 43.1a8.1 8.1 0 0 0-9.8-5.7l-30.9 8.3a8.1 8.1 0 0 0-5.7 9.8l8.3 30.9L192.8 74Z" opacity=".2"/><path fill="currentColor" d="M233.6 195.6 192.2 41a16 16 0 0 0-19.6-11.3L141.7 38l-1 .3A16 16 0 0 0 128 32H96a15.8 15.8 0 0 0-8 2.2 15.8 15.8 0 0 0-8-2.2H48a16 16 0 0 0-16 16v160a16 16 0 0 0 16 16h32a15.8 15.8 0 0 0 8-2.2 15.8 15.8 0 0 0 8 2.2h32a16 16 0 0 0 16-16v-99.6l27.8 103.7a16 16 0 0 0 15.5 11.9 20 20 0 0 0 4.1-.5l30.9-8.3a16 16 0 0 0 11.3-19.6M156.2 92.1l30.9-8.3 20.7 77.3-30.9 8.3Zm20.5-46.9 6.3 23.1-30.9 8.3-6.3-23.1ZM128 48v120H96V48Zm-48 0v24H48V48ZM48 208V88h32v120Zm80 0H96v-24h32zm90.2-8.3-30.9 8.3-6.3-23.2 31-8.3z"/></svg></div> <svg xmlns="http://www.w3.org/2000/svg" class="absolute dark:text-white/40 group-hover:size-5 group-hover:text-[#00DC82] right-4 size-4 text-[#020420]/20 top-4 transition-all" viewBox="0 0 256 256"><path fill="currentColor" d="M200 64v104a8 8 0 0 1-16 0V83.3L69.7 197.7a8.2 8.2 0 0 1-11.4 0 8.1 8.1 0 0 1 0-11.4L172.7 72H88a8 8 0 0 1 0-16h104a8 8 0 0 1 8 8"/></svg> <h2 class="font-semibold mt-1 text-base">Documentation</h2> <p class="dark:text-gray-200 group-hover:dark:text-gray-100 text-gray-700 text-sm">We highly recommend you take a look at the Nuxt documentation to level up.</p> </a></div><div class="gap-4 grid grid-cols-1 max-w-[980px] mt-4 px-4 sm:gap-6 sm:grid-cols-3 sm:mt-6 w-full"><a href="https://nuxt.com/modules?utm_source=nuxt-welcome" target="_blank" class="bg-gray-50/10 border border-gray-200 dark:bg-white/5 dark:border-white/10 flex flex-col gap-1 group hover:border-[#00DC82] hover:dark:border-[#00DC82] p-6 relative rounded-lg transition-all"> <div class="bg-[#00DC82]/5 border border-[#00DC82] dark:bg-[#020420] dark:border-[#00DC82]/50 dark:text-[#00DC82] flex group-hover:dark:border-[#00DC82]/80 h-[32px] items-center justify-center rounded text-[#00DC82] transition-all w-[32px]"><svg xmlns="http://www.w3.org/2000/svg" class="size-5" viewBox="0 0 256 256"><path fill="currentColor" d="M64 216a8 8 0 0 1-8-8v-42.7a27.6 27.6 0 0 1-14.1 2.6A28 28 0 1 1 56 114.7V72a8 8 0 0 1 8-8h46.7a27.6 27.6 0 0 1-2.6-14.1A28 28 0 1 1 161.3 64H208a8 8 0 0 1 8 8v42.7a27.6 27.6 0 0 0-14.1-2.6 28 28 0 1 0 14.1 53.2V208a8 8 0 0 1-8 8Z" opacity=".2"/><path fill="currentColor" d="M220.3 158.5a8.1 8.1 0 0 0-7.7-.4 20.2 20.2 0 0 1-23.2-4.4 20 20 0 0 1 13.1-33.6 19.6 19.6 0 0 1 10.1 1.8 8.1 8.1 0 0 0 7.7-.4 8.2 8.2 0 0 0 3.7-6.8V72a16 16 0 0 0-16-16h-36.2c.1-1.3.2-2.7.2-4a36.1 36.1 0 0 0-38.3-35.9 36 36 0 0 0-33.6 33.3 36.4 36.4 0 0 0 .1 6.6H64a16 16 0 0 0-16 16v32.2l-4-.2a35.6 35.6 0 0 0-26.2 11.4 35.3 35.3 0 0 0-9.7 26.9 36 36 0 0 0 33.3 33.6 36.4 36.4 0 0 0 6.6-.1V208a16 16 0 0 0 16 16h144a16 16 0 0 0 16-16v-42.7a8.2 8.2 0 0 0-3.7-6.8M208 208H64v-42.7a8.2 8.2 0 0 0-3.7-6.8 8.1 8.1 0 0 0-7.7-.4 19.6 19.6 0 0 1-10.1 1.8 20 20 0 0 1-13.1-33.6 20.2 20.2 0 0 1 23.2-4.4 8.1 8.1 0 0 0 7.7-.4 8.2 8.2 0 0 0 3.7-6.8V72h46.7a8.2 8.2 0 0 0 6.8-3.7 8.1 8.1 0 0 0 .4-7.7 19.6 19.6 0 0 1-1.8-10.1 20 20 0 0 1 33.6-13.1 20.2 20.2 0 0 1 4.4 23.2 8.1 8.1 0 0 0 .4 7.7 8.2 8.2 0 0 0 6.8 3.7H208v32.2a36.4 36.4 0 0 0-6.6-.1 36 36 0 0 0-33.3 33.6A36.1 36.1 0 0 0 204 176l4-.2Z"/></svg></div> <svg xmlns="http://www.w3.org/2000/svg" class="absolute dark:text-white/40 group-hover:size-5 group-hover:text-[#00DC82] right-4 size-4 text-[#020420]/20 top-4 transition-all" viewBox="0 0 256 256"><path fill="currentColor" d="M200 64v104a8 8 0 0 1-16 0V83.3L69.7 197.7a8.2 8.2 0 0 1-11.4 0 8.1 8.1 0 0 1 0-11.4L172.7 72H88a8 8 0 0 1 0-16h104a8 8 0 0 1 8 8"/></svg> <h2 class="font-semibold mt-1 text-base">Modules</h2> <p class="dark:text-gray-200 group-hover:dark:text-gray-100 text-gray-700 text-sm">Discover our list of modules to supercharge your Nuxt project.</p> </a> <a href="https://nuxt.com/docs/examples?utm_source=nuxt-welcome" target="_blank" class="bg-gray-50/10 border border-gray-200 dark:bg-white/5 dark:border-white/10 flex flex-col gap-1 group hover:border-[#00DC82] hover:dark:border-[#00DC82] p-6 relative rounded-lg transition-all"><div class="bg-[#00DC82]/5 border border-[#00DC82] dark:bg-[#020420] dark:border-[#00DC82]/50 dark:text-[#00DC82] flex group-hover:dark:border-[#00DC82]/80 h-[32px] items-center justify-center rounded text-[#00DC82] transition-all w-[32px]"><svg xmlns="http://www.w3.org/2000/svg" class="size-5" viewBox="0 0 256 256"><path fill="currentColor" d="M224 56v144a8 8 0 0 1-8 8H40a8 8 0 0 1-8-8V56a8 8 0 0 1 8-8h176a8 8 0 0 1 8 8" opacity=".2"/><path fill="currentColor" d="M216 40H40a16 16 0 0 0-16 16v144a16 16 0 0 0 16 16h176a16 16 0 0 0 16-16V56a16 16 0 0 0-16-16m0 160H40V56h176zM80 84a12 12 0 1 1-12-12 12 12 0 0 1 12 12m40 0a12 12 0 1 1-12-12 12 12 0 0 1 12 12"/></svg></div> <svg xmlns="http://www.w3.org/2000/svg" class="absolute dark:text-white/40 group-hover:size-5 group-hover:text-[#00DC82] right-4 size-4 text-[#020420]/20 top-4 transition-all" viewBox="0 0 256 256"><path fill="currentColor" d="M200 64v104a8 8 0 0 1-16 0V83.3L69.7 197.7a8.2 8.2 0 0 1-11.4 0 8.1 8.1 0 0 1 0-11.4L172.7 72H88a8 8 0 0 1 0-16h104a8 8 0 0 1 8 8"/></svg> <h2 class="font-semibold mt-1 text-base">Examples</h2> <p class="dark:text-gray-200 group-hover:dark:text-gray-100 text-gray-700 text-sm">Explore different way of using Nuxt features and get inspired.</p> </a> <a href="https://nuxt.com/deploy?utm_source=nuxt-welcome" target="_blank" class="bg-gray-50/10 border border-gray-200 dark:bg-white/5 dark:border-white/10 flex flex-col gap-1 group hover:border-[#00DC82] hover:dark:border-[#00DC82] p-6 relative rounded-lg transition-all"><div class="bg-[#00DC82]/5 border border-[#00DC82] dark:bg-[#020420] dark:border-[#00DC82]/50 dark:text-[#00DC82] flex group-hover:dark:border-[#00DC82]/80 h-[32px] items-center justify-center rounded text-[#00DC82] transition-all w-[32px]"><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 256 256"><path fill="currentColor" d="M94.1 184.6c-11.4 33.9-56.6 33.9-56.6 33.9s0-45.2 33.9-56.6Zm90.5-67.9v64.6a8 8 0 0 1-2.4 5.6l-32.3 32.4a8 8 0 0 1-13.5-4.1l-8.4-41.9Zm-45.3-45.3H74.7a8 8 0 0 0-5.6 2.4l-32.4 32.3a8 8 0 0 0 4.1 13.5l41.9 8.4Z" opacity=".2"/><path fill="currentColor" d="M96.6 177a7.9 7.9 0 0 0-10.1 5c-6.6 19.7-27.9 25.8-40.2 27.7 1.9-12.3 8-33.6 27.7-40.2a8 8 0 1 0-5.1-15.1c-16.4 5.4-28.4 18.4-34.8 37.5a91.8 91.8 0 0 0-4.6 26.6 8 8 0 0 0 8 8 91.8 91.8 0 0 0 26.6-4.6c19.1-6.4 32.1-18.4 37.5-34.8a7.9 7.9 0 0 0-5-10.1"/><path fill="currentColor" d="M227.6 41.8a15.7 15.7 0 0 0-13.4-13.4c-11.3-1.7-40.6-2.5-69.2 26.1l-9 8.9H74.7a16.2 16.2 0 0 0-11.3 4.7l-32.3 32.4a15.9 15.9 0 0 0-4 15.9 16 16 0 0 0 12.2 11.1l39.5 7.9 41.8 41.8 7.9 39.5a16 16 0 0 0 11.1 12.2 14.7 14.7 0 0 0 4.6.7 15.6 15.6 0 0 0 11.3-4.7l32.4-32.3a16.2 16.2 0 0 0 4.7-11.3V120l8.9-9c28.6-28.6 27.8-57.9 26.1-69.2M74.7 79.4H120l-39.9 39.9-37.7-7.5Zm81.6-13.6c7.8-7.8 28.8-25.6 55.5-21.6 4 26.7-13.8 47.7-21.6 55.5L128 161.9 94.1 128Zm20.3 115.5-32.4 32.3-7.5-37.7 39.9-39.9Z"/></svg></div> <svg xmlns="http://www.w3.org/2000/svg" class="absolute dark:text-white/40 group-hover:size-5 group-hover:text-[#00DC82] right-4 size-4 text-[#020420]/20 top-4 transition-all" viewBox="0 0 256 256"><path fill="currentColor" d="M200 64v104a8 8 0 0 1-16 0V83.3L69.7 197.7a8.2 8.2 0 0 1-11.4 0 8.1 8.1 0 0 1 0-11.4L172.7 72H88a8 8 0 0 1 0-16h104a8 8 0 0 1 8 8"/></svg> <h2 class="font-semibold mt-1 text-base">Deploy</h2> <p class="dark:text-gray-200 group-hover:dark:text-gray-100 text-gray-700 text-sm">Learn how to deploy your Nuxt project on different providers.</p> </a></div><footer class="lg:px-8 mb-6 mt-6 mx-auto px-4 sm:mb-0 sm:mt-10 sm:px-6 w-full"><ul class="flex gap-4 items-center justify-center"><li><a href="https://go.nuxt.com/github" target="_blank" class="dark:hover:text-white dark:text-gray-400 focus-visible:ring-2 hover:text-[#020420] text-gray-500"> <span class="sr-only">Nuxt GitHub Repository</span> <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="currentColor" d="M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12"/></svg> </a></li><li><a href="https://go.nuxt.com/discord" target="_blank" class="dark:hover:text-white dark:text-gray-400 focus-visible:ring-2 hover:text-[#020420] text-gray-500"> <span class="sr-only">Nuxt Discord Server</span> <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="currentColor" d="M20.317 4.37a19.8 19.8 0 0 0-4.885-1.515.074.074 0 0 0-.079.037c-.21.375-.444.864-.608 1.25a18.3 18.3 0 0 0-5.487 0 13 13 0 0 0-.617-1.25.08.08 0 0 0-.079-.037A19.7 19.7 0 0 0 3.677 4.37a.1.1 0 0 0-.032.027C.533 9.046-.32 13.58.099 18.057a.08.08 0 0 0 .031.057 19.9 19.9 0 0 0 5.993 3.03.08.08 0 0 0 .084-.028 14 14 0 0 0 1.226-1.994.076.076 0 0 0-.041-.106 13 13 0 0 1-1.872-.892.077.077 0 0 1-.008-.128 10 10 0 0 0 .372-.292.07.07 0 0 1 .077-.01c3.928 1.793 8.18 1.793 12.062 0a.07.07 0 0 1 .078.01q.181.149.373.292a.077.077 0 0 1-.006.127 12.3 12.3 0 0 1-1.873.892.077.077 0 0 0-.041.107c.36.698.772 1.362 1.225 1.993a.08.08 0 0 0 .084.028 19.8 19.8 0 0 0 6.002-3.03.08.08 0 0 0 .032-.054c.5-5.177-.838-9.674-3.549-13.66a.06.06 0 0 0-.031-.03M8.02 15.33c-1.182 0-2.157-1.085-2.157-2.419 0-1.333.956-2.419 2.157-2.419 1.21 0 2.176 1.096 2.157 2.42 0 1.333-.956 2.418-2.157 2.418m7.975 0c-1.183 0-2.157-1.085-2.157-2.419 0-1.333.955-2.419 2.157-2.419 1.21 0 2.176 1.096 2.157 2.42 0 1.333-.946 2.418-2.157 2.418"/></svg> </a></li><li><a href="https://go.nuxt.com/x" target="_blank" class="dark:hover:text-white dark:text-gray-400 focus-visible:ring-2 hover:text-[#020420] text-gray-500"> <span class="sr-only">Nuxt on X</span> <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="currentColor" d="M18.901 1.153h3.68l-8.04 9.19L24 22.846h-7.406l-5.8-7.584-6.638 7.584H.474l8.6-9.83L0 1.154h7.594l5.243 6.932ZM17.61 20.644h2.039L6.486 3.24H4.298Z"/></svg> </a></li><li><a href="https://go.nuxt.com/bluesky" target="_blank" class="dark:hover:text-white dark:text-gray-400 focus-visible:ring-2 hover:text-[#020420] text-gray-500"> <span class="sr-only">Nuxt Bluesky</span> <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="currentColor" d="M12 10.8c-1.087-2.114-4.046-6.053-6.798-7.995C2.566.944 1.561 1.266.902 1.565.139 1.908 0 3.08 0 3.768c0 .69.378 5.65.624 6.479.815 2.736 3.713 3.66 6.383 3.364q.204-.03.415-.056-.207.033-.415.056c-3.912.58-7.387 2.005-2.83 7.078 5.013 5.19 6.87-1.113 7.823-4.308.953 3.195 2.05 9.271 7.733 4.308 4.267-4.308 1.172-6.498-2.74-7.078a9 9 0 0 1-.415-.056q.21.026.415.056c2.67.297 5.568-.628 6.383-3.364.246-.828.624-5.79.624-6.478 0-.69-.139-1.861-.902-2.206-.659-.298-1.664-.62-4.3 1.24C16.046 4.748 13.087 8.687 12 10.8"/></svg> </a></li><li><a href="https://go.nuxt.com/linkedin" target="_blank" class="dark:hover:text-white dark:text-gray-400 focus-visible:ring-2 hover:text-[#020420] text-gray-500"> <span class="sr-only">Nuxt Linkedin</span> <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="currentColor" d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433a2.06 2.06 0 0 1-2.063-2.065 2.064 2.064 0 1 1 2.063 2.065m1.782 13.019H3.555V9h3.564zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0z"/></svg> </a></li></ul></footer></div></div>
+<div class="antialiased bg-white dark:bg-[#020420] dark:text-white flex flex-col items-center justify-center min-h-screen place-content-center sm:text-base text-[#020420] text-sm"><div class="flex flex-col mt-6 sm:mt-0"><h1 class="flex flex-col gap-y-4 items-center justify-center"><a href="https://nuxt.com?utm_source=nuxt-welcome" target="_blank" class="gap-4 inline-flex items-end"> <svg xmlns="http://www.w3.org/2000/svg" fill="none" aria-label="Nuxt" class="h-8 sm:h-12" viewBox="0 0 800 200"><path fill="#00dc82" d="M168.303 200h111.522c3.543 0 7.022-.924 10.09-2.679A20.1 20.1 0 0 0 297.3 190a19.86 19.86 0 0 0 2.7-10.001 19.86 19.86 0 0 0-2.709-9.998L222.396 41.429a20.1 20.1 0 0 0-7.384-7.32 20.3 20.3 0 0 0-10.088-2.679c-3.541 0-7.02.925-10.087 2.68a20.1 20.1 0 0 0-7.384 7.32l-19.15 32.896L130.86 9.998a20.1 20.1 0 0 0-7.387-7.32A20.3 20.3 0 0 0 113.384 0c-3.542 0-7.022.924-10.09 2.679a20.1 20.1 0 0 0-7.387 7.319L2.709 170A19.85 19.85 0 0 0 0 179.999c-.002 3.511.93 6.96 2.7 10.001a20.1 20.1 0 0 0 7.385 7.321A20.3 20.3 0 0 0 20.175 200h70.004c27.737 0 48.192-12.075 62.266-35.633l34.171-58.652 18.303-31.389 54.93 94.285h-73.233zm-79.265-31.421-48.854-.011 73.232-125.706 36.541 62.853-24.466 42.01c-9.347 15.285-19.965 20.854-36.453 20.854"/><path fill="currentColor" d="M377 200a4 4 0 0 0 4-4v-93s5.244 8.286 15 25l38.707 66.961c1.789 3.119 5.084 5.039 8.649 5.039H470V50h-27a4 4 0 0 0-4 4v94l-17-30-36.588-62.98c-1.792-3.108-5.081-5.02-8.639-5.02H350v150zm299.203-56.143L710.551 92h-25.73a9.97 9.97 0 0 0-8.333 4.522L660.757 120.5l-15.731-23.978A9.97 9.97 0 0 0 636.693 92h-25.527l34.348 51.643L608.524 200h24.966a9.97 9.97 0 0 0 8.29-4.458l19.18-28.756 18.981 28.72a9.97 9.97 0 0 0 8.313 4.494h24.736zM724.598 92h19.714V60.071h28.251V92H800v24.857h-27.437V159.5c0 10.5 5.284 15.429 14.43 15.429H800V200h-16.869c-23.576 0-38.819-14.143-38.819-39.214v-43.929h-19.714zM590 92h-15c-3.489 0-6.218.145-8.5 2.523-2.282 2.246-2.5 3.63-2.5 7.066v52.486c0 8.058-.376 12.962-4 16.925-3.624 3.831-8.619 5-16 5-7.247 0-12.376-1.169-16-5-3.624-3.963-4-8.867-4-16.925v-52.486c0-3.435-.218-4.82-2.5-7.066C519.218 92.145 516.489 92 513 92h-15v62.422q0 21.006 11.676 33.292C517.594 195.905 529.103 200 544 200s26.204-4.095 34.123-12.286Q590 175.428 590 154.422z"/></svg> <span class="bg-[#00DC42]/10 border border-[#00DC42]/50 font-mono font-semibold group-hover:bg-[#00DC42]/15 group-hover:border-[#00DC42] inline-block leading-none px-2 py-1 rounded sm:px-2.5 sm:py-1.5 sm:text-[14px] text-[#00DC82] text-[12px]">4.1.2</span> </a></h1><div class="gap-4 grid grid-cols-1 max-w-[980px] mt-6 px-4 sm:gap-6 sm:grid-cols-3 sm:mt-10 w-full"><div class="bg-gray-50/10 border border-[#00DC42]/50 dark:bg-white/5 flex flex-col gap-1 p-6 rounded-lg sm:col-span-2"><div class="bg-[#00DC82]/5 border border-[#00DC82] dark:bg-[#020420] dark:border-[#00DC82]/80 dark:text-[#00DC82] flex h-[32px] items-center justify-center rounded text-[#00DC82] w-[32px]"><svg xmlns="http://www.w3.org/2000/svg" class="size-[18px]" viewBox="0 0 256 256"><path fill="currentColor" d="m228.1 121.2-143.9-88A8 8 0 0 0 72 40v176a8 8 0 0 0 12.2 6.8l143.9-88a7.9 7.9 0 0 0 0-13.6" opacity=".2"/><path fill="currentColor" d="M80 232a15.5 15.5 0 0 1-7.8-2.1A15.8 15.8 0 0 1 64 216V40a15.8 15.8 0 0 1 8.2-13.9 15.5 15.5 0 0 1 16.1.3l144 87.9a16 16 0 0 1 0 27.4l-144 87.9A15.4 15.4 0 0 1 80 232m0-192v176l144-88Z"/></svg></div><h2 class="font-semibold mt-1 text-base">Get started</h2><p class="dark:text-gray-200 text-gray-700 text-sm">Remove this welcome page by replacing <a class="bg-green-50 border border-green-600/10 dark:bg-[#020420] dark:border-white/10 dark:text-[#00DC82] font-bold font-mono p-1 rounded text-green-700">&lt;NuxtWelcome/&gt;</a> in <a href="https://nuxt.com/docs/4.x/guide/directory-structure/app" target="_blank" rel="noopener" class="bg-green-50 border border-green-600/20 dark:bg-[#020420] dark:border-white/20 dark:text-[#00DC82] font-bold font-mono hover:border-[#00DC82] p-1 rounded text-green-700">app.vue</a> with your own code.</p></div><a href="https://nuxt.com/docs?utm_source=nuxt-welcome" target="_blank" class="bg-gray-50/10 border border-gray-200 dark:bg-white/5 dark:border-white/10 flex flex-col gap-1 group hover:border-[#00DC82] hover:dark:border-[#00DC82] p-6 relative rounded-lg transition-all"> <div class="bg-[#00DC82]/5 border border-[#00DC82] dark:bg-[#020420] dark:border-[#00DC82]/50 dark:text-[#00DC82] flex group-hover:dark:border-[#00DC82]/80 h-[32px] items-center justify-center rounded text-[#00DC82] transition-all w-[32px]"><svg xmlns="http://www.w3.org/2000/svg" class="size-5" viewBox="0 0 256 256"><path fill="currentColor" d="M136 48v128H88V80H40V48a8 8 0 0 1 8-8h32a8 8 0 0 1 8 8 8 8 0 0 1 8-8h32a8 8 0 0 1 8 8m89.9 149.6-8.3-30.9-46.4 12.5 8.3 30.9a8 8 0 0 0 9.8 5.6l30.9-8.3a8 8 0 0 0 5.7-9.8M184.5 43.1a8.1 8.1 0 0 0-9.8-5.7l-30.9 8.3a8.1 8.1 0 0 0-5.7 9.8l8.3 30.9L192.8 74Z" opacity=".2"/><path fill="currentColor" d="M233.6 195.6 192.2 41a16 16 0 0 0-19.6-11.3L141.7 38l-1 .3A16 16 0 0 0 128 32H96a15.8 15.8 0 0 0-8 2.2 15.8 15.8 0 0 0-8-2.2H48a16 16 0 0 0-16 16v160a16 16 0 0 0 16 16h32a15.8 15.8 0 0 0 8-2.2 15.8 15.8 0 0 0 8 2.2h32a16 16 0 0 0 16-16v-99.6l27.8 103.7a16 16 0 0 0 15.5 11.9 20 20 0 0 0 4.1-.5l30.9-8.3a16 16 0 0 0 11.3-19.6M156.2 92.1l30.9-8.3 20.7 77.3-30.9 8.3Zm20.5-46.9 6.3 23.1-30.9 8.3-6.3-23.1ZM128 48v120H96V48Zm-48 0v24H48V48ZM48 208V88h32v120Zm80 0H96v-24h32zm90.2-8.3-30.9 8.3-6.3-23.2 31-8.3z"/></svg></div> <svg xmlns="http://www.w3.org/2000/svg" class="absolute dark:text-white/40 group-hover:size-5 group-hover:text-[#00DC82] right-4 size-4 text-[#020420]/20 top-4 transition-all" viewBox="0 0 256 256"><path fill="currentColor" d="M200 64v104a8 8 0 0 1-16 0V83.3L69.7 197.7a8.2 8.2 0 0 1-11.4 0 8.1 8.1 0 0 1 0-11.4L172.7 72H88a8 8 0 0 1 0-16h104a8 8 0 0 1 8 8"/></svg> <h2 class="font-semibold mt-1 text-base">Documentation</h2> <p class="dark:text-gray-200 group-hover:dark:text-gray-100 text-gray-700 text-sm">We highly recommend you take a look at the Nuxt documentation to level up.</p> </a></div><div class="gap-4 grid grid-cols-1 max-w-[980px] mt-4 px-4 sm:gap-6 sm:grid-cols-3 sm:mt-6 w-full"><a href="https://nuxt.com/modules?utm_source=nuxt-welcome" target="_blank" class="bg-gray-50/10 border border-gray-200 dark:bg-white/5 dark:border-white/10 flex flex-col gap-1 group hover:border-[#00DC82] hover:dark:border-[#00DC82] p-6 relative rounded-lg transition-all"> <div class="bg-[#00DC82]/5 border border-[#00DC82] dark:bg-[#020420] dark:border-[#00DC82]/50 dark:text-[#00DC82] flex group-hover:dark:border-[#00DC82]/80 h-[32px] items-center justify-center rounded text-[#00DC82] transition-all w-[32px]"><svg xmlns="http://www.w3.org/2000/svg" class="size-5" viewBox="0 0 256 256"><path fill="currentColor" d="M64 216a8 8 0 0 1-8-8v-42.7a27.6 27.6 0 0 1-14.1 2.6A28 28 0 1 1 56 114.7V72a8 8 0 0 1 8-8h46.7a27.6 27.6 0 0 1-2.6-14.1A28 28 0 1 1 161.3 64H208a8 8 0 0 1 8 8v42.7a27.6 27.6 0 0 0-14.1-2.6 28 28 0 1 0 14.1 53.2V208a8 8 0 0 1-8 8Z" opacity=".2"/><path fill="currentColor" d="M220.3 158.5a8.1 8.1 0 0 0-7.7-.4 20.2 20.2 0 0 1-23.2-4.4 20 20 0 0 1 13.1-33.6 19.6 19.6 0 0 1 10.1 1.8 8.1 8.1 0 0 0 7.7-.4 8.2 8.2 0 0 0 3.7-6.8V72a16 16 0 0 0-16-16h-36.2c.1-1.3.2-2.7.2-4a36.1 36.1 0 0 0-38.3-35.9 36 36 0 0 0-33.6 33.3 36.4 36.4 0 0 0 .1 6.6H64a16 16 0 0 0-16 16v32.2l-4-.2a35.6 35.6 0 0 0-26.2 11.4 35.3 35.3 0 0 0-9.7 26.9 36 36 0 0 0 33.3 33.6 36.4 36.4 0 0 0 6.6-.1V208a16 16 0 0 0 16 16h144a16 16 0 0 0 16-16v-42.7a8.2 8.2 0 0 0-3.7-6.8M208 208H64v-42.7a8.2 8.2 0 0 0-3.7-6.8 8.1 8.1 0 0 0-7.7-.4 19.6 19.6 0 0 1-10.1 1.8 20 20 0 0 1-13.1-33.6 20.2 20.2 0 0 1 23.2-4.4 8.1 8.1 0 0 0 7.7-.4 8.2 8.2 0 0 0 3.7-6.8V72h46.7a8.2 8.2 0 0 0 6.8-3.7 8.1 8.1 0 0 0 .4-7.7 19.6 19.6 0 0 1-1.8-10.1 20 20 0 0 1 33.6-13.1 20.2 20.2 0 0 1 4.4 23.2 8.1 8.1 0 0 0 .4 7.7 8.2 8.2 0 0 0 6.8 3.7H208v32.2a36.4 36.4 0 0 0-6.6-.1 36 36 0 0 0-33.3 33.6A36.1 36.1 0 0 0 204 176l4-.2Z"/></svg></div> <svg xmlns="http://www.w3.org/2000/svg" class="absolute dark:text-white/40 group-hover:size-5 group-hover:text-[#00DC82] right-4 size-4 text-[#020420]/20 top-4 transition-all" viewBox="0 0 256 256"><path fill="currentColor" d="M200 64v104a8 8 0 0 1-16 0V83.3L69.7 197.7a8.2 8.2 0 0 1-11.4 0 8.1 8.1 0 0 1 0-11.4L172.7 72H88a8 8 0 0 1 0-16h104a8 8 0 0 1 8 8"/></svg> <h2 class="font-semibold mt-1 text-base">Modules</h2> <p class="dark:text-gray-200 group-hover:dark:text-gray-100 text-gray-700 text-sm">Discover our list of modules to supercharge your Nuxt project.</p> </a> <a href="https://nuxt.com/docs/4.x/examples?utm_source=nuxt-welcome" target="_blank" class="bg-gray-50/10 border border-gray-200 dark:bg-white/5 dark:border-white/10 flex flex-col gap-1 group hover:border-[#00DC82] hover:dark:border-[#00DC82] p-6 relative rounded-lg transition-all"><div class="bg-[#00DC82]/5 border border-[#00DC82] dark:bg-[#020420] dark:border-[#00DC82]/50 dark:text-[#00DC82] flex group-hover:dark:border-[#00DC82]/80 h-[32px] items-center justify-center rounded text-[#00DC82] transition-all w-[32px]"><svg xmlns="http://www.w3.org/2000/svg" class="size-5" viewBox="0 0 256 256"><path fill="currentColor" d="M224 56v144a8 8 0 0 1-8 8H40a8 8 0 0 1-8-8V56a8 8 0 0 1 8-8h176a8 8 0 0 1 8 8" opacity=".2"/><path fill="currentColor" d="M216 40H40a16 16 0 0 0-16 16v144a16 16 0 0 0 16 16h176a16 16 0 0 0 16-16V56a16 16 0 0 0-16-16m0 160H40V56h176zM80 84a12 12 0 1 1-12-12 12 12 0 0 1 12 12m40 0a12 12 0 1 1-12-12 12 12 0 0 1 12 12"/></svg></div> <svg xmlns="http://www.w3.org/2000/svg" class="absolute dark:text-white/40 group-hover:size-5 group-hover:text-[#00DC82] right-4 size-4 text-[#020420]/20 top-4 transition-all" viewBox="0 0 256 256"><path fill="currentColor" d="M200 64v104a8 8 0 0 1-16 0V83.3L69.7 197.7a8.2 8.2 0 0 1-11.4 0 8.1 8.1 0 0 1 0-11.4L172.7 72H88a8 8 0 0 1 0-16h104a8 8 0 0 1 8 8"/></svg> <h2 class="font-semibold mt-1 text-base">Examples</h2> <p class="dark:text-gray-200 group-hover:dark:text-gray-100 text-gray-700 text-sm">Explore different way of using Nuxt features and get inspired.</p> </a> <a href="https://nuxt.com/deploy?utm_source=nuxt-welcome" target="_blank" class="bg-gray-50/10 border border-gray-200 dark:bg-white/5 dark:border-white/10 flex flex-col gap-1 group hover:border-[#00DC82] hover:dark:border-[#00DC82] p-6 relative rounded-lg transition-all"><div class="bg-[#00DC82]/5 border border-[#00DC82] dark:bg-[#020420] dark:border-[#00DC82]/50 dark:text-[#00DC82] flex group-hover:dark:border-[#00DC82]/80 h-[32px] items-center justify-center rounded text-[#00DC82] transition-all w-[32px]"><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 256 256"><path fill="currentColor" d="M94.1 184.6c-11.4 33.9-56.6 33.9-56.6 33.9s0-45.2 33.9-56.6Zm90.5-67.9v64.6a8 8 0 0 1-2.4 5.6l-32.3 32.4a8 8 0 0 1-13.5-4.1l-8.4-41.9Zm-45.3-45.3H74.7a8 8 0 0 0-5.6 2.4l-32.4 32.3a8 8 0 0 0 4.1 13.5l41.9 8.4Z" opacity=".2"/><path fill="currentColor" d="M96.6 177a7.9 7.9 0 0 0-10.1 5c-6.6 19.7-27.9 25.8-40.2 27.7 1.9-12.3 8-33.6 27.7-40.2a8 8 0 1 0-5.1-15.1c-16.4 5.4-28.4 18.4-34.8 37.5a91.8 91.8 0 0 0-4.6 26.6 8 8 0 0 0 8 8 91.8 91.8 0 0 0 26.6-4.6c19.1-6.4 32.1-18.4 37.5-34.8a7.9 7.9 0 0 0-5-10.1"/><path fill="currentColor" d="M227.6 41.8a15.7 15.7 0 0 0-13.4-13.4c-11.3-1.7-40.6-2.5-69.2 26.1l-9 8.9H74.7a16.2 16.2 0 0 0-11.3 4.7l-32.3 32.4a15.9 15.9 0 0 0-4 15.9 16 16 0 0 0 12.2 11.1l39.5 7.9 41.8 41.8 7.9 39.5a16 16 0 0 0 11.1 12.2 14.7 14.7 0 0 0 4.6.7 15.6 15.6 0 0 0 11.3-4.7l32.4-32.3a16.2 16.2 0 0 0 4.7-11.3V120l8.9-9c28.6-28.6 27.8-57.9 26.1-69.2M74.7 79.4H120l-39.9 39.9-37.7-7.5Zm81.6-13.6c7.8-7.8 28.8-25.6 55.5-21.6 4 26.7-13.8 47.7-21.6 55.5L128 161.9 94.1 128Zm20.3 115.5-32.4 32.3-7.5-37.7 39.9-39.9Z"/></svg></div> <svg xmlns="http://www.w3.org/2000/svg" class="absolute dark:text-white/40 group-hover:size-5 group-hover:text-[#00DC82] right-4 size-4 text-[#020420]/20 top-4 transition-all" viewBox="0 0 256 256"><path fill="currentColor" d="M200 64v104a8 8 0 0 1-16 0V83.3L69.7 197.7a8.2 8.2 0 0 1-11.4 0 8.1 8.1 0 0 1 0-11.4L172.7 72H88a8 8 0 0 1 0-16h104a8 8 0 0 1 8 8"/></svg> <h2 class="font-semibold mt-1 text-base">Deploy</h2> <p class="dark:text-gray-200 group-hover:dark:text-gray-100 text-gray-700 text-sm">Learn how to deploy your Nuxt project on different providers.</p> </a></div><footer class="lg:px-8 mb-6 mt-6 mx-auto px-4 sm:mb-0 sm:mt-10 sm:px-6 w-full"><ul class="flex gap-4 items-center justify-center"><li><a href="https://go.nuxt.com/github" target="_blank" class="dark:hover:text-white dark:text-gray-400 focus-visible:ring-2 hover:text-[#020420] text-gray-500"> <span class="sr-only">Nuxt GitHub Repository</span> <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="currentColor" d="M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12"/></svg> </a></li><li><a href="https://go.nuxt.com/discord" target="_blank" class="dark:hover:text-white dark:text-gray-400 focus-visible:ring-2 hover:text-[#020420] text-gray-500"> <span class="sr-only">Nuxt Discord Server</span> <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="currentColor" d="M20.317 4.37a19.8 19.8 0 0 0-4.885-1.515.074.074 0 0 0-.079.037c-.21.375-.444.864-.608 1.25a18.3 18.3 0 0 0-5.487 0 13 13 0 0 0-.617-1.25.08.08 0 0 0-.079-.037A19.7 19.7 0 0 0 3.677 4.37a.1.1 0 0 0-.032.027C.533 9.046-.32 13.58.099 18.057a.08.08 0 0 0 .031.057 19.9 19.9 0 0 0 5.993 3.03.08.08 0 0 0 .084-.028 14 14 0 0 0 1.226-1.994.076.076 0 0 0-.041-.106 13 13 0 0 1-1.872-.892.077.077 0 0 1-.008-.128 10 10 0 0 0 .372-.292.07.07 0 0 1 .077-.01c3.928 1.793 8.18 1.793 12.062 0a.07.07 0 0 1 .078.01q.181.149.373.292a.077.077 0 0 1-.006.127 12.3 12.3 0 0 1-1.873.892.077.077 0 0 0-.041.107c.36.698.772 1.362 1.225 1.993a.08.08 0 0 0 .084.028 19.8 19.8 0 0 0 6.002-3.03.08.08 0 0 0 .032-.054c.5-5.177-.838-9.674-3.549-13.66a.06.06 0 0 0-.031-.03M8.02 15.33c-1.182 0-2.157-1.085-2.157-2.419 0-1.333.956-2.419 2.157-2.419 1.21 0 2.176 1.096 2.157 2.42 0 1.333-.956 2.418-2.157 2.418m7.975 0c-1.183 0-2.157-1.085-2.157-2.419 0-1.333.955-2.419 2.157-2.419 1.21 0 2.176 1.096 2.157 2.42 0 1.333-.946 2.418-2.157 2.418"/></svg> </a></li><li><a href="https://go.nuxt.com/x" target="_blank" class="dark:hover:text-white dark:text-gray-400 focus-visible:ring-2 hover:text-[#020420] text-gray-500"> <span class="sr-only">Nuxt on X</span> <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="currentColor" d="M18.901 1.153h3.68l-8.04 9.19L24 22.846h-7.406l-5.8-7.584-6.638 7.584H.474l8.6-9.83L0 1.154h7.594l5.243 6.932ZM17.61 20.644h2.039L6.486 3.24H4.298Z"/></svg> </a></li><li><a href="https://go.nuxt.com/bluesky" target="_blank" class="dark:hover:text-white dark:text-gray-400 focus-visible:ring-2 hover:text-[#020420] text-gray-500"> <span class="sr-only">Nuxt Bluesky</span> <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="currentColor" d="M12 10.8c-1.087-2.114-4.046-6.053-6.798-7.995C2.566.944 1.561 1.266.902 1.565.139 1.908 0 3.08 0 3.768c0 .69.378 5.65.624 6.479.815 2.736 3.713 3.66 6.383 3.364q.204-.03.415-.056-.207.033-.415.056c-3.912.58-7.387 2.005-2.83 7.078 5.013 5.19 6.87-1.113 7.823-4.308.953 3.195 2.05 9.271 7.733 4.308 4.267-4.308 1.172-6.498-2.74-7.078a9 9 0 0 1-.415-.056q.21.026.415.056c2.67.297 5.568-.628 6.383-3.364.246-.828.624-5.79.624-6.478 0-.69-.139-1.861-.902-2.206-.659-.298-1.664-.62-4.3 1.24C16.046 4.748 13.087 8.687 12 10.8"/></svg> </a></li><li><a href="https://go.nuxt.com/linkedin" target="_blank" class="dark:hover:text-white dark:text-gray-400 focus-visible:ring-2 hover:text-[#020420] text-gray-500"> <span class="sr-only">Nuxt Linkedin</span> <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="currentColor" d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433a2.06 2.06 0 0 1-2.063-2.065 2.064 2.064 0 1 1 2.063 2.065m1.782 13.019H3.555V9h3.564zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0z"/></svg> </a></li></ul></footer></div></div>
 </template>
 
 <style scoped>
diff --git a/dist/app/composables/asyncData.d.ts b/dist/app/composables/asyncData.d.ts
index 161e430aeb9a96f59575fe03024c287c341f1bac..2ce396cf508b44243bf3150fb2dcc7a86a4fbd9a 100644
--- a/dist/app/composables/asyncData.d.ts
+++ b/dist/app/composables/asyncData.d.ts
@@ -84,7 +84,7 @@ export interface _AsyncData<DataT, ErrorT> {
 export type AsyncData<Data, Error> = _AsyncData<Data, Error> & Promise<_AsyncData<Data, Error>>;
 /**
  * Provides access to data that resolves asynchronously in an SSR-friendly composable.
- * See {@link https://nuxt.com/docs/api/composables/use-async-data}
+ * See {@link https://nuxt.com/docs/4.x/api/composables/use-async-data}
  * @since 3.0.0
  * @param handler An asynchronous function that must return a truthy value (for example, it should not be `undefined` or `null`) or the request may be duplicated on the client side.
  * @param options customize the behavior of useAsyncData
@@ -93,7 +93,7 @@ export declare function useAsyncData<ResT, NuxtErrorDataT = unknown, DataT = Res
 export declare function useAsyncData<ResT, NuxtErrorDataT = unknown, DataT = ResT, PickKeys extends KeysOf<DataT> = KeysOf<DataT>, DefaultT = DataT>(handler: (ctx?: NuxtApp) => Promise<ResT>, options?: AsyncDataOptions<ResT, DataT, PickKeys, DefaultT>): AsyncData<PickFrom<DataT, PickKeys> | DefaultT, (NuxtErrorDataT extends Error | NuxtError ? NuxtErrorDataT : NuxtError<NuxtErrorDataT>) | undefined>;
 /**
  * Provides access to data that resolves asynchronously in an SSR-friendly composable.
- * See {@link https://nuxt.com/docs/api/composables/use-async-data}
+ * See {@link https://nuxt.com/docs/4.x/api/composables/use-async-data}
  * @param key A unique key to ensure that data fetching can be properly de-duplicated across requests.
  * @param handler An asynchronous function that must return a truthy value (for example, it should not be `undefined` or `null`) or the request may be duplicated on the client side.
  * @param options customize the behavior of useAsyncData
@@ -102,7 +102,7 @@ export declare function useAsyncData<ResT, NuxtErrorDataT = unknown, DataT = Res
 export declare function useAsyncData<ResT, NuxtErrorDataT = unknown, DataT = ResT, PickKeys extends KeysOf<DataT> = KeysOf<DataT>, DefaultT = DataT>(key: MaybeRefOrGetter<string>, handler: (ctx?: NuxtApp) => Promise<ResT>, options?: AsyncDataOptions<ResT, DataT, PickKeys, DefaultT>): AsyncData<PickFrom<DataT, PickKeys> | DefaultT, (NuxtErrorDataT extends Error | NuxtError ? NuxtErrorDataT : NuxtError<NuxtErrorDataT>) | undefined>;
 /**
  * Provides access to data that resolves asynchronously in an SSR-friendly composable.
- * See {@link https://nuxt.com/docs/api/composables/use-lazy-async-data}
+ * See {@link https://nuxt.com/docs/4.x/api/composables/use-lazy-async-data}
  * @since 3.0.0
  * @param handler An asynchronous function that must return a truthy value (for example, it should not be `undefined` or `null`) or the request may be duplicated on the client side.
  * @param options customize the behavior of useLazyAsyncData
@@ -111,7 +111,7 @@ export declare function useLazyAsyncData<ResT, NuxtErrorDataT = unknown, DataT =
 export declare function useLazyAsyncData<ResT, NuxtErrorDataT = unknown, DataT = ResT, PickKeys extends KeysOf<DataT> = KeysOf<DataT>, DefaultT = DataT>(handler: (ctx?: NuxtApp) => Promise<ResT>, options?: Omit<AsyncDataOptions<ResT, DataT, PickKeys, DefaultT>, 'lazy'>): AsyncData<PickFrom<DataT, PickKeys> | DefaultT, (NuxtErrorDataT extends Error | NuxtError ? NuxtErrorDataT : NuxtError<NuxtErrorDataT>) | undefined>;
 /**
  * Provides access to data that resolves asynchronously in an SSR-friendly composable.
- * See {@link https://nuxt.com/docs/api/composables/use-lazy-async-data}
+ * See {@link https://nuxt.com/docs/4.x/api/composables/use-lazy-async-data}
  * @param key A unique key to ensure that data fetching can be properly de-duplicated across requests.
  * @param handler An asynchronous function that must return a truthy value (for example, it should not be `undefined` or `null`) or the request may be duplicated on the client side.
  * @param options customize the behavior of useLazyAsyncData
diff --git a/dist/app/composables/asyncData.js b/dist/app/composables/asyncData.js
index cb2e5a82b4a99918dc1a1b2f1dda4c3c07c0a98f..ab107ac71b0c248272a9fdc16e0611aa42567a6b 100644
--- a/dist/app/composables/asyncData.js
+++ b/dist/app/composables/asyncData.js
@@ -1,9 +1,8 @@
-import { computed, getCurrentInstance, getCurrentScope, inject, isShallow, nextTick, onBeforeMount, onScopeDispose, onServerPrefetch, onUnmounted, ref, shallowRef, toRef, toValue, unref, watch } from "vue";
-import { captureStackTrace } from "errx";
+import { computed, getCurrentInstance, getCurrentScope, inject, isShallow, nextTick, onBeforeMount, onScopeDispose, onServerPrefetch, onUnmounted, queuePostFlushCb, ref, shallowRef, toRef, toValue, unref, watch } from "vue";
 import { debounce } from "perfect-debounce";
 import { hash } from "ohash";
 import { useNuxtApp } from "../nuxt.js";
-import { toArray } from "../utils.js";
+import { getUserCaller, toArray } from "../utils.js";
 import { clientOnlySymbol } from "../components/client-only.js";
 import { createError } from "./error.js";
 import { onNuxtReady } from "./ready.js";
@@ -14,6 +13,7 @@ export function useAsyncData(...args) {
     args.unshift(autoKey);
   }
   let [_key, _handler, options = {}] = args;
+  let keyChanging = false;
   const key = computed(() => toValue(_key));
   if (typeof key.value !== "string") {
     throw new TypeError("[nuxt] [useAsyncData] key must be a string.");
@@ -49,9 +49,8 @@ export function useAsyncData(...args) {
       warnings.push(`mismatching \`deep\` option`);
     }
     if (warnings.length) {
-      const distURL = import.meta.url.replace(/\/app\/.*$/, "/app");
-      const { source, line, column } = captureStackTrace().find((entry) => !entry.source.startsWith(distURL)) ?? {};
-      const explanation = source ? ` (used at ${source.replace(/^file:\/\//, "")}:${line}:${column})` : "";
+      const caller = getUserCaller();
+      const explanation = caller ? ` (used at ${caller.source}:${caller.line}:${caller.column})` : "";
       console.warn(`[nuxt] [${functionName}] Incompatible options detected for "${key.value}"${explanation}:
 ${warnings.map((w) => `- ${w}`).join("\n")}
 You can use a different key or move the call to a composable to ensure the options are shared across calls.`);
@@ -91,7 +90,7 @@ You can use a different key or move the call to a composable to ensure the optio
       instance.sp = [];
     }
     if (import.meta.dev && !nuxtApp.isHydrating && !nuxtApp._processingMiddleware && (!instance || instance?.isMounted)) {
-      console.warn(`[nuxt] [${functionName}] Component is already mounted, please use $fetch instead. See https://nuxt.com/docs/getting-started/data-fetching`);
+      console.warn(`[nuxt] [${functionName}] Component is already mounted, please use $fetch instead. See https://nuxt.com/docs/4.x/getting-started/data-fetching`);
     }
     if (instance && !instance._nuxtOnBeforeMountCbs) {
       instance._nuxtOnBeforeMountCbs = [];
@@ -116,35 +115,45 @@ You can use a different key or move the call to a composable to ensure the optio
       initialFetch();
     }
     const hasScope = getCurrentScope();
-    const unsubExecute = watch([key, ...options.watch || []], ([newKey], [oldKey]) => {
+    const unsubKeyWatcher = watch(key, (newKey, oldKey) => {
       if ((newKey || oldKey) && newKey !== oldKey) {
-        const hasRun = nuxtApp._asyncData[oldKey]?.data.value !== void 0;
-        const isRunning = nuxtApp._asyncDataPromises[oldKey] !== void 0;
-        if (oldKey) {
-          unregister(oldKey);
-        }
+        keyChanging = true;
+        const hadData = nuxtApp._asyncData[oldKey]?.data.value !== void 0;
+        const wasRunning = nuxtApp._asyncDataPromises[oldKey] !== void 0;
         const initialFetchOptions2 = { cause: "initial", dedupe: options.dedupe };
         if (!nuxtApp._asyncData[newKey]?._init) {
-          let value;
-          if (oldKey && hasRun) {
-            value = nuxtApp._asyncData[oldKey]?.data.value;
+          let initialValue;
+          if (oldKey && hadData) {
+            initialValue = nuxtApp._asyncData[oldKey].data.value;
           } else {
-            value = options.getCachedData(newKey, nuxtApp, { cause: "initial" });
-            initialFetchOptions2.cachedData = value;
+            initialValue = options.getCachedData(newKey, nuxtApp, { cause: "initial" });
+            initialFetchOptions2.cachedData = initialValue;
           }
-          nuxtApp._asyncData[newKey] = createAsyncData(nuxtApp, newKey, _handler, options, value);
+          nuxtApp._asyncData[newKey] = createAsyncData(nuxtApp, newKey, _handler, options, initialValue);
         }
         nuxtApp._asyncData[newKey]._deps++;
-        if (options.immediate || hasRun || isRunning) {
+        if (oldKey) {
+          unregister(oldKey);
+        }
+        if (options.immediate || hadData || wasRunning) {
           nuxtApp._asyncData[newKey].execute(initialFetchOptions2);
         }
-      } else {
-        asyncData._execute({ cause: "watch", dedupe: options.dedupe });
+        queuePostFlushCb(() => {
+          keyChanging = false;
+        });
       }
     }, { flush: "sync" });
+    const unsubParamsWatcher = options.watch ? watch(options.watch, () => {
+      if (keyChanging) {
+        return;
+      }
+      asyncData._execute({ cause: "watch", dedupe: options.dedupe });
+    }) : () => {
+    };
     if (hasScope) {
       onScopeDispose(() => {
-        unsubExecute();
+        unsubKeyWatcher();
+        unsubParamsWatcher();
         unregister(key.value);
       });
     }
@@ -344,9 +353,8 @@ function createAsyncData(nuxtApp, key, _handler, options, initialCachedData) {
           result = pick(result, options.pick);
         }
         if (import.meta.dev && import.meta.server && typeof result === "undefined") {
-          const stack = captureStackTrace();
-          const { source, line, column } = stack[stack.length - 1] ?? {};
-          const explanation = source ? ` (used at ${source.replace(/^file:\/\//, "")}:${line}:${column})` : "";
+          const caller = getUserCaller();
+          const explanation = caller ? ` (used at ${caller.source}:${caller.line}:${caller.column})` : "";
           console.warn(`[nuxt] \`${options._functionName || "useAsyncData"}${explanation}\` must return a value (it should not be \`undefined\`) or the request may be duplicated on the client side.`);
         }
         nuxtApp.payload.data[key] = result;
diff --git a/dist/app/composables/cookie.js b/dist/app/composables/cookie.js
index f6e68574ec71b468458aab2c7b5f345b48f4366b..d94d8bc5f487f29f1427b80904db9085b15dda1b 100644
--- a/dist/app/composables/cookie.js
+++ b/dist/app/composables/cookie.js
@@ -13,7 +13,7 @@ const CookieDefaults = {
   decode: (val) => destr(decodeURIComponent(val)),
   encode: (val) => encodeURIComponent(typeof val === "string" ? val : JSON.stringify(val))
 };
-const store = import.meta.client && cookieStore ? window.cookieStore : void 0;
+const store = import.meta.client && cookieStore ? globalThis.cookieStore : void 0;
 export function useCookie(name, _opts) {
   const opts = { ...CookieDefaults, ..._opts };
   opts.filter ??= (key) => key === name;
diff --git a/dist/app/composables/error.js b/dist/app/composables/error.js
index 7c51e4a44e3074b78a64f3e21b60c2755dbfe4c9..509256fd43e245c6d13ea225155e1d72498c1dd5 100644
--- a/dist/app/composables/error.js
+++ b/dist/app/composables/error.js
@@ -3,13 +3,13 @@ import { toRef } from "vue";
 import { useNuxtApp } from "../nuxt.js";
 import { useRouter } from "./router.js";
 export const NUXT_ERROR_SIGNATURE = "__nuxt_error";
-export const useError = () => toRef(useNuxtApp().payload, "error");
+export const useError = /* @__NO_SIDE_EFFECTS__ */ () => toRef(useNuxtApp().payload, "error");
 export const showError = (error) => {
   const nuxtError = createError(error);
   try {
-    const nuxtApp = useNuxtApp();
-    const error2 = useError();
+    const error2 = /* @__PURE__ */ useError();
     if (import.meta.client) {
+      const nuxtApp = useNuxtApp();
       nuxtApp.hooks.callHook("app:error", nuxtError);
     }
     error2.value ||= nuxtError;
@@ -20,7 +20,7 @@ export const showError = (error) => {
 };
 export const clearError = async (options = {}) => {
   const nuxtApp = useNuxtApp();
-  const error = useError();
+  const error = /* @__PURE__ */ useError();
   nuxtApp.callHook("app:error:cleared", options);
   if (options.redirect) {
     await useRouter().replace(options.redirect);
diff --git a/dist/app/composables/fetch.d.ts b/dist/app/composables/fetch.d.ts
index 1f63744c237e519e53ad0e2a02767b3f299ac6d9..446e00ad0b30c48a28a5b6b1a23d626fa89459b7 100644
--- a/dist/app/composables/fetch.d.ts
+++ b/dist/app/composables/fetch.d.ts
@@ -18,7 +18,7 @@ export interface UseFetchOptions<ResT, DataT = ResT, PickKeys extends KeysOf<Dat
 }
 /**
  * Fetch data from an API endpoint with an SSR-friendly composable.
- * See {@link https://nuxt.com/docs/api/composables/use-fetch}
+ * See {@link https://nuxt.com/docs/4.x/api/composables/use-fetch}
  * @since 3.0.0
  * @param request The URL to fetch
  * @param opts extends $fetch options and useAsyncData options
@@ -27,7 +27,7 @@ export declare function useFetch<ResT = void, ErrorT = FetchError, ReqT extends
 export declare function useFetch<ResT = void, ErrorT = FetchError, ReqT extends NitroFetchRequest = NitroFetchRequest, Method extends AvailableRouterMethod<ReqT> = ResT extends void ? 'get' extends AvailableRouterMethod<ReqT> ? 'get' : AvailableRouterMethod<ReqT> : AvailableRouterMethod<ReqT>, _ResT = ResT extends void ? FetchResult<ReqT, Method> : ResT, DataT = _ResT, PickKeys extends KeysOf<DataT> = KeysOf<DataT>, DefaultT = DataT>(request: Ref<ReqT> | ReqT | (() => ReqT), opts?: UseFetchOptions<_ResT, DataT, PickKeys, DefaultT, ReqT, Method>): AsyncData<PickFrom<DataT, PickKeys> | DefaultT, ErrorT | undefined>;
 /**
  * Fetch data from an API endpoint with an SSR-friendly composable.
- * See {@link https://nuxt.com/docs/api/composables/use-lazy-fetch}
+ * See {@link https://nuxt.com/docs/4.x/api/composables/use-lazy-fetch}
  * @since 3.0.0
  * @param request The URL to fetch
  * @param opts extends $fetch options and useAsyncData options
diff --git a/dist/app/composables/head.d.ts b/dist/app/composables/head.d.ts
index f7cfd8bc4531531eb707eae68cb0478be86057ba..5033335296a7a8785ad19b5955141e3bad244765 100644
--- a/dist/app/composables/head.d.ts
+++ b/dist/app/composables/head.d.ts
@@ -1 +1 @@
-export { injectHead, useHead, useServerHead, useSeoMeta, useServerSeoMeta, useHeadSafe, useServerHeadSafe, } from '#unhead/composables';
+export { injectHead, useHead, useServerHead, useSeoMeta, useServerSeoMeta, useHeadSafe, useServerHeadSafe } from '#unhead/composables';
diff --git a/dist/app/composables/head.js b/dist/app/composables/head.js
index c78ed5f7945aac65f7d072392f16e59615880ecd..4a2d0b877710defdf0064b921d83b82dd6d803a5 100644
--- a/dist/app/composables/head.js
+++ b/dist/app/composables/head.js
@@ -1,9 +1 @@
-export {
-  injectHead,
-  useHead,
-  useServerHead,
-  useSeoMeta,
-  useServerSeoMeta,
-  useHeadSafe,
-  useServerHeadSafe
-} from "#unhead/composables";
+export { injectHead, useHead, useServerHead, useSeoMeta, useServerSeoMeta, useHeadSafe, useServerHeadSafe } from "#unhead/composables";
diff --git a/dist/app/composables/once.d.ts b/dist/app/composables/once.d.ts
index c733f7247d3d5feaac758587687f2a1dfdeefb00..4fbf7a27519103c6a3f44fea3062c5c482360af7 100644
--- a/dist/app/composables/once.d.ts
+++ b/dist/app/composables/once.d.ts
@@ -6,7 +6,7 @@ type CallOnceOptions = {
  * @param key a unique key ensuring the function can be properly de-duplicated across requests
  * @param fn a function to call
  * @param options Setup the mode, e.g. to re-execute on navigation
- * @see https://nuxt.com/docs/api/utils/call-once
+ * @see https://nuxt.com/docs/4.x/api/utils/call-once
  * @since 3.9.0
  */
 export declare function callOnce(key?: string, fn?: (() => any | Promise<any>), options?: CallOnceOptions): Promise<void>;
diff --git a/dist/app/composables/payload.js b/dist/app/composables/payload.js
index 42cb4ec1c5e3a42fc9fdc68d2121ea3e91d0df1c..58d7fe72550a3d89b0bb85e82911c152a01cc0ab 100644
--- a/dist/app/composables/payload.js
+++ b/dist/app/composables/payload.js
@@ -1,4 +1,4 @@
-import { hasProtocol, joinURL, withoutTrailingSlash } from "ufo";
+import { hasProtocol, joinURL } from "ufo";
 import { parse } from "devalue";
 import { getCurrentInstance, onServerPrefetch, reactive } from "vue";
 import { useNuxtApp, useRuntimeConfig } from "../nuxt.js";
@@ -85,7 +85,7 @@ export async function isPrerendered(url = useRoute().path) {
   if (!appManifest) {
     return !!nuxtApp.payload.prerenderedAt;
   }
-  url = withoutTrailingSlash(url);
+  url = url.replace(/\/$/, "");
   const manifest = await getAppManifest();
   if (manifest.prerendered.includes(url)) {
     return true;
diff --git a/dist/app/composables/preload.js b/dist/app/composables/preload.js
index 0d541f402dd95317b827f9258496df77842b5395..7b2a129b2edd97544a5c6cb0d8a6614e0af286da 100644
--- a/dist/app/composables/preload.js
+++ b/dist/app/composables/preload.js
@@ -42,8 +42,11 @@ export async function preloadRouteComponents(to, router = useRouter()) {
     return Promise.all(promises).then(() => preloadRouteComponents(to, router));
   }
   router._routePreloaded.add(path);
-  const components = matched.map((component) => component.components?.default).filter((component) => typeof component === "function");
-  for (const component of components) {
+  for (const route of matched) {
+    const component = route.components?.default;
+    if (typeof component !== "function") {
+      continue;
+    }
     const promise = Promise.resolve(component()).catch(() => {
     }).finally(() => promises.splice(promises.indexOf(promise)));
     promises.push(promise);
diff --git a/dist/app/composables/router.d.ts b/dist/app/composables/router.d.ts
index 49fdb5de7f484245ccc91a6fea47fe63120efc2b..1c1f03f0fdd5ba28a4aee498e2dc037e745b1fef 100644
--- a/dist/app/composables/router.d.ts
+++ b/dist/app/composables/router.d.ts
@@ -53,12 +53,30 @@ export type OpenOptions = {
     windowFeatures?: OpenWindowFeatures;
 };
 export interface NavigateToOptions {
+    /**
+     * Whether or not the given route should replace the current route in the navigation history, rather than push it.
+     */
     replace?: boolean;
+    /**
+     * The status code to emit with the navigation. Defaults to `302 Found` when used on server side redirects.
+     */
     redirectCode?: number;
+    /**
+     * Whether or not the given route is a website/resource from a different origin. By default, navigating to external resources without setting `external: true` would result in an error.
+     */
     external?: boolean;
     open?: OpenOptions;
 }
-/** @since 3.0.0 */
+/**
+ * A helper that aids in programmatic navigation within your Nuxt application.
+ *
+ * Can be called on the server and on the client, within pages, route middleware, plugins, and more.
+ * @param {RouteLocationRaw | undefined | null} [to] - The route to navigate to. Accepts a route object, string path, `undefined`, or `null`. Defaults to '/'.
+ * @param {NavigateToOptions} [options] - Optional customization for controlling the behavior of the navigation.
+ * @returns {Promise<void | NavigationFailure | false> | false | void | RouteLocationRaw} The navigation result, which varies depending on context and options.
+ * @see https://nuxt.com/docs/4.x/api/utils/navigate-to
+ * @since 3.0.0
+ */
 export declare const navigateTo: (to: RouteLocationRaw | undefined | null, options?: NavigateToOptions) => Promise<void | NavigationFailure | false> | false | void | RouteLocationRaw;
 /**
  * This will abort navigation within a Nuxt route middleware handler.
diff --git a/dist/app/composables/router.js b/dist/app/composables/router.js
index 1f58372df8ecb14a3dc73c42e56493759a5cca89..d010b92aacdcdb1a9aaedf865cdc6edfc559104c 100644
--- a/dist/app/composables/router.js
+++ b/dist/app/composables/router.js
@@ -4,12 +4,15 @@ import { hasProtocol, isScriptProtocol, joinURL, parseQuery, parseURL, withQuery
 import { useNuxtApp, useRuntimeConfig } from "../nuxt.js";
 import { PageRouteSymbol } from "../components/injections.js";
 import { createError, showError } from "./error.js";
+import { getUserTrace } from "../utils.js";
 export const useRouter = () => {
   return useNuxtApp()?.$router;
 };
 export const useRoute = () => {
   if (import.meta.dev && !getCurrentInstance() && isProcessingMiddleware()) {
-    console.warn("[nuxt] Calling `useRoute` within middleware may lead to misleading results. Instead, use the (to, from) arguments passed to the middleware to access the new and old routes. Learn more: https://nuxt.com/docs/4.x/guide/directory-structure/app/middleware#accessing-route-in-middleware");
+    const middleware = useNuxtApp()._processingMiddleware;
+    const trace = getUserTrace().map(({ source, line, column }) => `at ${source}:${line}:${column}`).join("\n");
+    console.warn(`[nuxt] \`useRoute\` was called within middleware${typeof middleware === "string" ? ` (\`${middleware}\`)` : ""}. This may lead to misleading results. Instead, use the (to, from) arguments passed to the middleware to access the new and old routes. Learn more: https://nuxt.com/docs/4.x/guide/directory-structure/app/middleware#accessing-route-in-middleware` + ("\n" + trace));
   }
   if (hasInjectionContext()) {
     return inject(PageRouteSymbol, useNuxtApp()._route);
@@ -63,8 +66,13 @@ export const navigateTo = (to, options) => {
   const toPath = typeof to === "string" ? to : "path" in to ? resolveRouteObject(to) : useRouter().resolve(to).href;
   if (import.meta.client && options?.open) {
     const { target = "_blank", windowFeatures = {} } = options.open;
-    const features = Object.entries(windowFeatures).filter(([_, value]) => value !== void 0).map(([feature, value]) => `${feature.toLowerCase()}=${value}`).join(", ");
-    open(toPath, target, features);
+    const features = [];
+    for (const [feature, value] of Object.entries(windowFeatures)) {
+      if (value !== void 0) {
+        features.push(`${feature.toLowerCase()}=${value}`);
+      }
+    }
+    open(toPath, target, features.join(", "));
     return Promise.resolve();
   }
   const isExternalHost = hasProtocol(toPath, { acceptRelative: true });
diff --git a/dist/app/composables/script-stubs.d.ts b/dist/app/composables/script-stubs.d.ts
index 263c7e561ee2a1aa8bcaf3e40bc463b513984dbb..e5c2b2962151129f3bfb98349c980c9afafc02e5 100644
--- a/dist/app/composables/script-stubs.d.ts
+++ b/dist/app/composables/script-stubs.d.ts
@@ -27,3 +27,6 @@ export declare function useScriptYouTubePlayer(...args: unknown[]): void;
 export declare function useScriptUmamiAnalytics(...args: unknown[]): void;
 export declare function useScriptSnapchatPixel(...args: unknown[]): void;
 export declare function useScriptRybbitAnalytics(...args: unknown[]): void;
+export declare function useScriptDatabuddyAnalytics(...args: unknown[]): void;
+export declare function useScriptRedditPixel(...args: unknown[]): void;
+export declare function useScriptPayPal(...args: unknown[]): void;
diff --git a/dist/app/composables/script-stubs.js b/dist/app/composables/script-stubs.js
index 8851125cc9d4b0552ad560125fcee82c8eb57cd1..f60819f83e646327b8d89513fe359375fa7d5221 100644
--- a/dist/app/composables/script-stubs.js
+++ b/dist/app/composables/script-stubs.js
@@ -93,3 +93,12 @@ export function useScriptSnapchatPixel(...args) {
 export function useScriptRybbitAnalytics(...args) {
   renderStubMessage("useScriptRybbitAnalytics");
 }
+export function useScriptDatabuddyAnalytics(...args) {
+  renderStubMessage("useScriptDatabuddyAnalytics");
+}
+export function useScriptRedditPixel(...args) {
+  renderStubMessage("useScriptRedditPixel");
+}
+export function useScriptPayPal(...args) {
+  renderStubMessage("useScriptPayPal");
+}
diff --git a/dist/app/composables/url.js b/dist/app/composables/url.js
index d0365905a038de1e9c97560b8863d9e3a998b80a..5c52f2de96aad974caf4ee0076cde87ce6e127e7 100644
--- a/dist/app/composables/url.js
+++ b/dist/app/composables/url.js
@@ -4,5 +4,5 @@ export function useRequestURL(opts) {
   if (import.meta.server) {
     return getRequestURL(useRequestEvent(), opts);
   }
-  return new URL(window.location.href);
+  return new URL(globalThis.location.href);
 }
diff --git a/dist/app/deserialize.d.ts b/dist/app/deserialize.d.ts
new file mode 100644
index 0000000000000000000000000000000000000000..2f07a2fdeb3e30b09fb39572fda159387059cdad
--- /dev/null
+++ b/dist/app/deserialize.d.ts
@@ -0,0 +1,4 @@
+import { type VNode } from "vue";
+import { type VServerComponent } from "./shared.js";
+export declare function renderServerComponent(input?: VServerComponent): VNode | undefined;
+export declare function renderChildren(data: VServerComponent | VServerComponent[] | undefined): VNode | undefined;
diff --git a/dist/app/deserialize.js b/dist/app/deserialize.js
new file mode 100644
index 0000000000000000000000000000000000000000..4cdf208b89739d33cf180de20c10f9a916fd630e
--- /dev/null
+++ b/dist/app/deserialize.js
@@ -0,0 +1,30 @@
+import { createTextVNode, h, Fragment, Suspense } from "vue";
+import { VServerComponentType } from "./shared";
+import loader from "./components/loader";
+export function renderServerComponent(input) {
+  if (!input) return;
+  if (input.type === VServerComponentType.Text) {
+    return createTextVNode(input.text);
+  }
+  if (input.type === VServerComponentType.Element) {
+    return h(input.tag, input.props, Array.isArray(input.children) ? input.children.map(renderServerComponent) : renderServerComponent(input.children));
+  }
+  if (input.type === VServerComponentType.Component) {
+    return h(Suspense, {}, {
+      default: () => h(loader, {
+        data: input
+      })
+    });
+  }
+  if (input.type === VServerComponentType.Fragment) {
+    return Array.isArray(input.children) ? h(Fragment, input.children.map(renderServerComponent)) : renderServerComponent(input.children);
+  }
+}
+export function renderChildren(data) {
+  if (!data) return;
+  if (Array.isArray(data)) {
+    return h(Fragment, data.map(renderServerComponent));
+  } else {
+    return renderServerComponent(data);
+  }
+}
diff --git a/dist/app/entry.js b/dist/app/entry.js
index e6821aaa297411937119f71de6d86c3c2b8b2343..fcb30f22c04cf66d994f86943377065a5f617bbc 100644
--- a/dist/app/entry.js
+++ b/dist/app/entry.js
@@ -10,7 +10,7 @@ import { appId, appSpaLoaderAttrs, multiApp, spaLoadingTemplateOutside, vueAppRo
 let entry;
 if (import.meta.server) {
   entry = async function createNuxtAppServer(ssrContext) {
-    const vueApp = createApp(RootComponent);
+    const vueApp = createApp(ssrContext?.rootComponent ?? RootComponent, ssrContext?.islandContext?.props);
     const nuxt = createNuxtApp({ vueApp, ssrContext });
     try {
       await applyPlugins(nuxt, plugins);
diff --git a/dist/app/island.d.ts b/dist/app/island.d.ts
new file mode 100644
index 0000000000000000000000000000000000000000..df62284ee8906db0ac4abab8abbd0064753a0ae0
--- /dev/null
+++ b/dist/app/island.d.ts
@@ -0,0 +1,7 @@
+import type { SSRContext } from "vue/server-renderer";
+import type { App, DefineComponent, VNode } from "vue";
+export declare function renderIsland(_component: DefineComponent, props: any, context?: SSRContext): Promise<any>;
+export declare function renderAsServerComponent(input: App | VNode, context?: SSRContext, props?: any): Promise<{
+    html: string;
+    ast: any;
+}>;
diff --git a/dist/app/island.js b/dist/app/island.js
new file mode 100644
index 0000000000000000000000000000000000000000..83f3a64b2f8c15845c4c2f9a4a9f40814d62d56f
--- /dev/null
+++ b/dist/app/island.js
@@ -0,0 +1,24 @@
+import { isVNode, createApp } from "vue";
+import { renderToString } from "vue/server-renderer";
+import { renderToAST } from "./serialize";
+import { h } from "vue";
+export async function renderIsland(_component, props, context = {}) {
+  const component = _component.__vnodeVersion ? await import(_component.__vnodeVersion).then((m) => m.default || m) : _component;
+  const app = createApp(() => h(component, props));
+  return await renderToAST(app, context);
+}
+export async function renderAsServerComponent(input, context = {}, props) {
+  if (isVNode(input)) {
+    return renderAsServerComponent(createApp({ render: () => input }), context);
+  }
+  if (!input.version) {
+    return renderAsServerComponent(createApp(input, props), context);
+  }
+  const htmlPromise = renderToString(input, context);
+  const astPromise = renderToAST(input, context);
+  const [html, ast] = await Promise.all([htmlPromise, astPromise]);
+  return {
+    html,
+    ast
+  };
+}
diff --git a/dist/app/nuxt.d.ts b/dist/app/nuxt.d.ts
index 084269f5159dc23cdb0b69bdedcf7f1747abdf0d..e8ad9530d214abbc636d7ebc59b03ce83e735446 100644
--- a/dist/app/nuxt.d.ts
+++ b/dist/app/nuxt.d.ts
@@ -73,6 +73,7 @@ export interface NuxtSSRContext extends SSRContext {
     };
     /** @internal */
     _preloadManifest?: boolean;
+    rootComponent?: VNode;
 }
 export interface NuxtPayload {
     path?: string;
@@ -134,6 +135,8 @@ interface _NuxtApp {
         named: Record<string, RouteMiddleware>;
     };
     /** @internal */
+    _processingMiddleware?: string | boolean;
+    /** @internal */
     _once: {
         [key: string]: Promise<any>;
     };
diff --git a/dist/app/nuxt.js b/dist/app/nuxt.js
index 0077fe87ac54afa1110b02eb16ad754ac06b13e8..7885901693b4dc38c7b040dac0073b8d3b96b382 100644
--- a/dist/app/nuxt.js
+++ b/dist/app/nuxt.js
@@ -238,7 +238,7 @@ export function useNuxtApp(id) {
   const nuxtAppInstance = tryUseNuxtApp(id);
   if (!nuxtAppInstance) {
     if (import.meta.dev) {
-      throw new Error("[nuxt] A composable that requires access to the Nuxt instance was called outside of a plugin, Nuxt hook, Nuxt middleware, or Vue setup function. This is probably not a Nuxt bug. Find out more at `https://nuxt.com/docs/guide/concepts/auto-imports#vue-and-nuxt-composables`.");
+      throw new Error("[nuxt] A composable that requires access to the Nuxt instance was called outside of a plugin, Nuxt hook, Nuxt middleware, or Vue setup function. This is probably not a Nuxt bug. Find out more at `https://nuxt.com/docs/4.x/guide/concepts/auto-imports#vue-and-nuxt-composables`.");
     } else {
       throw new Error("[nuxt] instance unavailable");
     }
@@ -260,14 +260,17 @@ function wrappedConfig(runtimeConfig) {
   if (!import.meta.dev || import.meta.server) {
     return runtimeConfig;
   }
-  const keys = Object.keys(runtimeConfig).map((key) => `\`${key}\``);
+  const keys = [];
+  for (const key in runtimeConfig) {
+    keys.push(`\`${key}\``);
+  }
   const lastKey = keys.pop();
   return new Proxy(runtimeConfig, {
     get(target, p, receiver) {
       if (typeof p === "string" && p !== "public" && !(p in target) && !p.startsWith("__v")) {
         if (!loggedKeys.has(p)) {
           loggedKeys.add(p);
-          console.warn(`[nuxt] Could not access \`${p}\`. The only available runtime config keys on the client side are ${keys.join(", ")} and ${lastKey}. See https://nuxt.com/docs/guide/going-further/runtime-config for more information.`);
+          console.warn(`[nuxt] Could not access \`${p}\`. The only available runtime config keys on the client side are ${keys.join(", ")} and ${lastKey}. See https://nuxt.com/docs/4.x/guide/going-further/runtime-config for more information.`);
         }
       }
       return Reflect.get(target, p, receiver);
diff --git a/dist/app/plugins/router.js b/dist/app/plugins/router.js
index b0a6d0823fb48132bf80984d4f7245612057339d..86bc34b20f62843266112cb1de3e178a9d5f50c5 100644
--- a/dist/app/plugins/router.js
+++ b/dist/app/plugins/router.js
@@ -178,6 +178,9 @@ export default defineNuxtPlugin({
             }
           }
           for (const middleware of middlewareEntries) {
+            if (import.meta.dev) {
+              nuxtApp._processingMiddleware = middleware._path || true;
+            }
             const result = await nuxtApp.runWithContext(() => middleware(to, from));
             if (import.meta.server) {
               if (result === false || result instanceof Error) {
diff --git a/dist/app/utils.d.ts b/dist/app/utils.d.ts
index 016074d602b9fcacd3e362cd972f925ef4041b05..a54a61f8b072d1f7239b69afd2105d48c54fb522 100644
--- a/dist/app/utils.d.ts
+++ b/dist/app/utils.d.ts
@@ -1,2 +1,13 @@
 /** @since 3.9.0 */
 export declare function toArray<T>(value: T | T[]): T[];
+export declare function getUserTrace(): {
+    source: string;
+    column?: number;
+    function?: string;
+    line?: number;
+}[];
+export declare function getUserCaller(): {
+    source: string;
+    line: number | undefined;
+    column: number | undefined;
+} | null;
diff --git a/dist/app/utils.js b/dist/app/utils.js
index 2f7cfc7c2a5ccc169b1a4d0f5efc0c2fdd27a13d..2e66989192bd2b6b1aad6587bfa53920a33be704 100644
--- a/dist/app/utils.js
+++ b/dist/app/utils.js
@@ -1,3 +1,34 @@
+import { captureStackTrace } from "errx";
 export function toArray(value) {
   return Array.isArray(value) ? value : [value];
 }
+const distURL = import.meta.url.replace(/\/app\/.*$/, "/");
+export function getUserTrace() {
+  if (!import.meta.dev) {
+    return [];
+  }
+  const trace = captureStackTrace();
+  const start = trace.findIndex((entry) => !entry.source.startsWith(distURL));
+  const end = [...trace].reverse().findIndex((entry) => !entry.source.includes("node_modules") && !entry.source.startsWith(distURL));
+  if (start === -1 || end === -1) {
+    return [];
+  }
+  return trace.slice(start, -end).map((i) => ({
+    ...i,
+    source: i.source.replace(/^file:\/\//, "")
+  }));
+}
+export function getUserCaller() {
+  if (!import.meta.dev) {
+    return null;
+  }
+  const { source, line, column } = captureStackTrace().find((entry) => !entry.source.startsWith(distURL)) ?? {};
+  if (!source) {
+    return null;
+  }
+  return {
+    source: source.replace(/^file:\/\//, ""),
+    line,
+    column
+  };
+}
diff --git a/dist/components/runtime/lazy-hydrated-component.js b/dist/components/runtime/lazy-hydrated-component.js
index 71efec33174f68a8a5624eab16d53424f8c1f152..4d83a752c1d6f81f5894a7c404e93e404c71fcc6 100644
--- a/dist/components/runtime/lazy-hydrated-component.js
+++ b/dist/components/runtime/lazy-hydrated-component.js
@@ -1,4 +1,4 @@
-import { defineAsyncComponent, defineComponent, h, hydrateOnIdle, hydrateOnInteraction, hydrateOnMediaQuery, hydrateOnVisible, mergeProps, watch } from "vue";
+import { defineAsyncComponent, defineComponent, h, hydrateOnIdle, hydrateOnInteraction, hydrateOnMediaQuery, hydrateOnVisible, mergeProps } from "vue";
 import { useNuxtApp } from "#app/nuxt";
 function defineLazyComponent(props, defineStrategy) {
   return (id, loader) => defineComponent({
@@ -71,10 +71,9 @@ export const createLazyIfComponent = defineLazyComponent(
       default: true
     }
   },
-  (props) => props.hydrateWhen ? void 0 : (hydrate) => {
-    const unwatch = watch(() => props.hydrateWhen, () => hydrate(), { once: true });
-    return () => unwatch();
+  (props) => props.hydrateWhen ? void 0 : () => {
   }
+  /* Vue will trigger the hydration automatically when the prop changes */
 );
 export const createLazyTimeComponent = defineLazyComponent(
   {
diff --git a/dist/core/runtime/nitro/handlers/island.js b/dist/core/runtime/nitro/handlers/island.js
index 5d35c092874880bf098414df7f9d3410e12d7516..4af757b56a6dbf38788430df2874d0b46dd604e5 100644
--- a/dist/core/runtime/nitro/handlers/island.js
+++ b/dist/core/runtime/nitro/handlers/island.js
@@ -4,11 +4,12 @@ import { defineEventHandler, getQuery, readBody, setResponseHeaders } from "h3";
 import { resolveUnrefHeadInput } from "@unhead/vue";
 import { getRequestDependencies } from "vue-bundle-renderer/runtime";
 import { getQuery as getURLQuery } from "ufo";
+import { serializeApp } from "vue-onigiri/runtime/serialize";
 import { islandCache, islandPropCache } from "../utils/cache.js";
 import { createSSRContext } from "../utils/renderer/app.js";
-import { getSSRRenderer } from "../utils/renderer/build-files.js";
+import { getComponentsIslands, getSSRRenderer, getServerEntry } from "../utils/renderer/build-files.js";
 import { renderInlineStyles } from "../utils/renderer/inline-styles.js";
-import { getClientIslandResponse, getServerComponentHTML, getSlotIslandResponse } from "../utils/renderer/islands.js";
+const components = (await getComponentsIslands()).islandComponents;
 const ISLAND_SUFFIX_RE = /\.json(?:\?.*)?$/;
 export default defineEventHandler(async (event) => {
   const nitroApp = useNitroApp();
@@ -27,12 +28,15 @@ export default defineEventHandler(async (event) => {
     url: islandContext.url
   };
   const renderer = await getSSRRenderer();
-  const renderResult = await renderer.renderToString(ssrContext).catch(async (error) => {
-    await ssrContext.nuxt?.hooks.callHook("app:error", error);
-    throw error;
-  });
+  const createSSRApp = await getServerEntry();
+  ssrContext.rootComponent = components[islandContext.name];
+  const app = await createSSRApp(ssrContext, renderer.rendererContext);
+  const ast = await app.runWithContext(() => serializeApp(app, ssrContext));
+  if (ssrContext.payload?.error) {
+    throw ssrContext.payload.error;
+  }
   const inlinedStyles = await renderInlineStyles(ssrContext.modules ?? []);
-  await ssrContext.nuxt?.hooks.callHook("app:rendered", { ssrContext, renderResult });
+  await ssrContext.nuxt?.hooks.callHook("app:rendered", { ssrContext });
   if (inlinedStyles.length) {
     ssrContext.head.push({ style: inlinedStyles });
   }
@@ -44,7 +48,7 @@ export default defineEventHandler(async (event) => {
         continue;
       }
       if (resource.file.includes("scoped") && !resource.file.includes("pages/")) {
-        link.push({ rel: "stylesheet", href: renderer.rendererContext.buildAssetsURL(resource.file), crossorigin: "" });
+        link.push({ rel: "stylesheet", href: renderer.rendererContext.buildAssetsURL(resource.file.replace("virtual:vsc:", "")), crossorigin: "" });
       }
     }
     if (link.length) {
@@ -64,9 +68,7 @@ export default defineEventHandler(async (event) => {
   const islandResponse = {
     id: islandContext.id,
     head: islandHead,
-    html: getServerComponentHTML(renderResult.html),
-    components: getClientIslandResponse(ssrContext),
-    slots: getSlotIslandResponse(ssrContext)
+    ast
   };
   await nitroApp.hooks.callHook("render:island", islandResponse, { event, islandContext });
   if (import.meta.prerender) {
diff --git a/dist/core/runtime/nitro/handlers/renderer.js b/dist/core/runtime/nitro/handlers/renderer.js
index 7046c97992c550e1af5e28acc258aad332ba8ebe..303bfbfada98425566409a8bab5352ac8588786a 100644
--- a/dist/core/runtime/nitro/handlers/renderer.js
+++ b/dist/core/runtime/nitro/handlers/renderer.js
@@ -6,7 +6,7 @@ import {
   renderResourceHeaders
 } from "vue-bundle-renderer/runtime";
 import { appendResponseHeader, createError, getQuery, getResponseStatus, getResponseStatusText, writeEarlyHints } from "h3";
-import { getQuery as getURLQuery, joinURL, withoutTrailingSlash } from "ufo";
+import { getQuery as getURLQuery, joinURL } from "ufo";
 import { propsToString, renderSSRHead } from "@unhead/vue/server";
 import destr from "destr";
 import { defineRenderHandler, getRouteRules, useNitroApp } from "nitropack/runtime";
@@ -15,11 +15,11 @@ import { payloadCache } from "../utils/cache.js";
 import { renderPayloadJsonScript, renderPayloadResponse, renderPayloadScript, splitPayload } from "../utils/renderer/payload.js";
 import { createSSRContext, setSSRError } from "../utils/renderer/app.js";
 import { renderInlineStyles } from "../utils/renderer/inline-styles.js";
-import { replaceIslandTeleports } from "../utils/renderer/islands.js";
 import { renderSSRHeadOptions } from "#internal/unhead.config.mjs";
-import { appHead, appTeleportAttrs, appTeleportTag, componentIslands, appManifest as isAppManifestEnabled } from "#internal/nuxt.config.mjs";
+import { appHead, appTeleportAttrs, appTeleportTag, appManifest as isAppManifestEnabled } from "#internal/nuxt.config.mjs";
 import { entryFileName } from "#internal/entry-chunk.mjs";
 import { buildAssetsURL, publicAssetsURL } from "#internal/nuxt/paths";
+import { relative } from "pathe";
 globalThis.__buildAssetsURL = buildAssetsURL;
 globalThis.__publicAssetsURL = publicAssetsURL;
 if (process.env.NUXT_ASYNC_CONTEXT && !("AsyncLocalStorage" in globalThis)) {
@@ -30,6 +30,7 @@ const APP_TELEPORT_OPEN_TAG = HAS_APP_TELEPORTS ? `<${appTeleportTag}${propsToSt
 const APP_TELEPORT_CLOSE_TAG = HAS_APP_TELEPORTS ? `</${appTeleportTag}>` : "";
 const PAYLOAD_URL_RE = process.env.NUXT_JSON_PAYLOADS ? /^[^?]*\/_payload.json(?:\?.*)?$/ : /^[^?]*\/_payload.js(?:\?.*)?$/;
 const PAYLOAD_FILENAME = process.env.NUXT_JSON_PAYLOADS ? "_payload.json" : "_payload.js";
+let entryPath;
 export default defineRenderHandler(async (event) => {
   const nitroApp = useNitroApp();
   const ssrError = event.path.startsWith("/__nuxt_error") ? getQuery(event) : null;
@@ -104,17 +105,29 @@ export default defineRenderHandler(async (event) => {
   }
   if (_PAYLOAD_EXTRACTION) {
     appendResponseHeader(event, "x-nitro-prerender", joinURL(ssrContext.url.replace(/\?.*$/, ""), PAYLOAD_FILENAME));
-    await payloadCache.setItem(withoutTrailingSlash(ssrContext.url), renderPayloadResponse(ssrContext));
+    await payloadCache.setItem(ssrContext.url.replace(/\/$/, ""), renderPayloadResponse(ssrContext));
   }
   const NO_SCRIPTS = process.env.NUXT_NO_SCRIPTS || routeOptions.noScripts;
   const { styles, scripts } = getRequestDependencies(ssrContext, renderer.rendererContext);
   if (entryFileName && !NO_SCRIPTS) {
+    let path = entryPath;
+    if (!path) {
+      path = buildAssetsURL(entryFileName);
+      if (ssrContext.runtimeConfig.app.cdnURL || /^(?:\/|\.+\/)/.test(path)) {
+        entryPath = path;
+      } else {
+        path = relative(event.path.replace(/\/[^/]+$/, "/"), joinURL("/", path));
+        if (!/^(?:\/|\.+\/)/.test(path)) {
+          path = `./${path}`;
+        }
+      }
+    }
     ssrContext.head.push({
       script: [{
         tagPosition: "head",
         tagPriority: -2,
         type: "importmap",
-        innerHTML: JSON.stringify({ imports: { "#entry": buildAssetsURL(entryFileName) } })
+        innerHTML: JSON.stringify({ imports: { "#entry": path } })
       }]
     }, headEntryOptions);
   }
@@ -136,7 +149,7 @@ export default defineRenderHandler(async (event) => {
     ssrContext.head.push({ style: inlinedStyles });
   }
   const link = [];
-  for (const resource of Object.values(styles)) {
+  for (const resource of Object.values(styles).filter((r) => !r.file.includes("virtual:vsc:"))) {
     if (import.meta.dev && "inline" in getURLQuery(resource.file)) {
       continue;
     }
@@ -147,10 +160,10 @@ export default defineRenderHandler(async (event) => {
   }
   if (!NO_SCRIPTS) {
     ssrContext.head.push({
-      link: getPreloadLinks(ssrContext, renderer.rendererContext)
+      link: getPreloadLinks(ssrContext, renderer.rendererContext).filter((l) => !l.href.includes("virtual:vsc:"))
     }, headEntryOptions);
     ssrContext.head.push({
-      link: getPrefetchLinks(ssrContext, renderer.rendererContext)
+      link: getPrefetchLinks(ssrContext, renderer.rendererContext).filter((l) => !l.href.includes("virtual:vsc:"))
     }, headEntryOptions);
     ssrContext.head.push({
       script: _PAYLOAD_EXTRACTION ? process.env.NUXT_JSON_PAYLOADS ? renderPayloadJsonScript({ ssrContext, data: splitPayload(ssrContext).initial, src: payloadURL }) : renderPayloadScript({ ssrContext, data: splitPayload(ssrContext).initial, src: payloadURL }) : process.env.NUXT_JSON_PAYLOADS ? renderPayloadJsonScript({ ssrContext, data: ssrContext.payload }) : renderPayloadScript({ ssrContext, data: ssrContext.payload })
@@ -182,7 +195,7 @@ export default defineRenderHandler(async (event) => {
     bodyAttrs: bodyAttrs ? [bodyAttrs] : [],
     bodyPrepend: normalizeChunks([bodyTagsOpen, ssrContext.teleports?.body]),
     body: [
-      componentIslands ? replaceIslandTeleports(ssrContext, _rendered.html) : _rendered.html,
+      _rendered.html,
       APP_TELEPORT_OPEN_TAG + (HAS_APP_TELEPORTS ? joinTags([ssrContext.teleports?.[`#${appTeleportAttrs.id}`]]) : "") + APP_TELEPORT_CLOSE_TAG
     ],
     bodyAppend: [bodyTags]
@@ -199,7 +212,14 @@ export default defineRenderHandler(async (event) => {
   };
 });
 function normalizeChunks(chunks) {
-  return chunks.filter(Boolean).map((i) => i.trim());
+  const result = [];
+  for (const _chunk of chunks) {
+    const chunk = _chunk?.trim();
+    if (chunk) {
+      result.push(chunk);
+    }
+  }
+  return result;
 }
 function joinTags(tags) {
   return tags.join("");
diff --git a/dist/core/runtime/nitro/plugins/dev-server-logs.js b/dist/core/runtime/nitro/plugins/dev-server-logs.js
index 4fda5a0c4a65b8ba2a42796bc1753b6ebb368ab3..3a9ac37989c434834063245cd53f6c16d359df8a 100644
--- a/dist/core/runtime/nitro/plugins/dev-server-logs.js
+++ b/dist/core/runtime/nitro/plugins/dev-server-logs.js
@@ -67,7 +67,7 @@ export default (nitroApp) => {
       htmlContext.bodyAppend.unshift(`<script type="application/json" data-nuxt-logs="${appId}">${stringify(ctx.logs, reducers)}<\/script>`);
     } catch (e) {
       const shortError = e instanceof Error && "toString" in e ? ` Received \`${e.toString()}\`.` : "";
-      console.warn(`[nuxt] Failed to stringify dev server logs.${shortError} You can define your own reducer/reviver for rich types following the instructions in https://nuxt.com/docs/api/composables/use-nuxt-app#payload.`);
+      console.warn(`[nuxt] Failed to stringify dev server logs.${shortError} You can define your own reducer/reviver for rich types following the instructions in https://nuxt.com/docs/4.x/api/composables/use-nuxt-app#payload.`);
     }
   });
 };
diff --git a/dist/core/runtime/nitro/templates/error-dev.js b/dist/core/runtime/nitro/templates/error-dev.js
index 20087a8abcee6700b182fd521f39a5aba63969f9..dce94580561d7c4fa8b9ae13deddbe40c460d350 100644
--- a/dist/core/runtime/nitro/templates/error-dev.js
+++ b/dist/core/runtime/nitro/templates/error-dev.js
@@ -2,5 +2,5 @@ import { escapeHtml } from "@vue/shared";
 const _messages = { "appName": "Nuxt", "statusCode": 500, "statusMessage": "Server error", "description": "An error occurred in the application and the page could not be served.", "stack": "" };
 export const template = (messages) => {
   messages = { ..._messages, ...messages };
-  return '<!DOCTYPE html><html lang="en"><head><title>' + escapeHtml(messages.statusCode) + " - " + escapeHtml(messages.statusMessage || "Internal Server Error") + `</title><meta charset="utf-8"><meta content="width=device-width,initial-scale=1.0,minimum-scale=1.0" name="viewport"><script>!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))r(e);new MutationObserver(e=>{for(const o of e)if("childList"===o.type)for(const e of o.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&r(e)}).observe(document,{childList:!0,subtree:!0})}function r(e){if(e.ep)return;e.ep=!0;const r=function(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerPolicy&&(r.referrerPolicy=e.referrerPolicy),"use-credentials"===e.crossOrigin?r.credentials="include":"anonymous"===e.crossOrigin?r.credentials="omit":r.credentials="same-origin",r}(e);fetch(e.href,r)}}();<\/script><style>*,:after,:before{border-color:var(--un-default-border-color,#e5e7eb);border-style:solid;border-width:0;box-sizing:border-box}:after,:before{--un-content:""}html{line-height:1.5;-webkit-text-size-adjust:100%;font-family:ui-sans-serif,system-ui,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;font-feature-settings:normal;font-variation-settings:normal;-moz-tab-size:4;tab-size:4;-webkit-tap-highlight-color:transparent}body{line-height:inherit;margin:0}h1{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}h1,p{margin:0}*,:after,:before{--un-rotate:0;--un-rotate-x:0;--un-rotate-y:0;--un-rotate-z:0;--un-scale-x:1;--un-scale-y:1;--un-scale-z:1;--un-skew-x:0;--un-skew-y:0;--un-translate-x:0;--un-translate-y:0;--un-translate-z:0;--un-pan-x: ;--un-pan-y: ;--un-pinch-zoom: ;--un-scroll-snap-strictness:proximity;--un-ordinal: ;--un-slashed-zero: ;--un-numeric-figure: ;--un-numeric-spacing: ;--un-numeric-fraction: ;--un-border-spacing-x:0;--un-border-spacing-y:0;--un-ring-offset-shadow:0 0 transparent;--un-ring-shadow:0 0 transparent;--un-shadow-inset: ;--un-shadow:0 0 transparent;--un-ring-inset: ;--un-ring-offset-width:0px;--un-ring-offset-color:#fff;--un-ring-width:0px;--un-ring-color:rgba(147,197,253,.5);--un-blur: ;--un-brightness: ;--un-contrast: ;--un-drop-shadow: ;--un-grayscale: ;--un-hue-rotate: ;--un-invert: ;--un-saturate: ;--un-sepia: ;--un-backdrop-blur: ;--un-backdrop-brightness: ;--un-backdrop-contrast: ;--un-backdrop-grayscale: ;--un-backdrop-hue-rotate: ;--un-backdrop-invert: ;--un-backdrop-opacity: ;--un-backdrop-saturate: ;--un-backdrop-sepia: }.absolute{position:absolute}.top-6{top:1.5rem}.z-10{z-index:10}.mx-auto{margin-left:auto;margin-right:auto}.mb-4{margin-bottom:1rem}.mb-8{margin-bottom:2rem}.inline-block{display:inline-block}.h-auto{height:auto}.min-h-screen{min-height:100vh}.flex{display:flex}.flex-1{flex:1 1 0%}.flex-col{flex-direction:column}.overflow-y-auto{overflow-y:auto}.border{border-width:1px}.border-b-0{border-bottom-width:0}.border-black\\/5{border-color:#0000000d}.rounded-t-md{border-top-left-radius:.375rem;border-top-right-radius:.375rem}.bg-gray-50\\/50{background-color:#f5f5f580}.bg-white{--un-bg-opacity:1;background-color:rgb(255 255 255/var(--un-bg-opacity))}.p-8{padding:2rem}.px-10{padding-left:2.5rem;padding-right:2.5rem}.pt-12{padding-top:3rem}.text-6xl{font-size:3.75rem;line-height:1}.text-sm{font-size:.875rem;line-height:1.25rem}.text-xl{font-size:1.25rem;line-height:1.75rem}.text-black{--un-text-opacity:1;color:rgb(0 0 0/var(--un-text-opacity))}.hover\\:text-\\[\\#00DC82\\]:hover{--un-text-opacity:1;color:rgb(0 220 130/var(--un-text-opacity))}.font-light{font-weight:300}.font-medium{font-weight:500}.leading-tight{line-height:1.25}.font-sans{font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji}.hover\\:underline:hover{text-decoration-line:underline}.underline-offset-3{text-underline-offset:3px}.antialiased{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}@media (prefers-color-scheme:dark){.dark\\:border-white\\/10{border-color:#ffffff1a}.dark\\:bg-\\[\\#020420\\]{--un-bg-opacity:1;background-color:rgb(2 4 32/var(--un-bg-opacity))}.dark\\:bg-white\\/5{background-color:#ffffff0d}.dark\\:text-white{--un-text-opacity:1;color:rgb(255 255 255/var(--un-text-opacity))}}@media (min-width:640px){.sm\\:right-6{right:1.5rem}.sm\\:text-2xl{font-size:1.5rem;line-height:2rem}.sm\\:text-8xl{font-size:6rem;line-height:1}}</style></head><body class="antialiased bg-white dark:bg-[#020420] dark:text-white flex flex-col font-sans min-h-screen pt-12 px-10 text-black"><h1 class="font-medium mb-4 sm:text-8xl text-6xl">` + escapeHtml(messages.statusCode) + '</h1><p class="font-light leading-tight mb-8 sm:text-2xl text-xl">' + escapeHtml(messages.description) + '</p><a href="https://nuxt.com/docs/getting-started/error-handling?utm_source=nuxt-error-dev-page" target="_blank" class="absolute font-medium hover:text-[#00DC82] hover:underline inline-block mx-auto sm:right-6 text-sm top-6 underline-offset-3">Customize this page</a><div class="bg-gray-50/50 border border-b-0 border-black/5 dark:bg-white/5 dark:border-white/10 flex-1 h-auto overflow-y-auto rounded-t-md"><div class="font-light leading-tight p-8 text-xl z-10">' + escapeHtml(messages.stack) + "</div></div></body></html>";
+  return '<!DOCTYPE html><html lang="en"><head><title>' + escapeHtml(messages.statusCode) + " - " + escapeHtml(messages.statusMessage || "Internal Server Error") + `</title><meta charset="utf-8"><meta content="width=device-width,initial-scale=1.0,minimum-scale=1.0" name="viewport"><script>!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))r(e);new MutationObserver(e=>{for(const o of e)if("childList"===o.type)for(const e of o.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&r(e)}).observe(document,{childList:!0,subtree:!0})}function r(e){if(e.ep)return;e.ep=!0;const r=function(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerPolicy&&(r.referrerPolicy=e.referrerPolicy),"use-credentials"===e.crossOrigin?r.credentials="include":"anonymous"===e.crossOrigin?r.credentials="omit":r.credentials="same-origin",r}(e);fetch(e.href,r)}}();<\/script><style>*,:after,:before{border-color:var(--un-default-border-color,#e5e7eb);border-style:solid;border-width:0;box-sizing:border-box}:after,:before{--un-content:""}html{line-height:1.5;-webkit-text-size-adjust:100%;font-family:ui-sans-serif,system-ui,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;font-feature-settings:normal;font-variation-settings:normal;-moz-tab-size:4;tab-size:4;-webkit-tap-highlight-color:transparent}body{line-height:inherit;margin:0}h1{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}h1,p{margin:0}*,:after,:before{--un-rotate:0;--un-rotate-x:0;--un-rotate-y:0;--un-rotate-z:0;--un-scale-x:1;--un-scale-y:1;--un-scale-z:1;--un-skew-x:0;--un-skew-y:0;--un-translate-x:0;--un-translate-y:0;--un-translate-z:0;--un-pan-x: ;--un-pan-y: ;--un-pinch-zoom: ;--un-scroll-snap-strictness:proximity;--un-ordinal: ;--un-slashed-zero: ;--un-numeric-figure: ;--un-numeric-spacing: ;--un-numeric-fraction: ;--un-border-spacing-x:0;--un-border-spacing-y:0;--un-ring-offset-shadow:0 0 transparent;--un-ring-shadow:0 0 transparent;--un-shadow-inset: ;--un-shadow:0 0 transparent;--un-ring-inset: ;--un-ring-offset-width:0px;--un-ring-offset-color:#fff;--un-ring-width:0px;--un-ring-color:rgba(147,197,253,.5);--un-blur: ;--un-brightness: ;--un-contrast: ;--un-drop-shadow: ;--un-grayscale: ;--un-hue-rotate: ;--un-invert: ;--un-saturate: ;--un-sepia: ;--un-backdrop-blur: ;--un-backdrop-brightness: ;--un-backdrop-contrast: ;--un-backdrop-grayscale: ;--un-backdrop-hue-rotate: ;--un-backdrop-invert: ;--un-backdrop-opacity: ;--un-backdrop-saturate: ;--un-backdrop-sepia: }.absolute{position:absolute}.top-6{top:1.5rem}.z-10{z-index:10}.mx-auto{margin-left:auto;margin-right:auto}.mb-4{margin-bottom:1rem}.mb-8{margin-bottom:2rem}.inline-block{display:inline-block}.h-auto{height:auto}.min-h-screen{min-height:100vh}.flex{display:flex}.flex-1{flex:1 1 0%}.flex-col{flex-direction:column}.overflow-y-auto{overflow-y:auto}.border{border-width:1px}.border-b-0{border-bottom-width:0}.border-black\\/5{border-color:#0000000d}.rounded-t-md{border-top-left-radius:.375rem;border-top-right-radius:.375rem}.bg-gray-50\\/50{background-color:#f5f5f580}.bg-white{--un-bg-opacity:1;background-color:rgb(255 255 255/var(--un-bg-opacity))}.p-8{padding:2rem}.px-10{padding-left:2.5rem;padding-right:2.5rem}.pt-12{padding-top:3rem}.text-6xl{font-size:3.75rem;line-height:1}.text-sm{font-size:.875rem;line-height:1.25rem}.text-xl{font-size:1.25rem;line-height:1.75rem}.text-black{--un-text-opacity:1;color:rgb(0 0 0/var(--un-text-opacity))}.hover\\:text-\\[\\#00DC82\\]:hover{--un-text-opacity:1;color:rgb(0 220 130/var(--un-text-opacity))}.font-light{font-weight:300}.font-medium{font-weight:500}.leading-tight{line-height:1.25}.font-sans{font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji}.hover\\:underline:hover{text-decoration-line:underline}.underline-offset-3{text-underline-offset:3px}.antialiased{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}@media (prefers-color-scheme:dark){.dark\\:border-white\\/10{border-color:#ffffff1a}.dark\\:bg-\\[\\#020420\\]{--un-bg-opacity:1;background-color:rgb(2 4 32/var(--un-bg-opacity))}.dark\\:bg-white\\/5{background-color:#ffffff0d}.dark\\:text-white{--un-text-opacity:1;color:rgb(255 255 255/var(--un-text-opacity))}}@media (min-width:640px){.sm\\:right-6{right:1.5rem}.sm\\:text-2xl{font-size:1.5rem;line-height:2rem}.sm\\:text-8xl{font-size:6rem;line-height:1}}</style></head><body class="antialiased bg-white dark:bg-[#020420] dark:text-white flex flex-col font-sans min-h-screen pt-12 px-10 text-black"><h1 class="font-medium mb-4 sm:text-8xl text-6xl">` + escapeHtml(messages.statusCode) + '</h1><p class="font-light leading-tight mb-8 sm:text-2xl text-xl">' + escapeHtml(messages.description) + '</p><a href="https://nuxt.com/docs/4.x/getting-started/error-handling?utm_source=nuxt-error-dev-page" target="_blank" class="absolute font-medium hover:text-[#00DC82] hover:underline inline-block mx-auto sm:right-6 text-sm top-6 underline-offset-3">Customize this page</a><div class="bg-gray-50/50 border border-b-0 border-black/5 dark:bg-white/5 dark:border-white/10 flex-1 h-auto overflow-y-auto rounded-t-md"><div class="font-light leading-tight p-8 text-xl z-10">' + escapeHtml(messages.stack) + "</div></div></body></html>";
 };
diff --git a/dist/core/runtime/nitro/utils/renderer/build-files.d.ts b/dist/core/runtime/nitro/utils/renderer/build-files.d.ts
index 53ccf5705763b46fde817535789b2712b1d7853c..db27b7563f32275c4ad297bfa8e4b8271114bd1a 100644
--- a/dist/core/runtime/nitro/utils/renderer/build-files.d.ts
+++ b/dist/core/runtime/nitro/utils/renderer/build-files.d.ts
@@ -1,4 +1,6 @@
 import type { NuxtSSRContext } from 'nuxt/app';
+export declare const getServerEntry: () => Promise<any>;
+export declare const getComponentsIslands: () => Promise<any>;
 export declare const getSSRRenderer: () => Promise<{
     rendererContext: import("vue-bundle-renderer/runtime").RendererContext;
     renderToString(ssrContext: import("vue-bundle-renderer/runtime").SSRContext): Promise<{
diff --git a/dist/core/runtime/nitro/utils/renderer/build-files.js b/dist/core/runtime/nitro/utils/renderer/build-files.js
index c1f27b5c0fa710386d83f5bb44162f9176b260c2..065173761258aedaef3cbacaf8e2d7b0baaf374d 100644
--- a/dist/core/runtime/nitro/utils/renderer/build-files.js
+++ b/dist/core/runtime/nitro/utils/renderer/build-files.js
@@ -8,7 +8,8 @@ import { appRootAttrs, appRootTag, appSpaLoaderAttrs, appSpaLoaderTag, spaLoadin
 import { buildAssetsURL } from "#internal/nuxt/paths";
 const APP_ROOT_OPEN_TAG = `<${appRootTag}${propsToString(appRootAttrs)}>`;
 const APP_ROOT_CLOSE_TAG = `</${appRootTag}>`;
-const getServerEntry = () => import("#build/dist/server/server.mjs").then((r) => r.default || r);
+export const getServerEntry = () => import("#build/dist/server/server.mjs").then((r) => r.default || r);
+export const getComponentsIslands = () => import("#build/dist/server/components.islands.mjs").then((r) => import.meta.dev ? r.default() : r);
 const getClientManifest = () => import("#build/dist/server/client.manifest.mjs").then((r) => r.default || r).then((r) => typeof r === "function" ? r() : r);
 export const getSSRRenderer = lazyCachedFunction(async () => {
   const manifest = await getClientManifest();
@@ -86,9 +87,12 @@ export function getRenderer(ssrContext) {
   return process.env.NUXT_NO_SSR || ssrContext.noSSR ? getSPARenderer() : getSSRRenderer();
 }
 export const getSSRStyles = lazyCachedFunction(() => import("#build/dist/server/styles.mjs").then((r) => r.default || r));
-export const getEntryIds = () => getClientManifest().then((r) => Object.values(r).filter(
-  (r2) => (
-    // @ts-expect-error internal key set by CSS inlining configuration
-    r2._globalCSS
-  )
-).map((r2) => r2.src));
+export const getEntryIds = () => getClientManifest().then((r) => {
+  const entryIds = [];
+  for (const entry of Object.values(r)) {
+    if (entry._globalCSS) {
+      entryIds.push(entry.src);
+    }
+  }
+  return entryIds;
+});
diff --git a/dist/core/runtime/nitro/utils/renderer/islands.d.ts b/dist/core/runtime/nitro/utils/renderer/islands.d.ts
index bd881c1d4120c2555cc7c07178e7dc0328647138..2dece41cd51f289983bd22a57a3817c1b19e359e 100644
--- a/dist/core/runtime/nitro/utils/renderer/islands.d.ts
+++ b/dist/core/runtime/nitro/utils/renderer/islands.d.ts
@@ -1,13 +1,4 @@
 import type { SerializableHead } from '@unhead/vue/types';
-import type { NuxtSSRContext } from '#app/nuxt';
-/**
- * remove the root node from the html body
- */
-export declare function getServerComponentHTML(body: string): string;
-export declare function getSlotIslandResponse(ssrContext: NuxtSSRContext): NuxtIslandResponse['slots'];
-export declare function getClientIslandResponse(ssrContext: NuxtSSRContext): NuxtIslandResponse['components'];
-export declare function getComponentSlotTeleport(clientUid: string, teleports: Record<string, string>): Record<string, string>;
-export declare function replaceIslandTeleports(ssrContext: NuxtSSRContext, html: string): string;
 export interface NuxtIslandSlotResponse {
     props: Array<unknown>;
     fallback?: string;
@@ -22,11 +13,8 @@ export interface NuxtIslandContext {
 }
 export interface NuxtIslandResponse {
     id?: string;
-    html: string;
     head: SerializableHead;
-    props?: Record<string, Record<string, any>>;
-    components?: Record<string, NuxtIslandClientResponse>;
-    slots?: Record<string, NuxtIslandSlotResponse>;
+    ast: any;
 }
 export interface NuxtIslandClientResponse {
     html: string;
diff --git a/dist/core/runtime/nitro/utils/renderer/islands.js b/dist/core/runtime/nitro/utils/renderer/islands.js
index 9d3a049702291c09150ca9c187a3b6a1aef5988e..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391 100644
--- a/dist/core/runtime/nitro/utils/renderer/islands.js
+++ b/dist/core/runtime/nitro/utils/renderer/islands.js
@@ -1,82 +0,0 @@
-import { appRootTag } from "#internal/nuxt.config.mjs";
-const ROOT_NODE_REGEX = new RegExp(`^<${appRootTag}[^>]*>([\\s\\S]*)<\\/${appRootTag}>$`);
-export function getServerComponentHTML(body) {
-  const match = body.match(ROOT_NODE_REGEX);
-  return match?.[1] || body;
-}
-const SSR_SLOT_TELEPORT_MARKER = /^uid=([^;]*);slot=(.*)$/;
-const SSR_CLIENT_TELEPORT_MARKER = /^uid=([^;]*);client=(.*)$/;
-const SSR_CLIENT_SLOT_MARKER = /^island-slot=([^;]*);(.*)$/;
-export function getSlotIslandResponse(ssrContext) {
-  if (!ssrContext.islandContext || !Object.keys(ssrContext.islandContext.slots).length) {
-    return void 0;
-  }
-  const response = {};
-  for (const [name, slot] of Object.entries(ssrContext.islandContext.slots)) {
-    response[name] = {
-      ...slot,
-      fallback: ssrContext.teleports?.[`island-fallback=${name}`]
-    };
-  }
-  return response;
-}
-export function getClientIslandResponse(ssrContext) {
-  if (!ssrContext.islandContext || !Object.keys(ssrContext.islandContext.components).length) {
-    return void 0;
-  }
-  const response = {};
-  for (const [clientUid, component] of Object.entries(ssrContext.islandContext.components)) {
-    const html = ssrContext.teleports?.[clientUid]?.replaceAll("<!--teleport start anchor-->", "") || "";
-    response[clientUid] = {
-      ...component,
-      html,
-      slots: getComponentSlotTeleport(clientUid, ssrContext.teleports ?? {})
-    };
-  }
-  return response;
-}
-export function getComponentSlotTeleport(clientUid, teleports) {
-  const entries = Object.entries(teleports);
-  const slots = {};
-  for (const [key, value] of entries) {
-    const match = key.match(SSR_CLIENT_SLOT_MARKER);
-    if (match) {
-      const [, id, slot] = match;
-      if (!slot || clientUid !== id) {
-        continue;
-      }
-      slots[slot] = value;
-    }
-  }
-  return slots;
-}
-export function replaceIslandTeleports(ssrContext, html) {
-  const { teleports, islandContext } = ssrContext;
-  if (islandContext || !teleports) {
-    return html;
-  }
-  for (const key in teleports) {
-    const matchClientComp = key.match(SSR_CLIENT_TELEPORT_MARKER);
-    if (matchClientComp) {
-      const [, uid, clientId] = matchClientComp;
-      if (!uid || !clientId) {
-        continue;
-      }
-      html = html.replace(new RegExp(` data-island-uid="${uid}" data-island-component="${clientId}"[^>]*>`), (full) => {
-        return full + teleports[key];
-      });
-      continue;
-    }
-    const matchSlot = key.match(SSR_SLOT_TELEPORT_MARKER);
-    if (matchSlot) {
-      const [, uid, slot] = matchSlot;
-      if (!uid || !slot) {
-        continue;
-      }
-      html = html.replace(new RegExp(` data-island-uid="${uid}" data-island-slot="${slot}"[^>]*>`), (full) => {
-        return full + teleports[key];
-      });
-    }
-  }
-  return html;
-}
diff --git a/dist/head/runtime/components.js b/dist/head/runtime/components.js
index 77ac5e54faef1f4b457b930614d38841f4cc5e98..189b234bf34ae5b72bfd514a754ce67bf6aec7d1 100644
--- a/dist/head/runtime/components.js
+++ b/dist/head/runtime/components.js
@@ -103,9 +103,16 @@ export const NoScript = defineComponent({
     return () => {
       const noscript = normalizeProps(props);
       const slotVnodes = slots.default?.();
-      const textContent = slotVnodes ? slotVnodes.filter(({ children }) => children).map(({ children }) => children).join("") : "";
-      if (textContent) {
-        noscript.innerHTML = textContent;
+      const textContent = [];
+      if (slotVnodes) {
+        for (const vnode of slotVnodes) {
+          if (vnode.children) {
+            textContent.push(vnode.children);
+          }
+        }
+      }
+      if (textContent.length > 0) {
+        noscript.innerHTML = textContent.join("");
       }
       input.noscript[idx] = noscript;
       return null;
diff --git a/dist/head/runtime/composables.js b/dist/head/runtime/composables.js
index 23ebaf36a4ba96e14949ac5d285629b2576b815c..6711cf8c2b916ab24e04635ca8a1f9929552345f 100644
--- a/dist/head/runtime/composables.js
+++ b/dist/head/runtime/composables.js
@@ -22,26 +22,26 @@ export function injectHead(nuxtApp) {
   });
 }
 export function useHead(input, options = {}) {
-  const head = injectHead(options.nuxt);
+  const head = options.head || injectHead(options.nuxt);
   return headCore(input, { head, ...options });
 }
 export function useHeadSafe(input, options = {}) {
-  const head = injectHead(options.nuxt);
+  const head = options.head || injectHead(options.nuxt);
   return headSafe(input, { head, ...options });
 }
 export function useSeoMeta(input, options = {}) {
-  const head = injectHead(options.nuxt);
+  const head = options.head || injectHead(options.nuxt);
   return seoMeta(input, { head, ...options });
 }
 export function useServerHead(input, options = {}) {
-  const head = injectHead(options.nuxt);
+  const head = options.head || injectHead(options.nuxt);
   return serverHead(input, { head, ...options });
 }
 export function useServerHeadSafe(input, options = {}) {
-  const head = injectHead(options.nuxt);
+  const head = options.head || injectHead(options.nuxt);
   return serverHeadSafe(input, { head, ...options });
 }
 export function useServerSeoMeta(input, options = {}) {
-  const head = injectHead(options.nuxt);
+  const head = options.head || injectHead(options.nuxt);
   return serverSeoMeta(input, { head, ...options });
 }
diff --git a/dist/index.mjs b/dist/index.mjs
index 11965d7262242d1981705e895515c6b15a93e8f5..d354c98290a0b72e74e3eb2303b37c8273f4d9e2 100644
--- a/dist/index.mjs
+++ b/dist/index.mjs
@@ -5,8 +5,8 @@ import { AsyncLocalStorage } from 'node:async_hooks';
 import { dirname, resolve, normalize, basename, extname, relative, isAbsolute, join } from 'pathe';
 import { createHooks, createDebugger } from 'hookable';
 import ignore from 'ignore';
-import { useLogger, tryUseNuxt, useNuxt, directoryToURL, getLayerDirectories, resolveFiles, resolvePath, defineNuxtModule, findPath, addPlugin, addTemplate, addTypeTemplate, addComponent, useNitro, addBuildPlugin, isIgnored, resolveAlias as resolveAlias$1, addPluginTemplate, addImportsSources, addVitePlugin, createIsIgnored, updateTemplates, tryResolveModule, normalizeModuleTranspilePath, resolveNuxtModule, resolveIgnorePatterns, logger as logger$1, createResolver, importModule, tryImportModule, runWithNuxtContext, nuxtCtx, loadNuxtConfig, addWebpackPlugin, addServerPlugin, installModules, addServerTemplate, addServerHandler, addRouteMiddleware, resolveModuleWithOptions, normalizeTemplate, normalizePlugin } from '@nuxt/kit';
-import { resolvePackageJSON, readPackageJSON } from 'pkg-types';
+import { useLogger, tryUseNuxt, useNuxt, directoryToURL, getLayerDirectories, resolveFiles, resolvePath, defineNuxtModule, findPath, addPlugin, addTemplate, addTypeTemplate, addComponent, useNitro, addBuildPlugin, isIgnored, resolveAlias as resolveAlias$1, addPluginTemplate, addImportsSources, createIsIgnored, updateTemplates, tryResolveModule, normalizeModuleTranspilePath, resolveNuxtModule, resolveIgnorePatterns, logger as logger$1, createResolver, importModule, tryImportModule, runWithNuxtContext, nuxtCtx, loadNuxtConfig, addVitePlugin, addWebpackPlugin, addServerPlugin, installModules, addServerTemplate, addServerHandler, addRouteMiddleware, resolveModuleWithOptions, normalizeTemplate, normalizePlugin } from '@nuxt/kit';
+import { resolvePackageJSON, readPackage, readPackageJSON } from 'pkg-types';
 import { hash, isEqual, serialize } from 'ohash';
 import consola, { consola as consola$1 } from 'consola';
 import onChange from 'on-change';
@@ -28,7 +28,7 @@ import { fileURLToPath, pathToFileURL } from 'node:url';
 import { resolveModulePath } from 'exsolve';
 import { runInNewContext } from 'node:vm';
 import { klona } from 'klona';
-import { parseAndWalk, ScopeTracker, walk, isBindingIdentifier, getUndeclaredIdentifiersInFunction } from 'oxc-walker';
+import { parseAndWalk as parseAndWalk$1, ScopeTracker as ScopeTracker$1, walk as walk$1, isBindingIdentifier, getUndeclaredIdentifiersInFunction } from 'oxc-walker';
 import { parseSync } from 'oxc-parser';
 import { transform } from 'oxc-transform';
 import { splitByCase, kebabCase, pascalCase, camelCase } from 'scule';
@@ -39,8 +39,9 @@ import { stripLiteral } from 'strip-literal';
 import { unheadVueComposablesImports } from '@unhead/vue';
 import { defineUnimportPreset, createUnimport, toExports, scanDirExports } from 'unimport';
 import { glob } from 'tinyglobby';
-import { parse, walk as walk$1, ELEMENT_NODE } from 'ultrahtml';
+import { isObject } from '@vue/shared';
 import { parseQuery as parseQuery$1 } from 'vue-router';
+import { parse, walk as walk$2 } from 'ultrahtml';
 import { createTransformer } from 'unctx/transform';
 import { cpus } from 'node:os';
 import { createNitro, scanHandlers, writeTypes, copyPublicAssets, prepare, build as build$1, prerender, createDevServer } from 'nitropack';
@@ -62,9 +63,9 @@ async function isDirectory$1(path) {
 }
 const logger = useLogger("nuxt");
 function resolveToAlias(path, nuxt = tryUseNuxt()) {
-  return reverseResolveAlias(path, { ...nuxt?.options.alias || {}, ...strippedAtAliases }).pop() || path;
+  return reverseResolveAlias(path, { ...nuxt?.options.alias || {}, ...strippedAtAliases$1 }).pop() || path;
 }
-const strippedAtAliases = {
+const strippedAtAliases$1 = {
   "@": "",
   "@@": ""
 };
@@ -406,7 +407,7 @@ function getRouteMeta(contents, absolutePath, extraExtractionKeys = /* @__PURE__
       continue;
     }
     const dynamicProperties = /* @__PURE__ */ new Set();
-    parseAndWalk(script.code, absolutePath.replace(/\.\w+$/, "." + script.loader), (node) => {
+    parseAndWalk$1(script.code, absolutePath.replace(/\.\w+$/, "." + script.loader), (node) => {
       if (node.type !== "ExpressionStatement" || node.expression.type !== "CallExpression" || node.expression.callee.type !== "Identifier") {
         return;
       }
@@ -943,7 +944,7 @@ const PageMetaPlugin = (options = {}) => createUnplugin(() => {
           }
         }
       }
-      const scopeTracker = new ScopeTracker({
+      const scopeTracker = new ScopeTracker$1({
         preserveExitedScopes: true
       });
       function processDeclaration(scopeTrackerNode) {
@@ -953,7 +954,7 @@ const PageMetaPlugin = (options = {}) => createUnplugin(() => {
             if (!decl.init) {
               continue;
             }
-            walk(decl.init, {
+            walk$1(decl.init, {
               enter: (node, parent) => {
                 if (node.type === "AwaitExpression") {
                   logger.error(`Await expressions are not supported in definePageMeta. File: '${id}'`);
@@ -981,7 +982,7 @@ const PageMetaPlugin = (options = {}) => createUnplugin(() => {
           }
         }
       }
-      const { program: ast } = parseAndWalk(code, id, {
+      const { program: ast } = parseAndWalk$1(code, id, {
         scopeTracker,
         parseOptions: {
           lang: query.lang ?? "ts"
@@ -989,7 +990,7 @@ const PageMetaPlugin = (options = {}) => createUnplugin(() => {
       });
       scopeTracker.freeze();
       let instances = 0;
-      walk(ast, {
+      walk$1(ast, {
         scopeTracker,
         enter: (node) => {
           if (node.type !== "CallExpression" || node.callee.type !== "Identifier") {
@@ -1025,7 +1026,7 @@ const PageMetaPlugin = (options = {}) => createUnplugin(() => {
             }
           }
           const definePageMetaScope = scopeTracker.getCurrentScope();
-          walk(meta, {
+          walk$1(meta, {
             scopeTracker,
             enter(node2, parent) {
               if (isBindingIdentifier(node2, parent) || node2.type !== "Identifier") {
@@ -1152,6 +1153,13 @@ const RouteInjectionPlugin = (nuxt) => createUnplugin(() => {
 
 const OPTIONAL_PARAM_RE = /^\/?:.*(?:\?|\(\.\*\)\*)$/;
 const runtimeDir = resolve(distDir, "pages/runtime");
+const pagesImportPresets = [
+  { imports: ["definePageMeta"], from: resolve(runtimeDir, "composables") },
+  { imports: ["useLink"], from: "vue-router" }
+];
+const routeRulesPresets = [
+  { imports: ["defineRouteRules"], from: resolve(runtimeDir, "composables") }
+];
 async function resolveRouterOptions(nuxt, builtInRouterOptions) {
   const context = {
     files: []
@@ -1313,13 +1321,15 @@ const pagesModule = defineNuxtModule({
       return;
     }
     if (useExperimentalTypedPages) {
-      const declarationFile = "./types/typed-router.d.ts";
+      const declarationFile = resolve(nuxt.options.buildDir, "types/typed-router.d.ts");
       const typedRouterOptions = {
         routesFolder: [],
-        dts: resolve(nuxt.options.buildDir, declarationFile),
+        dts: declarationFile,
         logs: nuxt.options.debug && nuxt.options.debug.router,
         async beforeWriteFiles(rootPage) {
-          rootPage.children.forEach((child) => child.delete());
+          for (const child of rootPage.children) {
+            child.delete();
+          }
           const pages = nuxt.apps.default?.pages || await resolvePagesRoutes$1(options.pattern, nuxt);
           if (nuxt.apps.default) {
             nuxt.apps.default.pages = pages;
@@ -1339,7 +1349,9 @@ const pagesModule = defineNuxtModule({
               route.name = page.name;
             }
             if (page.children) {
-              page.children.forEach((child) => addPage(route, child, absolutePagePath));
+              for (const child of page.children) {
+                addPage(route, child, absolutePagePath);
+              }
             }
           }
           for (const page of pages) {
@@ -1352,11 +1364,10 @@ const pagesModule = defineNuxtModule({
         references.push({ types: "unplugin-vue-router/client" });
       });
       const context = createRoutesContext(resolveOptions(typedRouterOptions));
-      const dtsFile = resolve(nuxt.options.buildDir, declarationFile);
-      await mkdir(dirname(dtsFile), { recursive: true });
+      await mkdir(dirname(declarationFile), { recursive: true });
       await context.scanPages(false);
       if (nuxt.options._prepare || !nuxt.options.dev) {
-        const dts = await readFile(dtsFile, "utf-8");
+        const dts = await readFile(declarationFile, "utf-8");
         addTemplate({
           filename: "types/typed-router.d.ts",
           getContents: () => dts
@@ -1473,13 +1484,10 @@ const pagesModule = defineNuxtModule({
       }
       nitro.options.prerender.routes = Array.from(prerenderRoutes);
     });
-    nuxt.hook("imports:extend", (imports) => {
-      imports.push(
-        { name: "definePageMeta", as: "definePageMeta", from: resolve(runtimeDir, "composables") },
-        { name: "useLink", as: "useLink", from: "vue-router" }
-      );
+    nuxt.hook("imports:sources", (sources) => {
+      sources.push(...pagesImportPresets);
       if (nuxt.options.experimental.inlineRouteRules) {
-        imports.push({ name: "defineRouteRules", as: "defineRouteRules", from: resolve(runtimeDir, "composables") });
+        sources.push(...routeRulesPresets);
       }
     });
     const componentStubPath = await resolvePath(resolve(runtimeDir, "component-stub"));
@@ -1577,10 +1585,20 @@ const pagesModule = defineNuxtModule({
       getContents: async ({ nuxt: nuxt2 }) => {
         const routerOptionsFiles = await resolveRouterOptions(nuxt2, builtInRouterOptions);
         const configRouterOptions = genObjectFromRawEntries(Object.entries(nuxt2.options.router.options).map(([key, value]) => [key, genString(value)]));
+        const hashModes = [];
+        for (let index = 0; index < routerOptionsFiles.length; index++) {
+          const file = routerOptionsFiles[index];
+          if (file.path !== builtInRouterOptions) {
+            hashModes.unshift(`routerOptions${index}.hashMode`);
+          }
+        }
         return [
           ...routerOptionsFiles.map((file, index) => genImport(file.path, `routerOptions${index}`)),
           `const configRouterOptions = ${configRouterOptions}`,
-          `export const hashMode = ${[...routerOptionsFiles.filter((o) => o.path !== builtInRouterOptions).map((_, index) => `routerOptions${index}.hashMode`).reverse(), nuxt2.options.router.options.hashMode].join(" ?? ")}`,
+          `export const hashMode = ${[
+            ...hashModes,
+            nuxt2.options.router.options.hashMode
+          ].join(" ?? ")}`,
           "export default {",
           "...configRouterOptions,",
           ...routerOptionsFiles.map((_, index) => `...routerOptions${index},`),
@@ -1721,7 +1739,7 @@ const UnheadImportsPlugin = (options) => createUnplugin(() => {
       handler(code, id) {
         const s = new MagicString(code);
         const importsToAdd = [];
-        parseAndWalk(code, id, function(node) {
+        parseAndWalk$1(code, id, function(node) {
           if (node.type === "ImportDeclaration" && [UnheadVue, "#app/composables/head"].includes(String(node.source.value))) {
             importsToAdd.push(...node.specifiers);
             const { start, end } = node;
@@ -1957,7 +1975,10 @@ const scriptsStubsPreset = {
     "useScriptNpm",
     "useScriptUmamiAnalytics",
     "useScriptSnapchatPixel",
-    "useScriptRybbitAnalytics"
+    "useScriptRybbitAnalytics",
+    "useScriptDatabuddyAnalytics",
+    "useScriptRedditPixel",
+    "useScriptPayPal"
   ],
   priority: -1,
   from: "#app/composables/script-stubs"
@@ -2141,7 +2162,13 @@ export default defineNuxtPlugin({
 const componentNamesTemplate = {
   filename: "component-names.mjs",
   getContents({ app }) {
-    return `export const componentNames = ${JSON.stringify(app.components.filter((c) => !c.island).map((c) => c.pascalName))}`;
+    const componentNames = /* @__PURE__ */ new Set();
+    for (const c of app.components) {
+      if (!c.island) {
+        componentNames.add(c.pascalName);
+      }
+    }
+    return `export const componentNames = ${JSON.stringify([...componentNames])}`;
   }
 };
 const componentsIslandsTemplate = {
@@ -2157,7 +2184,7 @@ const componentsIslandsTemplate = {
       component.mode === "server" && !components.some((c) => c.pascalName === component.pascalName && c.mode === "client")
     );
     const pageExports = pages?.filter((p) => p.mode === "server" && p.file && p.name).map((p) => {
-      return `"page_${p.name}": defineAsyncComponent(${genDynamicImport(p.file)}.then(c => c.default || c))`;
+      return `"page_${p.name}": defineAsyncComponent(${genDynamicImport("virtual:vsc:" + p.file)}.then(c => c.default || c))`;
     }) || [];
     return [
       "import { defineAsyncComponent } from 'vue'",
@@ -2166,7 +2193,7 @@ const componentsIslandsTemplate = {
         (c) => {
           const exp = c.export === "default" ? "c.default || c" : `c['${c.export}']`;
           const comment = createImportMagicComments(c);
-          return `  "${c.pascalName}": defineAsyncComponent(${genDynamicImport(c.filePath, { comment })}.then(c => ${exp}))`;
+          return `  "${c.pascalName}": defineAsyncComponent(${genDynamicImport("virtual:vsc:" + c.filePath, { comment })}.then(c => ${exp}))`;
         }
       ).concat(pageExports).join(",\n"),
       "}"
@@ -2174,20 +2201,28 @@ const componentsIslandsTemplate = {
   }
 };
 const NON_VUE_RE = /\b\.(?!vue)\w+$/g;
-function resolveComponentTypes(nuxt, app) {
-  const buildDir = nuxt.options.buildDir;
+function resolveComponentTypes(app, baseDir) {
   const serverPlaceholderPath = resolve(distDir, "app/components/server-placeholder");
-  const componentTypes = app.components.filter((c) => !c.island).map((c) => {
-    const type = `typeof ${genDynamicImport(isAbsolute(c.filePath) ? relative(buildDir, c.filePath).replace(NON_VUE_RE, "") : c.filePath.replace(NON_VUE_RE, ""), { wrapper: false })}['${c.export}']`;
-    const isServerOnly = c.mode === "server" && c.filePath !== serverPlaceholderPath && !app.components.some((other) => other.pascalName === c.pascalName && other.mode === "client");
-    return [
-      c.pascalName,
-      isServerOnly ? `IslandComponent<${type}>` : type
-    ];
-  });
+  const componentTypes = [];
+  for (const c of app.components) {
+    if (c.island) {
+      continue;
+    }
+    let type = `typeof ${genDynamicImport(isAbsolute(c.filePath) ? relative(baseDir, c.filePath).replace(NON_VUE_RE, "") : c.filePath.replace(NON_VUE_RE, ""), { wrapper: false })}['${c.export}']`;
+    if (c.mode === "server") {
+      if (app.components.some((other) => other.pascalName === c.pascalName && other.mode === "client")) {
+        if (c.filePath.startsWith(serverPlaceholderPath)) {
+          continue;
+        }
+      } else {
+        type = `IslandComponent<${type}>`;
+      }
+    }
+    componentTypes.push([c.pascalName, type]);
+  }
   return componentTypes;
 }
-const islandType = "type IslandComponent<T extends DefineComponent> = T & DefineComponent<{}, {refresh: () => Promise<void>}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, SlotsType<{ fallback: { error: unknown } }>>";
+const islandType = "type IslandComponent<T> = DefineComponent<{}, {refresh: () => Promise<void>}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, SlotsType<{ fallback: { error: unknown } }>> & T";
 const hydrationTypes = `
 type HydrationStrategies = {
   hydrateOnVisible?: IntersectionObserverInit | true
@@ -2198,13 +2233,13 @@ type HydrationStrategies = {
   hydrateWhen?: boolean
   hydrateNever?: true
 }
-type LazyComponent<T> = (T & DefineComponent<HydrationStrategies, {}, {}, {}, {}, {}, {}, { hydrated: () => void }>)
+type LazyComponent<T> = DefineComponent<HydrationStrategies, {}, {}, {}, {}, {}, {}, { hydrated: () => void }> & T
 `;
 const componentsDeclarationTemplate = {
   filename: "components.d.ts",
   write: true,
   getContents: ({ app, nuxt }) => {
-    const componentTypes = resolveComponentTypes(nuxt, app);
+    const componentTypes = resolveComponentTypes(app, nuxt.options.buildDir);
     return `
 import type { DefineComponent, SlotsType } from 'vue'
 ${nuxt.options.experimental.componentIslands ? islandType : ""}
@@ -2220,14 +2255,14 @@ export const componentNames: string[]
 const componentsTypeTemplate = {
   filename: "types/components.d.ts",
   getContents: ({ app, nuxt }) => {
-    const componentTypes = resolveComponentTypes(nuxt, app);
+    const componentTypes = resolveComponentTypes(app, join(nuxt.options.buildDir, "types"));
     return `
 import type { DefineComponent, SlotsType } from 'vue'
 ${nuxt.options.experimental.componentIslands ? islandType : ""}
 ${hydrationTypes}
 interface _GlobalComponents {
-  ${componentTypes.map(([pascalName, type]) => `    '${pascalName}': ${type}`).join("\n")}
-  ${componentTypes.map(([pascalName, type]) => `    'Lazy${pascalName}': LazyComponent<${type}>`).join("\n")}
+${componentTypes.map(([pascalName, type]) => `  '${pascalName}': ${type}`).join("\n")}
+${componentTypes.map(([pascalName, type]) => `  'Lazy${pascalName}': LazyComponent<${type}>`).join("\n")}
 }
 
 declare module 'vue' {
@@ -2253,9 +2288,6 @@ async function scanComponents(dirs, srcDir) {
   const filePaths = /* @__PURE__ */ new Set();
   const scannedPaths = [];
   for (const dir of dirs) {
-    if (dir.enabled === false) {
-      continue;
-    }
     const resolvedNames = /* @__PURE__ */ new Map();
     const files = (await glob(dir.pattern, { cwd: dir.path, ignore: dir.ignore })).sort();
     if (files.length) {
@@ -2506,216 +2538,6 @@ function findComponent(components, name, mode) {
   return otherModeComponent;
 }
 
-const SCRIPT_RE$2 = /<script[^>]*>/i;
-const SCRIPT_RE_GLOBAL = /<script[^>]*>/gi;
-const HAS_SLOT_OR_CLIENT_RE = /<slot[^>]*>|nuxt-client/;
-const TEMPLATE_RE$1 = /<template>[\s\S]*<\/template>/;
-const NUXTCLIENT_ATTR_RE = /\s:?nuxt-client(?:="[^"]*")?/g;
-const IMPORT_CODE = "\nimport { mergeProps as __mergeProps } from 'vue'\nimport { vforToArray as __vforToArray } from '#app/components/utils'\nimport NuxtTeleportIslandComponent from '#app/components/nuxt-teleport-island-component'\nimport NuxtTeleportSsrSlot from '#app/components/nuxt-teleport-island-slot'";
-const EXTRACTED_ATTRS_RE = /v-(?:if|else-if|else)(?:="[^"]*")?/g;
-const KEY_RE = /:?key="[^"]"/g;
-function wrapWithVForDiv(code, vfor) {
-  return `<div v-for="${vfor}" style="display: contents;">${code}</div>`;
-}
-const IslandsTransformPlugin = (options) => createUnplugin((_options, meta) => {
-  const isVite = meta.framework === "vite";
-  return {
-    name: "nuxt:server-only-component-transform",
-    enforce: "pre",
-    transformInclude(id) {
-      if (!isVue(id)) {
-        return false;
-      }
-      if (isVite && options.selectiveClient === "deep") {
-        return true;
-      }
-      const components = options.getComponents();
-      const islands = components.filter(
-        (component) => component.island || component.mode === "server" && !components.some((c) => c.pascalName === component.pascalName && c.mode === "client")
-      );
-      const { pathname } = parseURL(decodeURIComponent(pathToFileURL(id).href));
-      return islands.some((c) => c.filePath === pathname);
-    },
-    transform: {
-      filter: {
-        code: {
-          include: [HAS_SLOT_OR_CLIENT_RE]
-        }
-      },
-      async handler(code, id) {
-        const template = code.match(TEMPLATE_RE$1);
-        if (!template) {
-          return;
-        }
-        const startingIndex = template.index || 0;
-        const s = new MagicString(code);
-        if (!SCRIPT_RE$2.test(code)) {
-          s.prepend("<script setup>" + IMPORT_CODE + "<\/script>");
-        } else {
-          s.replace(SCRIPT_RE_GLOBAL, (full) => {
-            return full + IMPORT_CODE;
-          });
-        }
-        let hasNuxtClient = false;
-        const ast = parse(template[0]);
-        await walk$1(ast, (node) => {
-          if (node.type !== ELEMENT_NODE) {
-            return;
-          }
-          if (node.name === "slot") {
-            const { attributes: attributes2, children, loc: loc2 } = node;
-            const slotName = attributes2.name ?? "default";
-            if (attributes2.name) {
-              delete attributes2.name;
-            }
-            if (attributes2["v-bind"]) {
-              attributes2._bind = extractAttributes(attributes2, ["v-bind"])["v-bind"];
-            }
-            const teleportAttributes = extractAttributes(attributes2, ["v-if", "v-else-if", "v-else"]);
-            const bindings = getPropsToString(attributes2);
-            s.appendLeft(startingIndex + loc2[0].start, `<NuxtTeleportSsrSlot${attributeToString(teleportAttributes)} name="${slotName}" :props="${bindings}">`);
-            if (children.length) {
-              const attrString = attributeToString(attributes2);
-              const slice = code.slice(startingIndex + loc2[0].end, startingIndex + loc2[1].start).replaceAll(KEY_RE, "");
-              s.overwrite(startingIndex + loc2[0].start, startingIndex + loc2[1].end, `<slot${attrString.replaceAll(EXTRACTED_ATTRS_RE, "")}/><template #fallback>${attributes2["v-for"] ? wrapWithVForDiv(slice, attributes2["v-for"]) : slice}</template>`);
-            } else {
-              s.overwrite(startingIndex + loc2[0].start, startingIndex + loc2[0].end, code.slice(startingIndex + loc2[0].start, startingIndex + loc2[0].end).replaceAll(EXTRACTED_ATTRS_RE, ""));
-            }
-            s.appendRight(startingIndex + loc2[1].end, "</NuxtTeleportSsrSlot>");
-            return;
-          }
-          if (!("nuxt-client" in node.attributes) && !(":nuxt-client" in node.attributes)) {
-            return;
-          }
-          hasNuxtClient = true;
-          if (!isVite || !options.selectiveClient) {
-            return;
-          }
-          const { loc, attributes } = node;
-          const attributeValue = attributes[":nuxt-client"] || attributes["nuxt-client"] || "true";
-          const wrapperAttributes = extractAttributes(attributes, ["v-if", "v-else-if", "v-else"]);
-          let startTag = code.slice(startingIndex + loc[0].start, startingIndex + loc[0].end).replace(NUXTCLIENT_ATTR_RE, "");
-          if (wrapperAttributes) {
-            startTag = startTag.replaceAll(EXTRACTED_ATTRS_RE, "");
-          }
-          s.appendLeft(startingIndex + loc[0].start, `<NuxtTeleportIslandComponent${attributeToString(wrapperAttributes)} :nuxt-client="${attributeValue}">`);
-          s.overwrite(startingIndex + loc[0].start, startingIndex + loc[0].end, startTag);
-          s.appendRight(startingIndex + loc[1].end, "</NuxtTeleportIslandComponent>");
-        });
-        if (hasNuxtClient) {
-          if (!options.selectiveClient) {
-            console.warn(`The \`nuxt-client\` attribute and client components within islands are only supported when \`experimental.componentIslands.selectiveClient\` is enabled. file: ${id}`);
-          } else if (!isVite) {
-            console.warn(`The \`nuxt-client\` attribute and client components within islands are only supported with Vite. file: ${id}`);
-          }
-        }
-        if (s.hasChanged()) {
-          return {
-            code: s.toString(),
-            map: s.generateMap({ source: id, includeContent: true })
-          };
-        }
-      }
-    }
-  };
-});
-function extractAttributes(attributes, names) {
-  const extracted = {};
-  for (const name of names) {
-    if (name in attributes) {
-      extracted[name] = attributes[name];
-      delete attributes[name];
-    }
-  }
-  return extracted;
-}
-function attributeToString(attributes) {
-  return Object.entries(attributes).map(([name, value]) => value ? ` ${name}="${value}"` : ` ${name}`).join("");
-}
-function isBinding(attr) {
-  return attr.startsWith(":");
-}
-function getPropsToString(bindings) {
-  const vfor = bindings["v-for"]?.split(" in ").map((v) => v.trim());
-  if (Object.keys(bindings).length === 0) {
-    return "undefined";
-  }
-  const content = Object.entries(bindings).filter((b) => b[0] && (b[0] !== "_bind" && b[0] !== "v-for")).map(([name, value]) => isBinding(name) ? `[\`${name.slice(1)}\`]: ${value}` : `[\`${name}\`]: \`${value}\``).join(",");
-  const data = bindings._bind ? `__mergeProps(${bindings._bind}, { ${content} })` : `{ ${content} }`;
-  if (!vfor) {
-    return `[${data}]`;
-  } else {
-    return `__vforToArray(${vfor[1]}).map(${vfor[0]} => (${data}))`;
-  }
-}
-const COMPONENT_CHUNK_ID = `#build/component-chunk`;
-const COMPONENT_CHUNK_RESOLVED_ID = "\0nuxt-component-chunk";
-const ComponentsChunkPlugin = (options) => {
-  const chunkIds = /* @__PURE__ */ new Map();
-  const paths = /* @__PURE__ */ new Map();
-  return [
-    {
-      name: "nuxt:components-chunk:client",
-      apply: () => !options.dev,
-      applyToEnvironment: (environment) => environment.name === "client",
-      buildStart() {
-        for (const c of options.getComponents()) {
-          if (!c.filePath || c.mode === "server") {
-            continue;
-          }
-          chunkIds.set(c.pascalName, this.emitFile({
-            type: "chunk",
-            name: `${c.pascalName}-chunk.mjs`,
-            id: c.filePath,
-            preserveSignature: "strict"
-          }));
-        }
-      },
-      generateBundle(_, bundle) {
-        const ids = /* @__PURE__ */ new Set();
-        for (const [name, id] of chunkIds.entries()) {
-          const filename = this.getFileName(id);
-          ids.add(filename);
-          paths.set(name, filename);
-        }
-        for (const chunk of Object.values(bundle)) {
-          if (chunk.type === "chunk") {
-            if (ids.has(chunk.fileName)) {
-              chunk.isEntry = false;
-            }
-          }
-        }
-      }
-    },
-    {
-      name: "nuxt:components-chunk:server",
-      resolveId: {
-        order: "pre",
-        handler(id) {
-          if (id === COMPONENT_CHUNK_ID) {
-            return COMPONENT_CHUNK_RESOLVED_ID;
-          }
-        }
-      },
-      load(id) {
-        if (id === COMPONENT_CHUNK_RESOLVED_ID) {
-          if (options.dev) {
-            const filePaths = {};
-            for (const c of options.getComponents()) {
-              if (!c.filePath || c.mode === "server") {
-                continue;
-              }
-              filePaths[c.pascalName] = `@fs/${c.filePath}`;
-            }
-            return `export default ${genObjectFromRawEntries(Object.entries(filePaths).map(([name, path]) => [name, genString(path)]))}`;
-          }
-          return `export default ${genObjectFromRawEntries(Array.from(paths.entries()).map(([name, id2]) => [name, genString("/" + id2)]))}`;
-        }
-      }
-    }
-  ];
-};
-
 const COMPONENT_QUERY_RE = /[?&]nuxt_component=/;
 function TransformPlugin$1(nuxt, options) {
   const componentUnimport = createUnimport({
@@ -2805,6 +2627,10 @@ function TransformPlugin$1(nuxt, options) {
       if (!code.includes("#components")) {
         return;
       }
+      const pkg = isAbsolute(id) && id.includes("node_modules") ? await readPackage(id, { try: true }) : void 0;
+      if (isObject(pkg) && isObject(pkg.imports) && Object.hasOwn(pkg.imports, "#components")) {
+        return;
+      }
       componentUnimport.modifyDynamicImports((imports) => {
         imports.length = 0;
         imports.push(...getComponentsImports());
@@ -2847,7 +2673,7 @@ const TreeShakeTemplatePlugin = (options) => createUnplugin(() => {
         return;
       }
       const componentsToRemoveSet = /* @__PURE__ */ new Set();
-      const { program: ast } = parseAndWalk(code, id, (node) => {
+      const { program: ast } = parseAndWalk$1(code, id, (node) => {
         if (!isSsrRender(node)) {
           return;
         }
@@ -2866,7 +2692,7 @@ const TreeShakeTemplatePlugin = (options) => createUnplugin(() => {
             s.remove(slot.start, slot.end + 1);
             const removedCode = `({${code.slice(slot.start, slot.end + 1)}})`;
             const currentState = s.toString();
-            parseAndWalk(removedCode, id, (node2) => {
+            parseAndWalk$1(removedCode, id, (node2) => {
               if (!isSsrRender(node2)) {
                 return;
               }
@@ -2900,7 +2726,7 @@ const TreeShakeTemplatePlugin = (options) => createUnplugin(() => {
 });
 function removeFromSetupReturn(codeAst, name, magicString) {
   let walkedInSetup = false;
-  walk(codeAst, {
+  walk$1(codeAst, {
     enter(node) {
       if (walkedInSetup) {
         this.skip();
@@ -2960,9 +2786,9 @@ function isComponentNotCalledInSetup(code, id, name) {
     return;
   }
   let found = false;
-  parseAndWalk(code, id, function(node) {
+  parseAndWalk$1(code, id, function(node) {
     if (node.type === "Property" && node.key.type === "Identifier" && node.value.type === "FunctionExpression" && node.key.name === "setup" || node.type === "FunctionDeclaration" && (node.id?.name === "_sfc_ssrRender" || node.id?.name === "ssrRender")) {
-      walk(node, {
+      walk$1(node, {
         enter(node2) {
           if (found || node2.type === "VariableDeclaration") {
             this.skip();
@@ -2995,7 +2821,7 @@ function getComponentName(ssrRenderNode) {
   }
 }
 function removeVariableDeclarator(codeAst, name, magicString, removedNodes) {
-  walk(codeAst, {
+  walk$1(codeAst, {
     enter(node) {
       if (node.type !== "VariableDeclaration") {
         return;
@@ -3071,7 +2897,7 @@ const ComponentNamePlugin = (options) => createUnplugin(() => {
         const s = new MagicString(code);
         s.replace(NAME_RE, `__name: ${JSON.stringify(component.pascalName)}`);
         if (!s.hasChanged()) {
-          parseAndWalk(code, id, function(node) {
+          parseAndWalk$1(code, id, function(node) {
             if (node.type !== "ExportDefaultDeclaration") {
               return;
             }
@@ -3102,7 +2928,7 @@ const hydrationStrategyMap = {
   hydrateWhen: "If",
   hydrateNever: "Never"
 };
-const LAZY_HYDRATION_PROPS_RE = /\b(?:hydrate-on-idle|hydrateOnIdle|hydrate-on-visible|hydrateOnVisible|hydrate-on-interaction|hydrateOnInteraction|hydrate-on-media-query|hydrateOnMediaQuery|hydrate-after|hydrateAfter|hydrate-when|hydrateWhen|hydrate-never|hydrateNever)\b/;
+const TEMPLATE_WITH_LAZY_HYDRATION_RE = /<template>[\s\S]*\b(?:hydrate-on-idle|hydrateOnIdle|hydrate-on-visible|hydrateOnVisible|hydrate-on-interaction|hydrateOnInteraction|hydrate-on-media-query|hydrateOnMediaQuery|hydrate-after|hydrateAfter|hydrate-when|hydrateWhen|hydrate-never|hydrateNever)\b[\s\S]*<\/template>/;
 const LazyHydrationTransformPlugin = (options) => createUnplugin(() => {
   const exclude = options.transform?.exclude || [];
   const include = options.transform?.include || [];
@@ -3121,30 +2947,28 @@ const LazyHydrationTransformPlugin = (options) => createUnplugin(() => {
     },
     transform: {
       filter: {
-        code: { include: TEMPLATE_RE }
+        code: { include: TEMPLATE_WITH_LAZY_HYDRATION_RE }
       },
       async handler(code, id) {
-        const scopeTracker = new ScopeTracker({ preserveExitedScopes: true });
-        for (const { 0: script } of code.matchAll(SCRIPT_RE$1)) {
-          if (!script) {
-            continue;
-          }
-          try {
-            parseAndWalk(script, id, {
-              scopeTracker
-            });
-          } catch {
-          }
-        }
         const { 0: template, index: offset = 0 } = code.match(TEMPLATE_RE) || {};
-        if (!template || !LAZY_HYDRATION_PROPS_RE.test(template)) {
+        if (!template) {
           return;
         }
-        const s = new MagicString(code);
         try {
           const ast = parse(template);
+          const scopeTracker = new ScopeTracker$1({ preserveExitedScopes: true });
+          for (const { 0: script } of code.matchAll(SCRIPT_RE$1)) {
+            if (!script) {
+              continue;
+            }
+            try {
+              parseAndWalk$1(script, id, { scopeTracker });
+            } catch {
+            }
+          }
+          const s = new MagicString(code);
           const components = new Set(options.getComponents().map((c) => c.pascalName));
-          await walk$1(ast, (node) => {
+          await walk$2(ast, (node) => {
             if (node.type !== 1) {
               return;
             }
@@ -3187,14 +3011,14 @@ Rename it to \`<Lazy${pascalCase(node.name)} />\` or remove the lazy-hydration p
               }
             }
           });
+          if (s.hasChanged()) {
+            return {
+              code: s.toString(),
+              map: options.sourcemap ? s.generateMap({ hires: true }) : void 0
+            };
+          }
         } catch {
         }
-        if (s.hasChanged()) {
-          return {
-            code: s.toString(),
-            map: options.sourcemap ? s.generateMap({ hires: true }) : void 0
-          };
-        }
       }
     }
   };
@@ -3235,7 +3059,7 @@ const LazyHydrationMacroTransformPlugin = (options) => createUnplugin(() => {
         const s = new MagicString(code);
         const names = /* @__PURE__ */ new Set();
         const edits = [];
-        parseAndWalk(code, id, (node, parent) => {
+        parseAndWalk$1(code, id, (node, parent) => {
           if (node.type !== "CallExpression") {
             return;
           }
@@ -3349,7 +3173,7 @@ const componentsModule = defineNuxtModule({
   defaults: {
     dirs: []
   },
-  async setup(componentOptions, nuxt) {
+  async setup(moduleOptions, nuxt) {
     let componentDirs = [];
     const context = {
       components: []
@@ -3361,52 +3185,38 @@ const componentsModule = defineNuxtModule({
       addBuildPlugin(ComponentNamePlugin({ sourcemap: !!nuxt.options.sourcemap.client, getComponents }), { server: false });
       addBuildPlugin(ComponentNamePlugin({ sourcemap: !!nuxt.options.sourcemap.server, getComponents }), { client: false });
     }
-    const normalizeDirs = (dir, cwd, options) => {
-      if (Array.isArray(dir)) {
-        return dir.map((dir2) => normalizeDirs(dir2, cwd, options)).flat().sort(compareDirByPathLength);
-      }
-      if (dir === true || dir === void 0) {
-        return [
-          { priority: options?.priority || 0, path: resolve(cwd, "components/islands"), island: true },
-          { priority: options?.priority || 0, path: resolve(cwd, "components/global"), global: true },
-          { priority: options?.priority || 0, path: resolve(cwd, "components") }
-        ];
-      }
-      if (typeof dir === "string") {
-        return [
-          { priority: options?.priority || 0, path: resolve(cwd, resolveAlias$1(dir)) }
-        ];
-      }
-      if (!dir) {
-        return [];
-      }
-      const dirs = (dir.dirs || [dir]).map((dir2) => typeof dir2 === "string" ? { path: dir2 } : dir2).filter((_dir) => _dir.path);
-      return dirs.map((_dir) => ({
-        priority: options?.priority || 0,
-        ..._dir,
-        path: resolve(cwd, resolveAlias$1(_dir.path))
-      }));
-    };
     nuxt.hook("app:resolve", async () => {
-      const allDirs = nuxt.options._layers.map((layer) => normalizeDirs(layer.config.components, layer.config.srcDir, { priority: layer.config.srcDir === nuxt.options.srcDir ? 1 : 0 })).flat();
+      const allDirs = [];
+      for (const layer of nuxt.options._layers) {
+        const layerDirs = normalizeDirs(layer.config.components, layer.config.srcDir, { priority: layer.config.srcDir === nuxt.options.srcDir ? 1 : 0 });
+        allDirs.push(...layerDirs);
+      }
       await nuxt.callHook("components:dirs", allDirs);
-      componentDirs = allDirs.filter(isPureObjectOrString).map((dir) => {
+      const userComponentDirs = [];
+      const libraryComponentDirs = [];
+      for (const dir of allDirs) {
+        if (!isPureObjectOrString(dir)) {
+          continue;
+        }
         const dirOptions = typeof dir === "object" ? dir : { path: dir };
         const dirPath = resolveAlias$1(dirOptions.path);
-        const transpile = typeof dirOptions.transpile === "boolean" ? dirOptions.transpile : "auto";
         const extensions = (dirOptions.extensions || nuxt.options.extensions).map((e) => e.replace(STARTER_DOT_RE, ""));
+        const _transpile = typeof dirOptions.transpile === "boolean" ? dirOptions.transpile : "auto";
+        const transpile = _transpile === "auto" ? dirPath.includes("node_modules") : _transpile;
+        if (transpile) {
+          nuxt.options.build.transpile.push(dirPath);
+        }
         const present = isDirectory(dirPath);
         if (!present && !DEFAULT_COMPONENTS_DIRS_RE.test(dirOptions.path)) {
           logger.warn("Components directory not found: `" + dirPath + "`");
         }
-        return {
-          global: componentOptions.global,
+        const dirs = dirPath.includes("node_modules") ? libraryComponentDirs : userComponentDirs;
+        dirs.push({
+          global: moduleOptions.global,
           ...dirOptions,
-          // TODO: https://github.com/nuxt/framework/pull/251
-          enabled: true,
           path: dirPath,
           extensions,
-          pattern: dirOptions.pattern || `**/*.{${extensions.join(",")},}`,
+          pattern: dirOptions.pattern || (extensions.length > 1 ? `**/*.{${extensions.join(",")}}` : `**/*.${extensions[0] || "*"}`),
           ignore: [
             "**/*{M,.m,-m}ixin.{js,ts,jsx,tsx}",
             // ignore mixins
@@ -3414,21 +3224,20 @@ const componentsModule = defineNuxtModule({
             // .d.ts files
             ...dirOptions.ignore || []
           ],
-          transpile: transpile === "auto" ? dirPath.includes("node_modules") : transpile
-        };
-      }).filter((d) => d.enabled);
+          transpile
+        });
+      }
       componentDirs = [
-        ...componentDirs.filter((dir) => !dir.path.includes("node_modules")),
-        ...componentDirs.filter((dir) => dir.path.includes("node_modules"))
+        ...userComponentDirs,
+        ...libraryComponentDirs
       ];
-      nuxt.options.build.transpile.push(...componentDirs.filter((dir) => dir.transpile).map((dir) => dir.path));
     });
     addTemplate(componentsDeclarationTemplate);
     addTypeTemplate(componentsTypeTemplate);
     addPluginTemplate(componentsPluginTemplate);
     addTemplate(componentNamesTemplate);
     addTemplate({ ...componentsIslandsTemplate, filename: "components.islands.mjs" });
-    if (componentOptions.generateMetadata) {
+    if (moduleOptions.generateMetadata) {
       addTemplate(componentsMetadataTemplate);
     }
     const serverComponentRuntime = await findPath(join(distDir, "components/runtime/server-component")) ?? join(distDir, "components/runtime/server-component");
@@ -3509,34 +3318,42 @@ const componentsModule = defineNuxtModule({
       }));
       addImportsSources(lazyHydrationMacroPreset);
     }
-    if (nuxt.options.experimental.componentIslands) {
-      const selectiveClient = typeof nuxt.options.experimental.componentIslands === "object" && nuxt.options.experimental.componentIslands.selectiveClient;
-      addVitePlugin({
-        name: "nuxt-server-component-hmr",
-        handleHotUpdate(ctx) {
-          const components = getComponents();
-          const filePath = normalize(ctx.file);
-          const comp = components.find((c) => c.filePath === filePath);
-          if (comp?.mode === "server") {
-            ctx.server.ws.send({
-              event: `nuxt-server-component:${comp.pascalName}`,
-              type: "custom"
-            });
-          }
-        }
-      }, { server: false });
-      addBuildPlugin(IslandsTransformPlugin({ getComponents, selectiveClient }), { client: false });
-      if (selectiveClient && nuxt.options.builder === "@nuxt/vite-builder") {
-        addVitePlugin(() => ComponentsChunkPlugin({ dev: nuxt.options.dev, getComponents }));
-      } else {
-        addTemplate({
-          filename: "component-chunk.mjs",
-          getContents: () => `export default {}`
-        });
-      }
-    }
+    if (nuxt.options.experimental.componentIslands) ;
   }
 });
+function normalizeDirs(dir, cwd, options) {
+  if (Array.isArray(dir)) {
+    return dir.map((dir2) => normalizeDirs(dir2, cwd, options)).flat().sort(compareDirByPathLength);
+  }
+  if (dir === true || dir === void 0) {
+    return [
+      { priority: options?.priority || 0, path: resolve(cwd, "components/islands"), island: true },
+      { priority: options?.priority || 0, path: resolve(cwd, "components/global"), global: true },
+      { priority: options?.priority || 0, path: resolve(cwd, "components") }
+    ];
+  }
+  if (typeof dir === "string") {
+    return [
+      { priority: options?.priority || 0, path: resolve(cwd, resolveAlias$1(dir)) }
+    ];
+  }
+  if (!dir) {
+    return [];
+  }
+  const normalizedDirs = [];
+  for (const d of "dirs" in dir ? dir.dirs || [] : [dir]) {
+    const normalizedDir = typeof d === "string" ? { path: d } : d;
+    if (!normalizedDir.path) {
+      continue;
+    }
+    normalizedDirs.push({
+      priority: options?.priority || 0,
+      ...normalizedDir,
+      path: resolve(cwd, resolveAlias$1(normalizedDir.path))
+    });
+  }
+  return normalizedDirs.sort(compareDirByPathLength);
+}
 
 const NODE_MODULES_RE$1 = /[\\/]node_modules[\\/]/;
 const IMPORTS_RE = /(['"])#imports\1/;
@@ -3576,6 +3393,11 @@ const TransformPlugin = ({ ctx, options, sourcemap }) => createUnplugin(() => {
   };
 });
 
+const allNuxtPresets = [
+  ...pagesImportPresets,
+  ...routeRulesPresets,
+  ...defaultPresets
+];
 const importsModule = defineNuxtModule({
   meta: {
     name: "nuxt:imports",
@@ -3597,26 +3419,11 @@ const importsModule = defineNuxtModule({
     virtualImports: ["#imports"],
     polyfills: true
   }),
-  async setup(options, nuxt) {
+  setup(options, nuxt) {
     const presets = JSON.parse(JSON.stringify(options.presets));
     if (options.polyfills) {
       presets.push(...appCompatPresets);
     }
-    await nuxt.callHook("imports:sources", presets);
-    const { addons: inlineAddons, ...rest } = options;
-    const [addons, addonsOptions] = Array.isArray(inlineAddons) ? [inlineAddons] : [[], inlineAddons];
-    const ctx = createUnimport({
-      injectAtEnd: true,
-      ...rest,
-      addons: {
-        addons,
-        vueTemplate: options.autoImport,
-        vueDirectives: options.autoImport === false ? void 0 : true,
-        ...addonsOptions
-      },
-      presets
-    });
-    await nuxt.callHook("imports:context", ctx);
     let composablesDirs = [];
     if (options.scan) {
       for (const layer of nuxt.options._layers) {
@@ -3630,14 +3437,15 @@ const importsModule = defineNuxtModule({
           resolve(layer.config.rootDir, layer.config.dir?.shared ?? "shared", "types")
         );
         for (const dir of layer.config.imports?.dirs ?? []) {
-          if (!dir) {
-            continue;
+          if (dir) {
+            composablesDirs.push(resolve(layer.config.srcDir, resolveAlias$1(dir, nuxt.options.alias)));
           }
-          composablesDirs.push(resolve(layer.config.srcDir, dir));
         }
       }
-      await nuxt.callHook("imports:dirs", composablesDirs);
-      composablesDirs = composablesDirs.map((dir) => normalize(dir));
+      nuxt.hook("modules:done", async () => {
+        await nuxt.callHook("imports:dirs", composablesDirs);
+        composablesDirs = composablesDirs.map((dir) => normalize(dir));
+      });
       nuxt.hook("builder:watch", (event, relativePath) => {
         if (!["addDir", "unlinkDir"].includes(event)) {
           return;
@@ -3649,20 +3457,42 @@ const importsModule = defineNuxtModule({
         }
       });
     }
+    let ctx;
+    nuxt.hook("modules:done", async () => {
+      await nuxt.callHook("imports:sources", presets);
+      const { addons: inlineAddons, ...rest } = options;
+      const [addons, addonsOptions] = Array.isArray(inlineAddons) ? [inlineAddons] : [[], inlineAddons];
+      ctx = createUnimport({
+        injectAtEnd: true,
+        ...rest,
+        addons: {
+          addons,
+          vueTemplate: options.autoImport,
+          vueDirectives: options.autoImport === false ? void 0 : true,
+          ...addonsOptions
+        },
+        presets
+      });
+      await nuxt.callHook("imports:context", ctx);
+    });
     addTemplate({
       filename: "imports.mjs",
       getContents: async () => toExports(await ctx.getImports()) + '\nif (import.meta.dev) { console.warn("[nuxt] `#imports` should be transformed with real imports. There seems to be something wrong with the imports plugin.") }'
     });
     nuxt.options.alias["#imports"] = join(nuxt.options.buildDir, "imports");
-    addBuildPlugin(TransformPlugin({ ctx, options, sourcemap: !!nuxt.options.sourcemap.server || !!nuxt.options.sourcemap.client }));
+    addBuildPlugin(TransformPlugin({
+      ctx: { injectImports: (code, id, options2) => ctx.injectImports(code, id, options2) },
+      options,
+      sourcemap: !!nuxt.options.sourcemap.server || !!nuxt.options.sourcemap.client
+    }));
     const priorities = getLayerDirectories(nuxt).map((dirs, i) => [dirs.app, -i]).sort(([a], [b]) => b.length - a.length);
     const IMPORTS_TEMPLATE_RE = /\/imports\.(?:d\.ts|mjs)$/;
     function isImportsTemplate(template) {
       return IMPORTS_TEMPLATE_RE.test(template.filename);
     }
     const isIgnored = createIsIgnored(nuxt);
-    const defaultImportSources = new Set(defaultPresets.flatMap((i) => i.from));
-    const defaultImports = new Set(presets.flatMap((p) => defaultImportSources.has(p.from) ? p.imports : []));
+    const nuxtImportSources = new Set(allNuxtPresets.flatMap((i) => i.from));
+    const nuxtImports = new Set(presets.flatMap((p) => nuxtImportSources.has(p.from) ? p.imports : []));
     const regenerateImports = async () => {
       await ctx.modifyDynamicImports(async (imports) => {
         imports.length = 0;
@@ -3677,9 +3507,9 @@ const importsModule = defineNuxtModule({
         }
         await nuxt.callHook("imports:extend", imports);
         for (const i of imports) {
-          if (!defaultImportSources.has(i.from)) {
+          if (!nuxtImportSources.has(i.from)) {
             const value = i.as || i.name;
-            if (defaultImports.has(value) && (!i.priority || i.priority >= 0)) {
+            if (nuxtImports.has(value) && (!i.priority || i.priority >= 0)) {
               const relativePath = isAbsolute(i.from) ? `${resolveToAlias(i.from, nuxt)}` : i.from;
               logger.error(`\`${value}\` is an auto-imported function that is in use by Nuxt. Overriding it will likely cause issues. Please consider renaming \`${value}\` in \`${relativePath}\`.`);
             }
@@ -3691,8 +3521,11 @@ const importsModule = defineNuxtModule({
         filter: isImportsTemplate
       });
     };
-    await regenerateImports();
-    addDeclarationTemplates(ctx, options);
+    nuxt.hook("modules:done", () => regenerateImports());
+    addDeclarationTemplates({
+      generateTypeDeclarations: (options2) => ctx.generateTypeDeclarations(options2),
+      getImports: () => ctx.getImports()
+    }, options);
     nuxt.hook("builder:watch", async (_, relativePath) => {
       const path = resolve(nuxt.options.srcDir, relativePath);
       if (options.scan && composablesDirs.some((dir) => dir === path || path.startsWith(dir + "/"))) {
@@ -3709,11 +3542,11 @@ const importsModule = defineNuxtModule({
 function addDeclarationTemplates(ctx, options) {
   const nuxt = useNuxt();
   const resolvedImportPathMap = /* @__PURE__ */ new Map();
-  const r = ({ from }) => resolvedImportPathMap.get(from);
-  const SUPPORTED_EXTENSION_RE = new RegExp(`\\.(${nuxt.options.extensions.map((i) => i.replace(".", "")).join("|")})$`);
+  const r = (i) => resolvedImportPathMap.get(i.typeFrom || i.from);
+  const SUPPORTED_EXTENSION_RE = new RegExp(`\\.(?:${nuxt.options.extensions.map((i) => i.replace(".", "")).join("|")})$`);
   const importPaths = nuxt.options.modulesDir.map((dir) => directoryToURL(dir));
   async function cacheImportPaths(imports) {
-    const importSource = Array.from(new Set(imports.map((i) => i.from)));
+    const importSource = Array.from(new Set(imports.map((i) => i.typeFrom || i.from)));
     await Promise.all(importSource.map(async (from) => {
       if (resolvedImportPathMap.has(from) || nuxt._dependencies?.has(from)) {
         return;
@@ -3758,7 +3591,7 @@ function addDeclarationTemplates(ctx, options) {
   });
 }
 
-const version = "4.1.0";
+const version = "4.1.2";
 
 const createImportProtectionPatterns = (nuxt, options) => {
   const patterns = [];
@@ -3834,12 +3667,11 @@ const TreeShakeComposablesPlugin = (options) => createUnplugin(() => {
   const composableNames = Object.values(options.composables).flat();
   const regexp = `(^\\s*)(${composableNames.join("|")})(?=\\((?!\\) \\{))`;
   const COMPOSABLE_RE = new RegExp(regexp, "m");
-  const COMPOSABLE_RE_GLOBAL = new RegExp(regexp, "gm");
   return {
     name: "nuxt:tree-shake-composables:transform",
     enforce: "post",
-    transformInclude(id) {
-      return isVue(id, { type: ["script"] }) || isJS(id);
+    transformInclude(id2) {
+      return isVue(id2, { type: ["script"] }) || isJS(id2);
     },
     transform: {
       filter: {
@@ -3847,10 +3679,41 @@ const TreeShakeComposablesPlugin = (options) => createUnplugin(() => {
       },
       handler(code) {
         const s = new MagicString(code);
-        const strippedCode = stripLiteral(code);
-        for (const match of strippedCode.matchAll(COMPOSABLE_RE_GLOBAL)) {
-          s.overwrite(match.index, match.index + match[0].length, `${match[1]} false && /*@__PURE__*/ ${match[2]}`);
-        }
+        const scopeTracker = new ScopeTracker({ preserveExitedScopes: true });
+        const parseResult = parseAndWalk(code, id, {
+          scopeTracker
+        });
+        scopeTracker.freeze();
+        walk(parseResult.program, {
+          scopeTracker,
+          enter(node) {
+            if (node.type !== "CallExpression" || node.callee.type !== "Identifier") {
+              return;
+            }
+            const functionName = node.callee.name;
+            const scopeTrackerNode = scopeTracker.getDeclaration(functionName);
+            if (scopeTrackerNode) {
+              if (scopeTrackerNode.type !== "Import") {
+                return;
+              }
+              if (scopeTrackerNode.importNode.type !== "ImportDeclaration") {
+                return;
+              }
+              const importPath = scopeTrackerNode.importNode.source.value;
+              const importSpecifier = scopeTrackerNode.node;
+              const importedName = importSpecifier.type === "ImportSpecifier" && importSpecifier.imported.type === "Identifier" ? importSpecifier.imported.name : importSpecifier.local.name;
+              const isFromAllowedPath = importPath === "#imports" ? allComposableNames.has(importedName) : options.composables[importPath]?.includes(importedName);
+              if (!isFromAllowedPath) {
+                return;
+              }
+            }
+            if (!scopeTrackerNode && !allComposableNames.has(functionName)) {
+              return;
+            }
+            s.overwrite(node.start, node.end, ` false && /*@__PURE__*/ ${functionName}${code.slice(node.callee.end, node.end)}`);
+            this.skip();
+          }
+        });
         if (s.hasChanged()) {
           return {
             code: s.toString(),
@@ -3883,9 +3746,9 @@ const DevOnlyPlugin = (options) => createUnplugin(() => {
             if (n.name !== "template") {
               return false;
             }
-            return "fallback" in n.attributes || "#fallback" in n.attributes;
+            return "fallback" in n.attributes || "#fallback" in n.attributes || "v-slot:fallback" in n.attributes;
           });
-          const replacement = fallback ? match[0].slice(fallback.loc[0].end, fallback.loc[fallback.loc.length - 1].start) : "";
+          const replacement = fallback ? match[0].slice(fallback.loc[0].end, fallback.loc.at(-1).start) : "";
           s.overwrite(match.index, match.index + match[0].length, replacement);
         }
         if (s.hasChanged()) {
@@ -3969,26 +3832,32 @@ const LayerAliasingPlugin = (options) => createUnplugin((_options, meta) => {
   };
 });
 
-const addModuleTranspiles = (opts = {}) => {
-  const nuxt = useNuxt();
-  const modules = [
-    ...opts.additionalModules || [],
-    ...nuxt.options.modules,
-    ...nuxt.options._modules
-  ].map((m) => typeof m === "string" ? m : Array.isArray(m) ? m[0] : m.src).filter((m) => typeof m === "string").map(normalizeModuleTranspilePath);
-  nuxt.options.build.transpile = nuxt.options.build.transpile.map((m) => typeof m === "string" ? m.split("node_modules/").pop() : m).filter((x) => !!x);
-  function isTranspilePresent(mod) {
-    return nuxt.options.build.transpile.some((t) => !(t instanceof Function) && (t instanceof RegExp ? t.test(mod) : new RegExp(t).test(mod)));
+const addModuleTranspiles = (nuxt) => {
+  const transpile = [];
+  for (const t of nuxt.options.build.transpile) {
+    if (t instanceof Function) {
+      continue;
+    }
+    if (typeof t === "string") {
+      transpile.push(new RegExp(escapeRE(t)));
+    } else {
+      transpile.push(t);
+    }
   }
-  for (const module of modules) {
-    if (!isTranspilePresent(module)) {
-      nuxt.options.build.transpile.push(module);
+  for (const m of [...nuxt.options.modules, ...nuxt.options._modules]) {
+    const mod = typeof m === "string" ? m : Array.isArray(m) ? m[0] : m.src;
+    if (typeof mod !== "string") {
+      continue;
+    }
+    const path = normalizeModuleTranspilePath(mod);
+    if (!transpile.some((t) => t.test(path))) {
+      nuxt.options.build.transpile.push(path);
     }
   }
 };
 
 const template = () => {
-  return '<svg xmlns="http://www.w3.org/2000/svg" width="80" fill="none" class="nuxt-spa-loading" viewBox="0 0 37 25"><path d="M24.236 22.006h10.742L25.563 5.822l-8.979 14.31a4 4 0 0 1-3.388 1.874H2.978l11.631-20 5.897 10.567"/></svg><style>.nuxt-spa-loading{left:50%;position:fixed;top:50%;transform:translate(-50%,-50%)}.nuxt-spa-loading>path{fill:none;stroke:#00dc82;stroke-width:4px;stroke-linecap:round;stroke-linejoin:round;stroke-dasharray:128;stroke-dashoffset:128;animation:nuxt-spa-loading-move 3s linear infinite}@keyframes nuxt-spa-loading-move{to{stroke-dashoffset:-128}}</style>';
+  return '<svg xmlns="http://www.w3.org/2000/svg" width="80" fill="none" class="nuxt-spa-loading" viewBox="0 0 37 25"><path d="M24.236 22.006h10.742L25.563 5.822l-8.979 14.31a4 4 0 0 1-3.388 1.874H2.978l11.631-20 5.897 10.567"/></svg><style>.nuxt-spa-loading{left:50%;position:fixed;top:50%;transform:translate(-50%,-50%)}.nuxt-spa-loading>path{animation:nuxt-spa-loading-move 3s linear infinite;fill:none;stroke:#00dc82;stroke-dasharray:128;stroke-dashoffset:128;stroke-linecap:round;stroke-linejoin:round;stroke-width:4px}@keyframes nuxt-spa-loading-move{to{stroke-dashoffset:-128}}</style>';
 };
 
 const logLevelMapReverse = {
@@ -4000,10 +3869,24 @@ const NODE_MODULES_RE = /(?<=\/)node_modules\/(.+)$/;
 const PNPM_NODE_MODULES_RE = /\.pnpm\/.+\/node_modules\/(.+)$/;
 async function initNitro(nuxt) {
   const layerDirs = getLayerDirectories(nuxt);
-  const excludePaths = layerDirs.flatMap((dirs) => [
-    dirs.root.match(NODE_MODULES_RE)?.[1]?.replace(/\/$/, ""),
-    dirs.root.match(PNPM_NODE_MODULES_RE)?.[1]?.replace(/\/$/, "")
-  ].filter((dir) => Boolean(dir)).map((dir) => escapeRE(dir)));
+  const excludePaths = [];
+  for (const dirs of layerDirs) {
+    const paths = [
+      dirs.root.match(NODE_MODULES_RE)?.[1]?.replace(/\/$/, ""),
+      dirs.root.match(PNPM_NODE_MODULES_RE)?.[1]?.replace(/\/$/, "")
+    ];
+    for (const dir of paths) {
+      if (dir) {
+        excludePaths.push(escapeRE(dir));
+      }
+    }
+  }
+  const layerPublicAssetsDirs = [];
+  for (const dirs of layerDirs) {
+    if (existsSync(dirs.public)) {
+      layerPublicAssetsDirs.push({ dir: dirs.public });
+    }
+  }
   const excludePattern = excludePaths.length ? [new RegExp(`node_modules\\/(?!${excludePaths.join("|")})`)] : [/node_modules/];
   const rootDirWithSlash = withTrailingSlash$1(nuxt.options.rootDir);
   const moduleEntryPaths = [];
@@ -4108,7 +3991,7 @@ async function initNitro(nuxt) {
               join(moduleDir, "dist/runtime/server")
             ];
           }),
-          ...getLayerDirectories(nuxt).map((dirs) => relativeWithDot(nuxt.options.buildDir, join(dirs.shared, "**/*.d.ts")))
+          ...layerDirs.map((dirs) => relativeWithDot(nuxt.options.buildDir, join(dirs.shared, "**/*.d.ts")))
         ],
         exclude: [
           ...nuxt.options.modulesDir.map((m) => relativeWithDot(nuxt.options.buildDir, m)),
@@ -4123,7 +4006,7 @@ async function initNitro(nuxt) {
         maxAge: 31536e3,
         baseURL: nuxt.options.app.buildAssetsDir
       },
-      ...getLayerDirectories(nuxt).filter((dirs) => existsSync(dirs.public)).map((dirs) => ({ dir: dirs.public }))
+      ...layerPublicAssetsDirs
     ],
     prerender: {
       ignoreUnprefixedPublicAssets: true,
@@ -4145,7 +4028,7 @@ async function initNitro(nuxt) {
         "nuxt-nightly/dist",
         distDir,
         // Ensure app config files have auto-imports injected even if they are pure .js files
-        ...getLayerDirectories(nuxt).map((dirs) => join(dirs.app, "app.config"))
+        ...layerDirs.map((dirs) => join(dirs.app, "app.config"))
       ],
       traceInclude: [
         // force include files used in generated code from the runtime-compiler
@@ -4157,7 +4040,21 @@ async function initNitro(nuxt) {
             }
             return targets;
           }, [])
-        ] : []
+        ] : [],
+        // todo fix 
+        ...[
+          ...nuxt.options.modulesDir.reduce((targets, path) => {
+            const serverRendererPath = resolve(path, "vue/index.mjs");
+            if (existsSync(serverRendererPath)) {
+              targets.push(serverRendererPath);
+            }
+            return targets;
+          }, [])
+        ]
+      ],
+      // todo this too...
+      external: [
+        "vue"
       ]
     },
     alias: {
@@ -4570,6 +4467,7 @@ async function initNitro(nuxt) {
         if (name === "server") {
           const memfs = compiler.outputFileSystem;
           nitro.options.virtual["#build/dist/server/server.mjs"] = () => memfs.readFileSync(join(nuxt.options.buildDir, "dist/server/server.mjs"), "utf-8");
+          nitro.options.virtual["#build/dist/server/components.islands.mjs"] = () => memfs.readFileSync(join(nuxt.options.buildDir, "dist/server/components.islands.mjs"), "utf-8");
         }
       });
       nuxt.hook(`${builder}:compiled`, () => {
@@ -4776,7 +4674,7 @@ function extractMetadata(code, loader = "ts") {
   if (/defineNuxtPlugin\s*\([\w(]/.test(code)) {
     return {};
   }
-  parseAndWalk(code, `file.${loader}`, (node) => {
+  parseAndWalk$1(code, `file.${loader}`, (node) => {
     if (node.type !== "CallExpression" || node.callee.type !== "Identifier") {
       return;
     }
@@ -4867,7 +4765,7 @@ const RemovePluginMetadataPlugin = (nuxt) => createUnplugin(() => {
       let wrapped = false;
       const wrapperNames = /* @__PURE__ */ new Set(["defineNuxtPlugin", "definePayloadPlugin"]);
       try {
-        parseAndWalk(code, id, (node) => {
+        parseAndWalk$1(code, id, (node) => {
           if (node.type === "ImportSpecifier" && node.imported.type === "Identifier" && (node.imported.name === "defineNuxtPlugin" || node.imported.name === "definePayloadPlugin")) {
             wrapperNames.add(node.local.name);
           }
@@ -4974,14 +4872,14 @@ const ComposableKeysPlugin = (options) => createUnplugin(() => {
         let count = 0;
         const relativeID = isAbsolute(id) ? relative(options.rootDir, id) : id;
         const { pathname: relativePathname } = parseURL(relativeID);
-        const scopeTracker = new ScopeTracker({
+        const scopeTracker = new ScopeTracker$1({
           preserveExitedScopes: true
         });
-        const parseResult = parseAndWalk(script, id, {
+        const parseResult = parseAndWalk$1(script, id, {
           scopeTracker
         });
         scopeTracker.freeze();
-        walk(parseResult.program, {
+        walk$1(parseResult.program, {
           scopeTracker,
           enter(node) {
             if (node.type !== "CallExpression" || node.callee.type !== "Identifier") {
@@ -5220,7 +5118,7 @@ function PrehydrateTransformPlugin(options = {}) {
       },
       handler(code, id) {
         const s = new MagicString(code);
-        parseAndWalk(code, id, (node) => {
+        parseAndWalk$1(code, id, (node) => {
           if (node.type !== "CallExpression" || node.callee.type !== "Identifier") {
             return;
           }
@@ -5501,6 +5399,10 @@ Using \`${fallbackCompatibilityDate}\` as fallback. More info at: ${colors.under
       }
     }
   });
+  nuxt.hook("nitro:prepare:types", (opts) => {
+    opts.references.push({ path: resolve(nuxt.options.buildDir, "types/app.config.d.ts") });
+    opts.references.push({ path: resolve(nuxt.options.buildDir, "types/runtime-config.d.ts") });
+  });
   if (nuxt.options.scripts) {
     if (!nuxt.options._modules.some((m) => m === "@nuxt/scripts" || m === "@nuxt/scripts-nightly")) {
       installNuxtModule("@nuxt/scripts");
@@ -5609,9 +5511,11 @@ Using \`${fallbackCompatibilityDate}\` as fallback. More info at: ${colors.under
     });
   }
   nuxt.options.build.transpile.push("nuxt/app");
-  nuxt.options.build.transpile.push(
-    ...layerDirs.filter((i) => i.root.includes("node_modules")).map((i) => i.root.replace(/\/$/, ""))
-  );
+  for (const layer of layerDirs) {
+    if (layer.root.includes("node_modules")) {
+      nuxt.options.build.transpile.push(layer.root.replace(/\/$/, ""));
+    }
+  }
   const locallyScannedLayersDirs = layerDirs.map((l) => join(l.root, "layers/"));
   const rootWithTrailingSlash = withTrailingSlash(nuxt.options.rootDir);
   for (const dirs of layerDirs) {
@@ -5837,8 +5741,13 @@ export default defineNuxtPlugin({
       return nuxt.callHook("restart");
     }
   });
-  nuxt.options.build.transpile = nuxt.options.build.transpile.map((t) => typeof t === "string" ? normalize(t) : t);
-  addModuleTranspiles();
+  nuxt.options.build.transpile = nuxt.options.build.transpile.map((t) => {
+    if (typeof t !== "string") {
+      return t;
+    }
+    return normalize(t).split("node_modules/").pop();
+  });
+  addModuleTranspiles(nuxt);
   await initNitro(nuxt);
   const nitro = useNitro();
   if (nitro.options.static && nuxt.options.experimental.payloadExtraction === void 0) {
@@ -5884,9 +5793,15 @@ async function loadNuxt(opts) {
     }
   }
   options._modules.push(pagesModule, metaModule, componentsModule);
+  const importIncludes = [];
+  for (const layer of options._layers) {
+    if (layer.cwd && layer.cwd.includes("node_modules")) {
+      importIncludes.push(new RegExp(`(^|\\/)${escapeRE(layer.cwd.split("node_modules/").pop())}(\\/|$)(?!node_modules\\/)`));
+    }
+  }
   options._modules.push([importsModule, {
     transform: {
-      include: options._layers.filter((i) => i.cwd && i.cwd.includes("node_modules")).map((i) => new RegExp(`(^|\\/)${escapeRE(i.cwd.split("node_modules/").pop())}(\\/|$)(?!node_modules\\/)`))
+      include: importIncludes
     }
   }]);
   options._modules.push(schemaModule);
@@ -6073,7 +5988,7 @@ const rootComponentTemplate = {
   filename: "root-component.mjs",
   // TODO: fix upstream in vite - this ensures that vite generates a module graph for islands
   // but should not be necessary (and has a warmup performance cost). See https://github.com/nuxt/nuxt/pull/24584.
-  getContents: (ctx) => (ctx.nuxt.options.dev ? "import '#build/components.islands.mjs';\n" : "") + genExport(ctx.app.rootComponent, ["default"])
+  getContents: (ctx) => genExport(ctx.app.rootComponent, ["default"])
 };
 const errorComponentTemplate = {
   filename: "error-component.mjs",
@@ -6333,14 +6248,35 @@ const layoutTemplate = {
 };
 const middlewareTemplate = {
   filename: "middleware.mjs",
-  getContents({ app }) {
+  getContents({ app, nuxt }) {
     const globalMiddleware = app.middleware.filter((mw) => mw.global);
     const namedMiddleware = app.middleware.filter((mw) => !mw.global);
-    const namedMiddlewareObject = genObjectFromRawEntries(namedMiddleware.map((mw) => [mw.name, genDynamicImport(mw.path)]));
+    const alias = nuxt.options.dev ? { ...nuxt?.options.alias || {}, ...strippedAtAliases } : {};
     return [
       ...globalMiddleware.map((mw) => genImport(mw.path, genSafeVariableName(mw.name))),
-      `export const globalMiddleware = ${genArrayFromRaw(globalMiddleware.map((mw) => genSafeVariableName(mw.name)))}`,
-      `export const namedMiddleware = ${namedMiddlewareObject}`
+      ...!nuxt.options.dev ? [
+        `export const globalMiddleware = ${genArrayFromRaw(globalMiddleware.map((mw) => genSafeVariableName(mw.name)))}`,
+        `export const namedMiddleware = ${genObjectFromRawEntries(namedMiddleware.map((mw) => [mw.name, genDynamicImport(mw.path)]))}`
+      ] : [
+        `const _globalMiddleware = ${genObjectFromRawEntries(globalMiddleware.map((mw) => [reverseResolveAlias(mw.path, alias).pop() || mw.path, genSafeVariableName(mw.name)]))}`,
+        `for (const path in _globalMiddleware) {`,
+        `  Object.defineProperty(_globalMiddleware[path], '_path', { value: path, configurable: true })`,
+        `}`,
+        `export const globalMiddleware = Object.values(_globalMiddleware)`,
+        `const _namedMiddleware = ${genArrayFromRaw(namedMiddleware.map((mw) => ({
+          name: genString(mw.name),
+          path: genString(reverseResolveAlias(mw.path, alias).pop() || mw.path),
+          import: genDynamicImport(mw.path)
+        })))}`,
+        `for (const mw of _namedMiddleware) {`,
+        `  const i = mw.import`,
+        `  mw.import = () => i().then(r => {`,
+        `    Object.defineProperty(r.default || r, '_path', { value: mw.path, configurable: true })`,
+        `    return r`,
+        `  })`,
+        `}`,
+        `export const namedMiddleware = Object.fromEntries(_namedMiddleware.map(mw => [mw.name, mw.import]))`
+      ]
     ].join("\n");
   }
 };
@@ -6374,7 +6310,6 @@ const nitroSchemaTemplate = {
       /* typescript */
       `
 ${lines.join("\n")}
-/// <reference path="./runtime-config.d.ts" />
 
 import type { RuntimeConfig } from 'nuxt/schema'
 import type { H3Event } from 'h3'
@@ -6580,11 +6515,7 @@ const nuxtConfigTemplate = {
       `export const devRootDir = ${ctx.nuxt.options.dev ? JSON.stringify(ctx.nuxt.options.rootDir) : "null"}`,
       `export const devLogs = ${JSON.stringify(ctx.nuxt.options.features.devLogs)}`,
       `export const nuxtLinkDefaults = ${JSON.stringify(ctx.nuxt.options.experimental.defaults.nuxtLink)}`,
-      `export const asyncDataDefaults = ${JSON.stringify({
-        ...ctx.nuxt.options.experimental.defaults.useAsyncData,
-        errorValue: void 0,
-        value: void 0
-      })}`,
+      `export const asyncDataDefaults = ${JSON.stringify(ctx.nuxt.options.experimental.defaults.useAsyncData)}`,
       `export const fetchDefaults = ${JSON.stringify(fetchDefaults)}`,
       `export const vueAppRootContainer = ${ctx.nuxt.options.app.rootAttrs.id ? `'#${ctx.nuxt.options.app.rootAttrs.id}'` : `'body > ${ctx.nuxt.options.app.rootTag}'`}`,
       `export const viewTransition = ${ctx.nuxt.options.experimental.viewTransition}`,
@@ -6622,6 +6553,10 @@ const buildTypeTemplate = {
     return declarations;
   }
 };
+const strippedAtAliases = {
+  "@": "",
+  "@@": ""
+};
 
 const defaultTemplates = {
   __proto__: null,
@@ -6838,7 +6773,7 @@ async function annotatePlugins(nuxt, plugins) {
     } catch (e) {
       const relativePluginSrc = relative(nuxt.options.rootDir, plugin.src);
       if (e.message === "Invalid plugin metadata") {
-        logger.warn(`Failed to parse static properties from plugin \`${relativePluginSrc}\`, falling back to non-optimized runtime meta. Learn more: https://nuxt.com/docs/guide/directory-structure/plugins#object-syntax-plugins`);
+        logger.warn(`Failed to parse static properties from plugin \`${relativePluginSrc}\`, falling back to non-optimized runtime meta. Learn more: https://nuxt.com/docs/4.x/guide/directory-structure/plugins#object-syntax-plugins`);
       } else {
         logger.warn(`Failed to parse static properties from plugin \`${relativePluginSrc}\`.`, e);
       }
@@ -6892,28 +6827,28 @@ async function checkViteConfig() {
   return await checkAndWarnAboutConfigFileExistence({
     fileName: "vite.config",
     extensions: [".js", ".mjs", ".ts", ".cjs", ".mts", ".cts"],
-    createWarningMessage: (foundFile) => `Using \`${foundFile}\` is not supported together with Nuxt. Use \`options.vite\` instead. You can read more in \`https://nuxt.com/docs/api/nuxt-config#vite\`.`
+    createWarningMessage: (foundFile) => `Using \`${foundFile}\` is not supported together with Nuxt. Use \`options.vite\` instead. You can read more in \`https://nuxt.com/docs/4.x/api/nuxt-config#vite\`.`
   });
 }
 async function checkWebpackConfig() {
   return await checkAndWarnAboutConfigFileExistence({
     fileName: "webpack.config",
     extensions: [".js", ".mjs", ".ts", ".cjs", ".mts", ".cts", "coffee"],
-    createWarningMessage: (foundFile) => `Using \`${foundFile}\` is not supported together with Nuxt. Use \`options.webpack\` instead. You can read more in \`https://nuxt.com/docs/api/nuxt-config#webpack-1\`.`
+    createWarningMessage: (foundFile) => `Using \`${foundFile}\` is not supported together with Nuxt. Use \`options.webpack\` instead. You can read more in \`https://nuxt.com/docs/4.x/api/nuxt-config#webpack-1\`.`
   });
 }
 async function checkNitroConfig() {
   return await checkAndWarnAboutConfigFileExistence({
     fileName: "nitro.config",
     extensions: [".ts", ".mts"],
-    createWarningMessage: (foundFile) => `Using \`${foundFile}\` is not supported together with Nuxt. Use \`options.nitro\` instead. You can read more in \`https://nuxt.com/docs/api/nuxt-config#nitro\`.`
+    createWarningMessage: (foundFile) => `Using \`${foundFile}\` is not supported together with Nuxt. Use \`options.nitro\` instead. You can read more in \`https://nuxt.com/docs/4.x/api/nuxt-config#nitro\`.`
   });
 }
 async function checkPostCSSConfig() {
   return await checkAndWarnAboutConfigFileExistence({
     fileName: "postcss.config",
     extensions: [".js", ".cjs"],
-    createWarningMessage: (foundFile) => `Using \`${foundFile}\` is not supported together with Nuxt. Use \`options.postcss\` instead. You can read more in \`https://nuxt.com/docs/api/nuxt-config#postcss\`.`
+    createWarningMessage: (foundFile) => `Using \`${foundFile}\` is not supported together with Nuxt. Use \`options.postcss\` instead. You can read more in \`https://nuxt.com/docs/4.x/api/nuxt-config#postcss\`.`
   });
 }
 async function checkAndWarnAboutConfigFileExistence(options) {
@@ -7356,7 +7291,7 @@ async function loadBuilder(nuxt, builder) {
   try {
     return await importModule(builder, { url: [directoryToURL(nuxt.options.rootDir), new URL(import.meta.url)] });
   } catch (err) {
-    throw new Error(`Loading \`${builder}\` builder failed. You can read more about the nuxt \`builder\` option at: \`https://nuxt.com/docs/api/nuxt-config#builder\``, { cause: err });
+    throw new Error(`Loading \`${builder}\` builder failed. You can read more about the nuxt \`builder\` option at: \`https://nuxt.com/docs/4.x/api/nuxt-config#builder\``, { cause: err });
   }
 }
 function resolvePathsToWatch(nuxt, opts = {}) {
diff --git a/dist/pages/runtime/app.d.vue.ts b/dist/pages/runtime/app.d.vue.ts
new file mode 100644
index 0000000000000000000000000000000000000000..7711b0ce8febbd198036e338d6529f695178f664
--- /dev/null
+++ b/dist/pages/runtime/app.d.vue.ts
@@ -0,0 +1,2 @@
+declare const _default: import("vue").DefineComponent<{}, {}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<{}> & Readonly<{}>, {}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
+export default _default;
diff --git a/dist/pages/runtime/page.js b/dist/pages/runtime/page.js
index f998d289a07c60b82b7a3e99f5bf9b7ab37bd37b..3e8c2d7c450eeac35f023b3c521a818ed10a8fc9 100644
--- a/dist/pages/runtime/page.js
+++ b/dist/pages/runtime/page.js
@@ -170,10 +170,16 @@ export default defineComponent({
   }
 });
 function _mergeTransitionProps(routeProps) {
-  const _props = routeProps.filter(Boolean).map((prop) => ({
-    ...prop,
-    onAfterLeave: prop.onAfterLeave ? toArray(prop.onAfterLeave) : void 0
-  }));
+  const _props = [];
+  for (const prop of routeProps) {
+    if (!prop) {
+      continue;
+    }
+    _props.push({
+      ...prop,
+      onAfterLeave: prop.onAfterLeave ? toArray(prop.onAfterLeave) : void 0
+    });
+  }
   return defu(..._props);
 }
 function haveParentRoutesRendered(fork, newRoute, Component) {
diff --git a/dist/pages/runtime/plugins/router.js b/dist/pages/runtime/plugins/router.js
index db0485c321522b40a035cf1d48af227bcaaa913f..08292614ccaf2954fe48ddf0357afc60882e9928 100644
--- a/dist/pages/runtime/plugins/router.js
+++ b/dist/pages/runtime/plugins/router.js
@@ -165,6 +165,9 @@ const plugin = defineNuxtPlugin({
             throw new Error(`Unknown route middleware: '${entry}'.`);
           }
           try {
+            if (import.meta.dev) {
+              nuxtApp._processingMiddleware = middleware._path || (typeof entry === "string" ? entry : true);
+            }
             const result = await nuxtApp.runWithContext(() => middleware(to, from));
             if (import.meta.server || !nuxtApp.payload.serverRendered && nuxtApp.isHydrating) {
               if (result === false || result instanceof Error) {
diff --git a/dist/pages/runtime/router.options.js b/dist/pages/runtime/router.options.js
index 9614b5729fec2c00366c2442bfeeecc0d9e39020..0454534ad50e87728ee55ba45f586f2b83875be8 100644
--- a/dist/pages/runtime/router.options.js
+++ b/dist/pages/runtime/router.options.js
@@ -6,7 +6,7 @@ export default {
   scrollBehavior(to, from, savedPosition) {
     const nuxtApp = useNuxtApp();
     const hashScrollBehaviour = useRouter().options?.scrollBehaviorType ?? "auto";
-    if (to.path === from.path) {
+    if (to.path.replace(/\/$/, "") === from.path.replace(/\/$/, "")) {
       if (from.hash && !to.hash) {
         return { left: 0, top: 0 };
       }
